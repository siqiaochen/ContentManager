  WebGrease.Ajax.Css.Strings.resources - Embedded, ContainedInManifestFile, 
  WebGrease.Ajax.JavaScript.JScript.resources - Embedded, ContainedInManifestFile, 
  WebGrease.Css.CssStrings.resources - Embedded, ContainedInManifestFile, 
  WebGrease.ImageAssemble.ImageAssembleStrings.resources - Embedded, ContainedInManifestFile, 
  WebGrease.ResourceStrings.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly WebGrease, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Antlr3.Runtime, Version=3.3.1.7705, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class WebGrease.Activities.CssLocalizationActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DestinationDirectory 'get set' : 
    System.String ThemesResourcesDirectory 'get set' : 
    System.String LocalesResourcesDirectory 'get set' : 
    System.String HashedImagesLogFile 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Activities.CssLocalizationInput] CssLocalizationInputs 'get set' : 
  Methods:
    get_DestinationDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThemesResourcesDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ThemesResourcesDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_LocalesResourcesDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LocalesResourcesDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_HashedImagesLogFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HashedImagesLogFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_CssLocalizationInputs(): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Class WebGrease.Activities.CssLocalizationInput: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] Locales 'get set' : 
    System.Collections.Generic.IList`1[System.String] Themes 'get set' : 
    System.String SourceFile 'get set' : 
    System.String DestinationFile 'get set' : 
  Methods:
    get_Locales(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Themes(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SourceFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SourceFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Activities.ErrorCode: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Default = WF000 : Public, Static, Literal, HasDefault
Class WebGrease.Activities.JSLocalizationActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DestinationDirectory 'get set' : 
    System.String ResourcesDirectory 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Activities.JSLocalizationInput] JsLocalizationInputs 'get set' : 
  Methods:
    get_DestinationDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResourcesDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ResourcesDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_JsLocalizationInputs(): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Class WebGrease.Activities.JSLocalizationInput: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] Locales 'get set' : 
    System.String SourceFile 'get set' : 
    System.String DestinationFile 'get set' : 
  Methods:
    get_Locales(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SourceFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SourceFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Activities.CssImageReferencesExpander: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    System.Text.RegularExpressions.Regex HashRegex 'get set' : 
    System.Text.RegularExpressions.Regex UrlRegex 'get set' : 
    System.String HashXPath 'get set' : 
  Methods:
    get_HashRegex(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_UrlRegex(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_HashXPath(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    UpdateForHashReferences(RenamedFilesLogs, String): PrivateScope, Public, Static, HideBySig
Class WebGrease.Activities.EverythingActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(WebGrease.Configuration.WebGreaseConfiguration, System.Action`1[System.String], LogErrorDelegate, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(): PrivateScope, Assembly, HideBySig
Class WebGrease.Activities.MinifierSettings: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.CodeSettings CurrentCodeSettings 'get set' : 
    System.Collections.Generic.List`1[System.String] GlobalVariables 'get set' : 
    Int32 WarningLevel 'get set' : 
    Boolean EnsureTrailingSemicolon 'get set' : 
    System.Text.Encoding EncodingInput 'get set' : 
    System.Text.Encoding EncodingOutput 'get ' : 
  Methods:
    get_CurrentCodeSettings(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CurrentCodeSettings(CodeSettings): PrivateScope, Assembly, HideBySig, SpecialName
    get_GlobalVariables(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GlobalVariables(List`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_WarningLevel(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WarningLevel(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EnsureTrailingSemicolon(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EnsureTrailingSemicolon(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_EncodingInput(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EncodingInput(Encoding): PrivateScope, Assembly, HideBySig, SpecialName
    get_EncodingOutput(): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Activities.MinifyJSActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceFile 'get set' : 
    System.String DestinationFile 'get set' : 
    System.String MandatoryArgs 'get set' : 
    System.String MinifyArgs 'get set' : 
    System.String AnalyzeArgs 'get set' : 
    Boolean ShouldAnalyze 'get set' : 
    Boolean ShouldMinify 'get set' : 
  Methods:
    get_SourceFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SourceFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_MandatoryArgs(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MandatoryArgs(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_MinifyArgs(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MinifyArgs(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_AnalyzeArgs(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AnalyzeArgs(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldAnalyze(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldAnalyze(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldMinify(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldMinify(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Class WebGrease.Activities.RenamedFile: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Xml.Linq.XContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OutputName 'get set' : 
    System.Collections.Generic.List`1[System.String] InputNames 'get set' : 
  Methods:
    get_OutputName(): PrivateScope, Public, HideBySig, SpecialName
    get_InputNames(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Activities.RenamedFilesLog: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[WebGrease.Activities.RenamedFile] RenamedFiles 'get set' : 
  Methods:
    get_RenamedFiles(): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Activities.RenamedFilesLogs: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.Generic.ICollection`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NormalizeSlash(String): PrivateScope, Public, Static, HideBySig
    HasItems(): PrivateScope, Public, HideBySig
    FindHashPath(String): PrivateScope, Public, HideBySig
    AllInputFileNamesMatch(String, List`1): PrivateScope, Public, HideBySig
Class WebGrease.Activities.ResourceDirectoryPath: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Directory 'get set' : 
    Boolean AllowOverrides 'get set' : 
  Methods:
    get_Directory(): PrivateScope, Public, HideBySig, SpecialName
    set_Directory(String): PrivateScope, Public, HideBySig, SpecialName
    get_AllowOverrides(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowOverrides(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Activities.ResourceOverrideException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileName 'get set' : 
    System.String TokenKey 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_TokenKey(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Activities.ResourcesManager: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryGetResources(String, String, Dictionary`2&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetLazyLoadReferencesFromResources(IDictionary`2, RenamedFilesLogs, HashSet`1&(Out)): PrivateScope, Public, Static, HideBySig
    HasResources(String, String, String&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetIgnoreReferencesFromResources(IDictionary`2, RenamedFilesLogs, HashSet`1&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetPaddingFromResources(IDictionary`2, Int32&(Out)): PrivateScope, Public, Static, HideBySig
Class WebGrease.Activities.ResourcesResolver: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Methods:
    Factory(String, ResourceType, String, String, IEnumerable`1, String): PrivateScope, Assembly, Static, HideBySig
    ResolveHierarchy(): PrivateScope, Assembly, HideBySig
    ReadResources(String): PrivateScope, Assembly, Static, HideBySig
    ExpandResourceKeys(String, Dictionary`2): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Activities.ResourcesResolutionActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceDirectory 'get set' : 
    WebGrease.Activities.ResourceType ResourceTypeFilter 'get set' : 
    System.String ApplicationDirectoryName 'get set' : 
    System.String SiteDirectoryName 'get set' : 
    System.String DestinationDirectory 'get set' : 
    System.Collections.Generic.IList`1[System.String] ResourceKeys 'get set' : 
  Methods:
    get_SourceDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SourceDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResourceTypeFilter(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ResourceTypeFilter(ResourceType): PrivateScope, Assembly, HideBySig, SpecialName
    get_ApplicationDirectoryName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ApplicationDirectoryName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_SiteDirectoryName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SiteDirectoryName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResourceKeys(): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Struct WebGrease.Activities.ResourceType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Activities.ResourceType Themes = 0 : Public, Static, Literal, HasDefault
    WebGrease.Activities.ResourceType Locales = 1 : Public, Static, Literal, HasDefault
Class WebGrease.Activities.AssemblerActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[WebGrease.Configuration.InputSpec] Inputs 'get set' : 
    System.String OutputFile 'get set' : 
  Methods:
    get_Inputs(): PrivateScope, Assembly, HideBySig, SpecialName
    get_OutputFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_OutputFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Class WebGrease.Activities.MinifyCssActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceFile 'get set' : 
    System.String DestinationFile 'get set' : 
    Boolean ShouldExcludeProperties 'get set' : 
    Boolean ShouldValidateForLowerCase 'get set' : 
    Boolean ShouldOptimize 'get set' : 
    Boolean ShouldAssembleBackgroundImages 'get set' : 
    Boolean ShouldMinify 'get set' : 
    System.Collections.Generic.HashSet`1[System.String] HackSelectors 'get set' : 
    System.Collections.Generic.HashSet`1[System.String] BannedSelectors 'get set' : 
    System.String ImageAssembleScanDestinationFile 'get set' : 
    System.String ImageAssembleUpdateDestinationFile 'get set' : 
    System.String ImagesOutputDirectory 'get set' : 
    System.Collections.Generic.HashSet`1[System.String] ImageAssembleReferencesToIgnore 'get set' : 
    System.String ImageAssemblyPadding 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput] AdditionalImageAssemblyBuckets 'get set' : 
    System.Exception ParserException 'get set' : 
  Methods:
    get_SourceFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SourceFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldExcludeProperties(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldExcludeProperties(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldValidateForLowerCase(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldValidateForLowerCase(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldOptimize(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldOptimize(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldAssembleBackgroundImages(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldAssembleBackgroundImages(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldMinify(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldMinify(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HackSelectors(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BannedSelectors(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageAssembleScanDestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageAssembleScanDestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageAssembleUpdateDestinationFile(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageAssembleUpdateDestinationFile(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImagesOutputDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImagesOutputDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageAssembleReferencesToIgnore(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageAssemblyPadding(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageAssemblyPadding(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_AdditionalImageAssemblyBuckets(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AdditionalImageAssemblyBuckets(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_ParserException(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ParserException(Exception): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    Execute(): PrivateScope, Assembly, HideBySig
Class Microsoft.Ajax.Utilities.ColorName: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Strict 'get set' : 
    System.String Name 'get set' : 
    System.String Hex 'get set' : 
  Methods:
    get_Strict(): PrivateScope, Public, HideBySig, SpecialName
    set_Strict(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Hex(): PrivateScope, Public, HideBySig, SpecialName
    set_Hex(String): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.ColorNameData: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Microsoft.Ajax.Utilities.ColorName[] ColorName 'get set' : 
  Methods:
    get_ColorName(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.ColorQuery: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
Class Microsoft.Ajax.Utilities.ColorSlice`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Type parameter: T, Microsoft.Ajax.Utilities.ColorQuery,  DefaultConstructor
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Data 'get set' : 
  Methods:
    get_Data(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.AllColorNames: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ColorQuery
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.StrictHexShorterThanNameAndAllNonStrict: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ColorQuery
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.HexShorterThanName: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ColorQuery
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.StrictNameShorterThanHex: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ColorQuery
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.NameShorterThanHex: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ColorQuery
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Results 'get ' : 
  Methods:
    get_Results(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.CssParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.CssSettings Settings 'get set' : 
    System.String FileContext 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Ajax.Utilities.CssErrorEventArgs] CssError: 
  Methods:
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    set_Settings(CssSettings): PrivateScope, Public, HideBySig, SpecialName
    get_FileContext(): PrivateScope, Public, HideBySig, SpecialName
    set_FileContext(String): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Public, HideBySig
    add_CssError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CssError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Ajax.Utilities.CssComment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.CssComment Important = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.CssComment None = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.CssComment All = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.CssComment Hacks = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Ajax.Utilities.CssColor: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.CssColor Strict = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.CssColor Hex = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.CssColor Major = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.CssException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(Int32, System.String, Int32, Int32, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, Int32, Int32, Int32, System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Originator 'get ' : 
    Int32 Severity 'get ' : 
    Int32 Line 'get ' : 
    Int32 Char 'get ' : 
    Int32 Error 'get ' : 
  Methods:
    get_Originator(): PrivateScope, Public, HideBySig, SpecialName
    get_Severity(): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    get_Char(): PrivateScope, Public, HideBySig, SpecialName
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.CssParserException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.CssException
    Void .ctor(Int32, Int32, Int32, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.CssErrorEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Ajax.Utilities.CssException, Microsoft.Ajax.Utilities.ContextError): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.ContextError Error 'get set' : 
    Microsoft.Ajax.Utilities.CssException Exception 'get set' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.CssScanner: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RawNumber 'get ' : 
    Boolean AllowEmbeddedAspNetBlocks 'get set' : 
    Boolean EndOfFile 'get ' : 
  Events:
    System.EventHandler`1[Microsoft.Ajax.Utilities.CssScannerErrorEventArgs] ScannerError: 
  Methods:
    get_RawNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEmbeddedAspNetBlocks(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEmbeddedAspNetBlocks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EndOfFile(): PrivateScope, Public, HideBySig, SpecialName
    NextToken(): PrivateScope, Public, HideBySig
    IsH(Char): PrivateScope, Public, Static, HideBySig
    IsNmChar(Char): PrivateScope, Assembly, Static, HideBySig
    PeekChar(): PrivateScope, Public, HideBySig
    add_ScannerError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ScannerError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.CssScannerException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.CssException
    Void .ctor(Int32, Int32, Int32, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.CssScannerErrorEventArgs: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Ajax.Utilities.CssScannerException): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.CssScannerException Exception 'get set' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.CommonSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Int32 IndentSize 'get set' : 
    Int32 LineBreakThreshold 'get set' : 
    Microsoft.Ajax.Utilities.OutputMode OutputMode 'get set' : 
    Boolean TermSemicolons 'get set' : 
    Int64 KillSwitch 'get set' : 
    System.String TabSpaces 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] IgnoreErrors 'get set' : 
    System.String IgnoreErrorList 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] PreprocessorDefines 'get set' : 
    System.String PreprocessorDefineList 'get set' : 
    System.Collections.Generic.IList`1[Microsoft.Ajax.Utilities.ResourceStrings] ResourceStrings 'get ' : 
  Methods:
    get_IndentSize(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineBreakThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_LineBreakThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OutputMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputMode(OutputMode): PrivateScope, Public, HideBySig, SpecialName
    get_TermSemicolons(): PrivateScope, Public, HideBySig, SpecialName
    set_TermSemicolons(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_KillSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_KillSwitch(Int64): PrivateScope, Public, HideBySig, SpecialName
    Indent(): PrivateScope, Assembly, HideBySig
    Unindent(): PrivateScope, Assembly, HideBySig
    get_TabSpaces(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IgnoreErrors(): PrivateScope, Public, HideBySig, SpecialName
    SetIgnoreErrors(String[]): PrivateScope, Public, HideBySig
    get_IgnoreErrorList(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreErrorList(String): PrivateScope, Public, HideBySig, SpecialName
    get_PreprocessorDefines(): PrivateScope, Public, HideBySig, SpecialName
    SetPreprocessorDefines(String[]): PrivateScope, Public, HideBySig
    get_PreprocessorDefineList(): PrivateScope, Public, HideBySig, SpecialName
    set_PreprocessorDefineList(String): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceStrings(): PrivateScope, Public, HideBySig, SpecialName
    AddResourceStrings(ResourceStrings): PrivateScope, Public, HideBySig
    AddResourceStrings(IEnumerable`1): PrivateScope, Public, HideBySig
    ClearResourceStrings(): PrivateScope, Public, HideBySig
    RemoveResourceStrings(ResourceStrings): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.CssSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.CommonSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.CssColor ColorNames 'get set' : 
    Microsoft.Ajax.Utilities.CssComment CommentMode 'get set' : 
    Boolean MinifyExpressions 'get set' : 
    Boolean AllowEmbeddedAspNetBlocks 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_ColorNames(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorNames(CssColor): PrivateScope, Public, HideBySig, SpecialName
    get_CommentMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CommentMode(CssComment): PrivateScope, Public, HideBySig, SpecialName
    get_MinifyExpressions(): PrivateScope, Public, HideBySig, SpecialName
    set_MinifyExpressions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEmbeddedAspNetBlocks(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEmbeddedAspNetBlocks(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Ajax.Utilities.StringEnum: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.StringEnum NoError = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum SeverityUnknown = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum Severity0 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum Severity1 = 3 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum Severity2 = 4 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum Severity3 = 5 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum Severity4 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnknownError = 1000 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnterminatedComment = 1001 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnterminatedString = 1002 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnnecessaryUnits = 1003 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedNumberCharacter = 1004 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedOpenParen = 1005 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum InvalidLowSurrogate = 1006 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum HighSurrogateNoLow = 1007 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnderscoreNotValid = 1008 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedEscape = 1009 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedStringCharacter = 1010 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum DecimalNoDigit = 1011 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum EquivalentNumbers = 1012 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ScannerSubsystem = 1013 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum FallbackEncodingFailed = 1014 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnknownCharacterEncoding = 1015 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ParserSubsystem = 1016 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedCharset = 1017 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedSemicolon = 1018 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedToken = 1019 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedAtKeyword = 1020 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedNamespace = 1021 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedImport = 1022 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedCommaOrSemicolon = 1023 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedMediaIdentifier = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedCommaOrOpenBrace = 1025 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedOpenBrace = 1026 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedSemicolonOrOpenBrace = 1027 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum DeclarationIgnoredFormat = 1028 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum DeclarationIgnored = 1029 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedIdentifier = 1030 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedSelector = 1031 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedIdentifierOrString = 1032 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedClosingBracket = 1033 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedClosingParen = 1034 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedColon = 1035 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedExpression = 1036 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum HashAfterUnaryNotAllowed = 1037 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedHexColor = 1038 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum TokenAfterUnaryNotAllowed = 1039 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UnexpectedDimension = 1040 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedProgId = 1041 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedFunction = 1042 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ProgIdIEOnly = 1043 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedEqualSign = 1044 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedTerm = 1045 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedComma = 1046 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedRgbNumberOrPercentage = 1047 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ColorCanBeCollapsed = 1048 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum HackGeneratesInvalidCSS = 1049 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedEndOfFile = 1050 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum DuplicateNamespaceDeclaration = 1051 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum UndeclaredNamespace = 1052 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum InvalidUnicodeRange = 1053 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpressionError = 1054 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedMediaQueryExpression = 1055 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedMediaFeature = 1056 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedMediaQuery = 1057 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum MediaQueryRequiresSpace = 1058 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum PossibleInvalidClassName = 1059 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedClosingBrace = 1060 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedPercentageFromOrTo = 1061 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedSemicolonOrClosingBrace = 1062 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedUnit = 1063 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedProduct = 1064 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedSum = 1065 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.StringEnum ExpectedMinMax = 1066 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.CssStringMgr: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    GetString(StringEnum, Object[]): PrivateScope, Public, Static, HideBySig
Class Microsoft.Ajax.Utilities.CssToken: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.TokenType, System.String, Microsoft.Ajax.Utilities.CssContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.TokenType, Char, Microsoft.Ajax.Utilities.CssContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.TokenType TokenType 'get ' : 
    System.String Text 'get ' : 
    Microsoft.Ajax.Utilities.CssContext Context 'get ' : 
  Methods:
    get_TokenType(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.CssContext: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.Position, Microsoft.Ajax.Utilities.Position): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.Position Start 'get ' : 
    Microsoft.Ajax.Utilities.Position End 'get ' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    Advance(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.Position: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Line 'get ' : 
    Int32 Char 'get ' : 
  Methods:
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    get_Char(): PrivateScope, Public, HideBySig, SpecialName
    NextLine(): PrivateScope, Public, HideBySig
    NextChar(): PrivateScope, Public, HideBySig
    PreviousChar(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Struct Microsoft.Ajax.Utilities.TokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.TokenType None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Space = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType CommentOpen = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType CommentClose = 3 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Includes = 4 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType DashMatch = 5 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType PrefixMatch = 6 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType SuffixMatch = 7 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType SubstringMatch = 8 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType String = 9 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Identifier = 10 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Hash = 11 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType ImportSymbol = 12 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType PageSymbol = 13 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType MediaSymbol = 14 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType FontFaceSymbol = 15 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType CharacterSetSymbol = 16 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType AtKeyword = 17 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType ImportantSymbol = 18 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType NamespaceSymbol = 19 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType KeyFramesSymbol = 20 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType RelativeLength = 21 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType AbsoluteLength = 22 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Resolution = 23 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Angle = 24 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Time = 25 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Frequency = 26 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Dimension = 27 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Percentage = 28 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Number = 29 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Uri = 30 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Function = 31 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Not = 32 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType UnicodeRange = 33 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType ProgId = 34 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Character = 35 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Comment = 36 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType TopLeftCornerSymbol = 37 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType TopLeftSymbol = 38 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType TopCenterSymbol = 39 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType TopRightSymbol = 40 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType TopRightCornerSymbol = 41 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType BottomLeftCornerSymbol = 42 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType BottomLeftSymbol = 43 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType BottomCenterSymbol = 44 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType BottomRightSymbol = 45 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType BottomRightCornerSymbol = 46 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType LeftTopSymbol = 47 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType LeftMiddleSymbol = 48 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType LeftBottomSymbol = 49 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType RightTopSymbol = 50 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType RightMiddleSymbol = 51 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType RightBottomSymbol = 52 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType AspNetBlock = 53 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TokenType Error = -1 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.ActivationObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean IsKnownAtCompileTime 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,Microsoft.Ajax.Utilities.JSVariableField] NameTable 'get ' : 
    System.Collections.Generic.List`1[Microsoft.Ajax.Utilities.JSVariableField] FieldTable 'get ' : 
    System.Collections.Generic.List`1[Microsoft.Ajax.Utilities.ActivationObject] ChildScopes 'get ' : 
    System.Collections.Generic.Dictionary`2[Microsoft.Ajax.Utilities.JSVariableField,Microsoft.Ajax.Utilities.JSVariableField] Verboten 'get set' : 
    Microsoft.Ajax.Utilities.ActivationObject Parent 'get ' : 
    Boolean IsInWithScope 'get ' : 
    Boolean UseStrict 'get set' : 
    Microsoft.Ajax.Utilities.JSVariableField Item [System.String] 'get ' : 
  Methods:
    get_IsKnownAtCompileTime(): PrivateScope, Public, HideBySig, SpecialName
    set_IsKnownAtCompileTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NameTable(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FieldTable(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ChildScopes(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Verboten(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInWithScope(): PrivateScope, Public, HideBySig, SpecialName
    get_UseStrict(): PrivateScope, Public, HideBySig, SpecialName
    set_UseStrict(Boolean): PrivateScope, Public, HideBySig, SpecialName
    AnalyzeScope(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AnalyzeLiterals(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReserveFields(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ValidateGeneratedNames(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    HyperCrunch(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetUncrunchedLocals(): PrivateScope, Assembly, HideBySig
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FindReference(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeclareField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateField(JSVariableField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInnerField(JSVariableField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddField(JSVariableField): PrivateScope, Assembly, HideBySig
    GetLocalField(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddLiteral(ConstantWrapper, ActivationObject): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetFields(): PrivateScope, Public, HideBySig
Interface Microsoft.Ajax.Utilities.IVisitor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Visit(ImportantComment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(LabeledStatement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Lookup): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Member): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(NumericUnary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ObjectLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ObjectLiteralField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(PostOrPrefixOperator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(RegExpLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ReturnNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Switch): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(SwitchCase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ThisLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ThrowNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(TryNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(TypeOfNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Var): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(VariableDeclaration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(VoidNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(WhileNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(WithNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ArrayLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(AspNetBlockNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(AstNodeList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(BinaryOperator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Block): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Break): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(CallNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationComment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationElse): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationEnd): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationIf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationOn): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConditionalCompilationSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Conditional): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConstantWrapper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ConstantWrapperPP): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ContinueNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(CustomNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DebuggerNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(Delete): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DirectivePrologue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DoWhile): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ForIn): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(ForNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(FunctionObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(GetterSetter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(IfNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Ajax.Utilities.TreeVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Ajax.Utilities.IVisitor
  Methods:
    Visit(ArrayLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(AspNetBlockNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(AstNodeList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(BinaryOperator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Block): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Break): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(CallNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationComment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElse): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationEnd): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationIf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationOn): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Conditional): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapperPP): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ContinueNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(CustomNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(DebuggerNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Delete): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(DirectivePrologue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(DoWhile): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ForIn): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ForNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(FunctionObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(GetterSetter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(IfNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ImportantComment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(LabeledStatement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Lookup): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Member): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(NumericUnary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteralField): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(PostOrPrefixOperator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(RegExpLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ReturnNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Switch): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(SwitchCase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ThisLiteral): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(ThrowNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(TryNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(TypeOfNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(Var): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(VariableDeclaration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(VoidNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(WhileNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visit(WithNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Ajax.Utilities.AnalyzeNodeVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.TreeVisitor
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Visit(BinaryOperator): PrivateScope, Public, Virtual, HideBySig
    Visit(Block): PrivateScope, Public, Virtual, HideBySig
    Visit(Break): PrivateScope, Public, Virtual, HideBySig
    Visit(CallNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Conditional): PrivateScope, Public, Virtual, HideBySig
    Visit(ConditionalCompilationOn): PrivateScope, Public, Virtual, HideBySig
    Visit(ConstantWrapper): PrivateScope, Public, Virtual, HideBySig
    Visit(ContinueNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Delete): PrivateScope, Public, Virtual, HideBySig
    Visit(DoWhile): PrivateScope, Public, Virtual, HideBySig
    Visit(ForNode): PrivateScope, Public, Virtual, HideBySig
    Visit(ForIn): PrivateScope, Public, Virtual, HideBySig
    Visit(FunctionObject): PrivateScope, Public, Virtual, HideBySig
    Visit(IfNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Lookup): PrivateScope, Public, Virtual, HideBySig
    Visit(Member): PrivateScope, Public, Virtual, HideBySig
    Visit(NumericUnary): PrivateScope, Public, Virtual, HideBySig
    Visit(ObjectLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(ObjectLiteralField): PrivateScope, Public, Virtual, HideBySig
    Visit(PostOrPrefixOperator): PrivateScope, Public, Virtual, HideBySig
    Visit(RegExpLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(ReturnNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Switch): PrivateScope, Public, Virtual, HideBySig
    Visit(ThisLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(TryNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Var): PrivateScope, Public, Virtual, HideBySig
    Visit(VariableDeclaration): PrivateScope, Public, Virtual, HideBySig
    Visit(WhileNode): PrivateScope, Public, Virtual, HideBySig
    Visit(WithNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.AstNode: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Microsoft.Ajax.Utilities.AstNode Parent 'get set' : 
    Microsoft.Ajax.Utilities.Context Context 'get set' : 
    Microsoft.Ajax.Utilities.JSParser Parser 'get set' : 
    System.Collections.Generic.Stack`1[Microsoft.Ajax.Utilities.ActivationObject] ScopeStack 'get ' : 
    Boolean IsExpression 'get ' : 
    Boolean RequiresSeparator 'get ' : 
    Boolean IsDebuggerStatement 'get ' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    Boolean HideFromOutput 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean IsWindowLookup 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
    Microsoft.Ajax.Utilities.ActivationObject EnclosingScope 'get ' : 
    Boolean ContainsInOperator 'get ' : 
  Methods:
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(AstNode): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    set_Context(Context): PrivateScope, Public, HideBySig, SpecialName
    get_Parser(): PrivateScope, Public, HideBySig, SpecialName
    get_ScopeStack(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HideFromOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_HideFromOutput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EnumerateNonNullNodes(IList`1): PrivateScope, Assembly, Static, HideBySig
    EnumerateNonNullNodes(AstNode, AstNode(Optional, HasDefault), AstNode(Optional, HasDefault), AstNode(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    get_IsWindowLookup(): PrivateScope, Public, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EnclosingScope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ContainsInOperator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Microsoft.Ajax.Utilities.Expression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
  Properties:
    Boolean IsExpression 'get ' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
  Methods:
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.ArrayLiteral: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNodeList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNodeList Elements 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.AspNetBlockNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTerminatedByExplicitSemicolon 'get set' : 
    System.String AspNetBlockText 'get set' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_IsTerminatedByExplicitSemicolon(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTerminatedByExplicitSemicolon(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AspNetBlockText(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Struct Microsoft.Ajax.Utilities.EncloseBlockType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.EncloseBlockType IfWithoutElse = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.EncloseBlockType SingleDoWhile = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.AstNodeList: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Microsoft.Ajax.Utilities.AstNode Item [Int32] 'get ' : 
    System.String SingleConstantArgument 'get ' : 
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    Append(AstNode): PrivateScope, Assembly, HideBySig
    RemoveAt(Int32): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    IsSingleConstantArgument(String): PrivateScope, Public, HideBySig
    get_SingleConstantArgument(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.BinaryOperator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Operand1 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Operand2 'get set' : 
    Microsoft.Ajax.Utilities.JSToken OperatorToken 'get set' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
    Boolean IsAssign 'get ' : 
    Boolean ContainsInOperator 'get ' : 
  Methods:
    get_Operand1(): PrivateScope, Public, HideBySig, SpecialName
    get_Operand2(): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorToken(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorToken(JSToken): PrivateScope, Public, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SwapOperands(): PrivateScope, Public, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    get_IsAssign(): PrivateScope, Public, HideBySig, SpecialName
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_ContainsInOperator(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.Block: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Item [Int32] 'get set' : 
    Microsoft.Ajax.Utilities.BlockScope BlockScope 'get set' : 
    Microsoft.Ajax.Utilities.ActivationObject EnclosingScope 'get ' : 
    Boolean RequiresSeparator 'get ' : 
    Boolean IsDebuggerStatement 'get ' : 
    Boolean IsExpression 'get ' : 
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, AstNode): PrivateScope, Public, HideBySig, SpecialName
    get_BlockScope(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BlockScope(BlockScope): PrivateScope, Assembly, HideBySig, SpecialName
    get_EnclosingScope(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    StatementIndex(AstNode): PrivateScope, Public, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    Append(AstNode): PrivateScope, Public, HideBySig
    IndexOf(AstNode): PrivateScope, Public, HideBySig
    InsertAfter(AstNode, AstNode): PrivateScope, Public, HideBySig
    Insert(Int32, AstNode): PrivateScope, Public, HideBySig
    RemoveLast(): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    InsertRange(Int32, IEnumerable`1): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.BlockScope: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ActivationObject
  Properties:
    Microsoft.Ajax.Utilities.Context Context 'get ' : 
    Microsoft.Ajax.Utilities.JSVariableField Item [System.String] 'get ' : 
  Methods:
    get_Context(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DeclareField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.Break: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NestLevel 'get set' : 
    System.String Label 'get set' : 
  Methods:
    get_NestLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.CallNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNodeList, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Function 'get ' : 
    Boolean IsConstructor 'get set' : 
    Boolean InBrackets 'get ' : 
    Microsoft.Ajax.Utilities.AstNodeList Arguments 'get ' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    Boolean IsExpression 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
    Boolean IsDebuggerStatement 'get ' : 
  Methods:
    get_Function(): PrivateScope, Public, HideBySig, SpecialName
    get_IsConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConstructor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InBrackets(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.CatchScope: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.BlockScope
    Void .ctor(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateField(JSVariableField): PrivateScope, Public, Virtual, HideBySig
    CreateField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig
    AnalyzeScope(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    HyperCrunch(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.ConditionalCompilationComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.Block Statements 'get set' : 
    Boolean RequiresSeparator 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Statements(): PrivateScope, Public, HideBySig, SpecialName
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    Append(AstNode): PrivateScope, Public, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationStatement: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
  Properties:
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.ConditionalCompilationElseIf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationElse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationEnd: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationIf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationOn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ConditionalCompilationSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConditionalCompilationStatement
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String VariableName 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Value 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_VariableName(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Ajax.Utilities.LocalRenaming: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.LocalRenaming KeepAll = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.LocalRenaming KeepLocalizationVars = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.LocalRenaming CrunchAll = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Ajax.Utilities.EvalTreatment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.EvalTreatment Ignore = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.EvalTreatment MakeImmediateSafe = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.EvalTreatment MakeAllSafe = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.CodeSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.CommonSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasRenamePairs 'get ' : 
    System.String RenamePairs 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] NoAutoRenameIdentifiers 'get set' : 
    System.String NoAutoRenameList 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] KnownGlobalNames 'get set' : 
    System.String KnownGlobalNamesList 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] DebugLookups 'get set' : 
    System.String DebugLookupList 'get set' : 
    Boolean AllowEmbeddedAspNetBlocks 'get set' : 
    Boolean CatchAsLocal 'get set' :  (Obsolete)
    Boolean CollapseToLiteral 'get set' : 
    Boolean CombineDuplicateLiterals 'get set' : 
    Boolean EvalsAreSafe 'get set' :  (Obsolete)
    Boolean EvalLiteralExpressions 'get set' : 
    Microsoft.Ajax.Utilities.EvalTreatment EvalTreatment 'get set' : 
    Boolean IgnoreConditionalCompilation 'get set' : 
    Boolean InlineSafeStrings 'get set' : 
    Microsoft.Ajax.Utilities.LocalRenaming LocalRenaming 'get set' : 
    Boolean MacSafariQuirks 'get set' : 
    Boolean MinifyCode 'get set' : 
    Boolean ManualRenamesProperties 'get set' : 
    Boolean PreserveFunctionNames 'get set' : 
    Boolean PreserveImportantComments 'get set' : 
    Boolean ReorderScopeDeclarations 'get set' : 
    Boolean RemoveFunctionExpressionNames 'get set' : 
    Boolean RemoveUnneededCode 'get set' : 
    Boolean StrictMode 'get set' : 
    Boolean StripDebugStatements 'get set' : 
    Boolean W3Strict 'get set' :  (Obsolete)
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    AddRenamePair(String, String): PrivateScope, Public, HideBySig
    ClearRenamePairs(): PrivateScope, Public, HideBySig
    get_HasRenamePairs(): PrivateScope, Public, HideBySig, SpecialName
    GetNewName(String): PrivateScope, Public, HideBySig
    get_RenamePairs(): PrivateScope, Public, HideBySig, SpecialName
    set_RenamePairs(String): PrivateScope, Public, HideBySig, SpecialName
    get_NoAutoRenameIdentifiers(): PrivateScope, Public, HideBySig, SpecialName
    SetNoAutoRename(String[]): PrivateScope, Public, HideBySig
    get_NoAutoRenameList(): PrivateScope, Public, HideBySig, SpecialName
    set_NoAutoRenameList(String): PrivateScope, Public, HideBySig, SpecialName
    get_KnownGlobalNames(): PrivateScope, Public, HideBySig, SpecialName
    SetKnownGlobalNames(String[]): PrivateScope, Public, HideBySig
    get_KnownGlobalNamesList(): PrivateScope, Public, HideBySig, SpecialName
    set_KnownGlobalNamesList(String): PrivateScope, Public, HideBySig, SpecialName
    get_DebugLookups(): PrivateScope, Public, HideBySig, SpecialName
    SetDebugLookups(String[]): PrivateScope, Public, HideBySig
    get_DebugLookupList(): PrivateScope, Public, HideBySig, SpecialName
    set_DebugLookupList(String): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEmbeddedAspNetBlocks(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEmbeddedAspNetBlocks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CatchAsLocal(): PrivateScope, Public, HideBySig, SpecialName
    set_CatchAsLocal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CollapseToLiteral(): PrivateScope, Public, HideBySig, SpecialName
    set_CollapseToLiteral(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CombineDuplicateLiterals(): PrivateScope, Public, HideBySig, SpecialName
    set_CombineDuplicateLiterals(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EvalsAreSafe(): PrivateScope, Public, HideBySig, SpecialName
    set_EvalsAreSafe(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EvalLiteralExpressions(): PrivateScope, Public, HideBySig, SpecialName
    set_EvalLiteralExpressions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EvalTreatment(): PrivateScope, Public, HideBySig, SpecialName
    set_EvalTreatment(EvalTreatment): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreConditionalCompilation(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreConditionalCompilation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InlineSafeStrings(): PrivateScope, Public, HideBySig, SpecialName
    set_InlineSafeStrings(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRenaming(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalRenaming(LocalRenaming): PrivateScope, Public, HideBySig, SpecialName
    get_MacSafariQuirks(): PrivateScope, Public, HideBySig, SpecialName
    set_MacSafariQuirks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinifyCode(): PrivateScope, Public, HideBySig, SpecialName
    set_MinifyCode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ManualRenamesProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_ManualRenamesProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PreserveFunctionNames(): PrivateScope, Public, HideBySig, SpecialName
    set_PreserveFunctionNames(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PreserveImportantComments(): PrivateScope, Public, HideBySig, SpecialName
    set_PreserveImportantComments(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReorderScopeDeclarations(): PrivateScope, Public, HideBySig, SpecialName
    set_ReorderScopeDeclarations(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RemoveFunctionExpressionNames(): PrivateScope, Public, HideBySig, SpecialName
    set_RemoveFunctionExpressionNames(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RemoveUnneededCode(): PrivateScope, Public, HideBySig, SpecialName
    set_RemoveUnneededCode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StrictMode(): PrivateScope, Public, HideBySig, SpecialName
    set_StrictMode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StripDebugStatements(): PrivateScope, Public, HideBySig, SpecialName
    set_StripDebugStatements(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_W3Strict(): PrivateScope, Public, HideBySig, SpecialName
    set_W3Strict(Boolean): PrivateScope, Public, HideBySig, SpecialName
    IsModificationAllowed(TreeModifications): PrivateScope, Public, HideBySig
Struct Microsoft.Ajax.Utilities.TreeModifications: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.TreeModifications None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications PreserveImportantComments = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications BracketMemberToDotMember = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications NewObjectToObjectLiteral = 4 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications NewArrayToArrayLiteral = 8 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveEmptyDefaultCase = 16 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveEmptyCaseWhenNoDefault = 32 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveBreakFromLastCaseBlock = 64 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveEmptyFinally = 128 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveDuplicateVar = 256 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineVarStatements = 512 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications MoveVarIntoFor = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications VarInitializeReturnToReturnInitializer = 2048 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfEmptyToExpression = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfConditionCallToConditionAndCall = 8192 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfElseReturnToReturnConditional = 16384 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfConditionReturnToCondition = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfConditionFalseToIfNotConditionTrue = 65536 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineAdjacentStringLiterals = 131072 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveUnaryPlusOnNumericLiteral = 262144 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications ApplyUnaryMinusToNumericLiteral = 524288 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications MinifyStringLiterals = 1048576 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications MinifyNumericLiterals = 2097152 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveUnusedParameters = 4194304 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications StripDebugStatements = 8388608 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications LocalRenaming = 16777216 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveFunctionExpressionNames = 33554432 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveUnnecessaryLabels = 67108864 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveUnnecessaryCCOnStatements = 134217728 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications DateGetTimeToUnaryPlus = 268435456 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications EvaluateNumericExpressions = 536870912 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications SimplifyStringToNumericConversion = 1073741824 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications PropertyRenaming = 2147483648 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications PreprocessorDefines = 4294967296 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications RemoveQuotesFromObjectLiteralNames = 8589934592 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications BooleanLiteralsToNotOperators = 17179869184 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfExpressionsToExpression = 34359738368 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineAdjacentExpressionStatements = 68719476736 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications ReduceStrictOperatorIfTypesAreSame = 137438953472 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications ReduceStrictOperatorIfTypesAreDifferent = 274877906944 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications MoveFunctionToTopOfScope = 549755813888 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineVarStatementsToTopOfScope = 1099511627776 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications IfNotTrueFalseToIfFalseTrue = 2199023255552 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications MoveInExpressionsIntoForStatement = 4398046511104 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications InvertIfReturn = 8796093022208 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineNestedIfs = 17592186044416 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications CombineEquivalentIfReturns = 35184372088832 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications ChangeWhileToFor = 70368744177664 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.TreeModifications InvertIfContinue = 140737488355328 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.Conditional: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    Microsoft.Ajax.Utilities.AstNode TrueExpression 'get set' : 
    Microsoft.Ajax.Utilities.AstNode FalseExpression 'get set' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_TrueExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_FalseExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SwapBranches(): PrivateScope, Public, HideBySig
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.ConstantWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(System.Object, Microsoft.Ajax.Utilities.PrimitiveType, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get set' : 
    Microsoft.Ajax.Utilities.PrimitiveType PrimitiveType 'get set' : 
    Boolean IsNumericLiteral 'get ' : 
    Boolean IsFiniteNumericLiteral 'get ' : 
    Boolean IsIntegerLiteral 'get ' : 
    Boolean IsExactInteger 'get ' : 
    Boolean IsNaN 'get ' : 
    Boolean IsInfinity 'get ' : 
    Boolean IsZero 'get ' : 
    Boolean IsBooleanLiteral 'get ' : 
    Boolean IsStringLiteral 'get ' : 
    Boolean IsParameterToRegExp 'get set' : 
    Boolean IsSpecialNumeric 'get ' : 
    Boolean StringContainsAspNetReplacement 'get ' : 
    Boolean IsOkayToCombine 'get ' : 
    Boolean IsNotOneOrPositiveZero 'get ' : 
    Boolean IsNegativeZero 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    get_PrimitiveType(): PrivateScope, Public, HideBySig, SpecialName
    set_PrimitiveType(PrimitiveType): PrivateScope, Public, HideBySig, SpecialName
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    get_IsNumericLiteral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFiniteNumericLiteral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIntegerLiteral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsExactInteger(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNaN(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInfinity(): PrivateScope, Public, HideBySig, SpecialName
    get_IsZero(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBooleanLiteral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsStringLiteral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsParameterToRegExp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterToRegExp(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSpecialNumeric(): PrivateScope, Public, HideBySig, SpecialName
    get_StringContainsAspNetReplacement(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    EscapeString(String, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    ToNumber(): PrivateScope, Public, HideBySig
    get_IsOkayToCombine(): PrivateScope, Public, HideBySig, SpecialName
    NumberIsOkayToCombine(Double): PrivateScope, Public, Static, HideBySig
    get_IsNotOneOrPositiveZero(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNegativeZero(): PrivateScope, Public, HideBySig, SpecialName
    ToInteger(): PrivateScope, Assembly, HideBySig
    ToInt32(): PrivateScope, Assembly, HideBySig
    ToUInt32(): PrivateScope, Assembly, HideBySig
    ToBoolean(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Ajax.Utilities.PrimitiveType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.PrimitiveType Null = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PrimitiveType Boolean = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PrimitiveType Number = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PrimitiveType String = 3 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PrimitiveType Other = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.ConstantWrapperPP: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(System.String, Boolean, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String VarName 'get ' : 
    Boolean ForceComments 'get set' : 
  Methods:
    get_VarName(): PrivateScope, Public, HideBySig, SpecialName
    get_ForceComments(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.Context: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.DocumentContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.DocumentContext, Int32, Int32, Int32, Int32, Int32, Int32, Microsoft.Ajax.Utilities.JSToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.DocumentContext Document 'get set' : 
    Int32 StartLineNumber 'get set' : 
    Int32 StartLinePosition 'get set' : 
    Int32 StartPosition 'get set' : 
    Int32 EndLineNumber 'get set' : 
    Int32 EndLinePosition 'get set' : 
    Int32 EndPosition 'get set' : 
    Microsoft.Ajax.Utilities.JSToken Token 'get set' : 
    Int32 StartColumn 'get ' : 
    Int32 EndColumn 'get ' : 
    System.String Code 'get ' : 
  Methods:
    get_Document(): PrivateScope, Public, HideBySig, SpecialName
    get_StartLineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_StartLineNumber(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_StartLinePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StartLinePosition(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_StartPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StartPosition(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EndLineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLineNumber(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EndLinePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLinePosition(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EndPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_EndPosition(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Token(): PrivateScope, Public, HideBySig, SpecialName
    set_Token(JSToken): PrivateScope, Assembly, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    CombineWith(Context): PrivateScope, Public, HideBySig
    get_StartColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_EndColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    ReportUndefined(Lookup): PrivateScope, Assembly, HideBySig
    HandleError(JSError): PrivateScope, Assembly, HideBySig
    HandleError(JSError, Boolean): PrivateScope, Assembly, HideBySig
    HandleError(JSError, String, Boolean): PrivateScope, Assembly, HideBySig
    UpdateWith(Context): PrivateScope, Public, HideBySig
    IsBefore(Context): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ContinueNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Label 'get set' : 
    Int32 NestLevel 'get set' : 
  Methods:
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    get_NestLevel(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.CrunchEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.Dictionary`2[System.String,System.String]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.Dictionary`2[Microsoft.Ajax.Utilities.JSVariableField,Microsoft.Ajax.Utilities.JSVariableField]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    NextName(): PrivateScope, Assembly, HideBySig
    CrunchedLabel(Int32): PrivateScope, Public, Static, HideBySig
    GenerateNameFromNumber(Int32): PrivateScope, Public, Static, HideBySig
Class Microsoft.Ajax.Utilities.ReferenceComparer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    System.Collections.Generic.IComparer`1[Microsoft.Ajax.Utilities.JSVariableField]
  Fields:
    System.Collections.Generic.IComparer`1[Microsoft.Ajax.Utilities.JSVariableField] Instance : Public, Static, InitOnly
  Methods:
    Compare(JSVariableField, JSVariableField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Ajax.Utilities.CustomNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ToCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.DebuggerNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsDebuggerStatement 'get ' : 
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.UnaryOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
  Properties:
    Microsoft.Ajax.Utilities.AstNode Operand 'get set' : 
    Microsoft.Ajax.Utilities.JSToken OperatorToken 'get set' : 
    Boolean OperatorInConditionalCompilationComment 'get set' : 
    Boolean ConditionalCommentContainsOn 'get set' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorToken(): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorInConditionalCompilationComment(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorInConditionalCompilationComment(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionalCommentContainsOn(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionalCommentContainsOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.Delete: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.UnaryOperator
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.DirectivePrologue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConstantWrapper
    Void .ctor(System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UseStrict 'get set' : 
    Boolean IsRedundant 'get set' : 
    Boolean IsExpression 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_UseStrict(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRedundant(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRedundant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.DocumentContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSParser, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Source 'get set' : 
    System.String FileContext 'get set' : 
    Boolean IsGenerated 'get set' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    get_FileContext(): PrivateScope, Public, HideBySig, SpecialName
    set_FileContext(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenerated(): PrivateScope, Public, HideBySig, SpecialName
    HandleError(JScriptException): PrivateScope, Assembly, HideBySig
    ReportUndefined(UndefinedReferenceException): PrivateScope, Assembly, HideBySig
    HasAlreadySeenErrorFor(String): PrivateScope, Assembly, HideBySig
Class Microsoft.Ajax.Utilities.DoWhile: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    Boolean RequiresSeparator 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Block): PrivateScope, Public, HideBySig, SpecialName
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(AstNode): PrivateScope, Public, HideBySig, SpecialName
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.EvaluateLiteralVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.TreeVisitor
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Visit(BinaryOperator): PrivateScope, Public, Virtual, HideBySig
    Visit(Conditional): PrivateScope, Public, Virtual, HideBySig
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Virtual, HideBySig
    Visit(ConditionalCompilationIf): PrivateScope, Public, Virtual, HideBySig
    Visit(DoWhile): PrivateScope, Public, Virtual, HideBySig
    Visit(ForNode): PrivateScope, Public, Virtual, HideBySig
    Visit(IfNode): PrivateScope, Public, Virtual, HideBySig
    Visit(NumericUnary): PrivateScope, Public, Virtual, HideBySig
    Visit(TypeOfNode): PrivateScope, Public, Virtual, HideBySig
    Visit(VoidNode): PrivateScope, Public, Virtual, HideBySig
    Visit(WhileNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.FinalPassVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.TreeVisitor
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Visit(ConstantWrapper): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ForNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Initializer 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Incrementer 'get set' : 
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    Boolean RequiresSeparator 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Initializer(): PrivateScope, Public, HideBySig, SpecialName
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_Incrementer(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    SetInitializer(AstNode): PrivateScope, Public, HideBySig
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ForIn: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Variable 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Collection 'get set' : 
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.FunctionObject: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Lookup, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.FunctionType, Microsoft.Ajax.Utilities.ParameterDeclaration[], Microsoft.Ajax.Utilities.Block, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.FunctionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    Microsoft.Ajax.Utilities.FunctionType FunctionType 'get set' : 
    System.Collections.Generic.IList`1[Microsoft.Ajax.Utilities.ParameterDeclaration] ParameterDeclarations 'get ' : 
    Boolean LeftHandFunctionExpression 'get set' : 
    Microsoft.Ajax.Utilities.Lookup Identifier 'get set' : 
    System.String Name 'get set' : 
    Microsoft.Ajax.Utilities.Context IdContext 'get ' : 
    Boolean IsExpression 'get ' : 
    Boolean IsSourceElement 'get set' : 
    Microsoft.Ajax.Utilities.JSLocalField LocalField 'get ' : 
    Int32 RefCount 'get ' : 
    Microsoft.Ajax.Utilities.FunctionScope FunctionScope 'get ' : 
    Microsoft.Ajax.Utilities.ActivationObject EnclosingScope 'get ' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionType(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterDeclarations(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftHandFunctionExpression(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftHandFunctionExpression(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_IdContext(): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSourceElement(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSourceElement(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LocalField(): PrivateScope, Public, HideBySig, SpecialName
    get_RefCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionScope(): PrivateScope, Public, HideBySig, SpecialName
    get_EnclosingScope(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsReferenced(Int32): PrivateScope, Assembly, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    AddGeneratedVar(String, AstNode, Boolean): PrivateScope, Assembly, HideBySig
    IsArgumentTrimmable(JSArgumentField): PrivateScope, Assembly, HideBySig
    DetachFromOuterField(Boolean): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.FunctionScope: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ActivationObject
    Void .ctor(Microsoft.Ajax.Utilities.ActivationObject, Boolean, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.FunctionObject FunctionObject 'get set' : 
  Methods:
    get_FunctionObject(): PrivateScope, Public, HideBySig, SpecialName
    set_FunctionObject(FunctionObject): PrivateScope, Public, HideBySig, SpecialName
    AddThisLiteral(ThisLiteral): PrivateScope, Assembly, HideBySig
    AnalyzeScope(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AddNewArgumentField(String): PrivateScope, Assembly, HideBySig
    AddArgumentsField(): PrivateScope, Assembly, HideBySig
    IsArgumentTrimmable(JSArgumentField): PrivateScope, Assembly, HideBySig
    FindReference(String): PrivateScope, Public, Virtual, HideBySig
    CreateField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig
    CreateField(JSVariableField): PrivateScope, Public, Virtual, HideBySig
    AddReference(ActivationObject): PrivateScope, Assembly, HideBySig
    IsReferenced(Dictionary`2): PrivateScope, Assembly, HideBySig
Class Microsoft.Ajax.Utilities.ObjectLiteralField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ConstantWrapper
    Void .ctor(System.Object, Microsoft.Ajax.Utilities.PrimitiveType, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.GetterSetter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ObjectLiteralField
    Void .ctor(System.String, Boolean, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsGetter 'get set' : 
  Methods:
    get_IsGetter(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.GlobalObject: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.GlobalObjectInstance, System.String[], System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetField(String): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.GlobalScope: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ActivationObject
    Void .ctor(Microsoft.Ajax.Utilities.JSParser): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.JSVariableField Item [System.String] 'get ' : 
  Methods:
    SetAssumedGlobals(ReadOnlyCollection`1): PrivateScope, Assembly, HideBySig
    AnalyzeScope(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReserveFields(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    HyperCrunch(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig
    CreateField(JSVariableField): PrivateScope, Public, Virtual, HideBySig
    GetLocalField(String): PrivateScope, Public, Virtual, HideBySig
    AddLiteral(ConstantWrapper, ActivationObject): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.IfNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    Microsoft.Ajax.Utilities.Block TrueBlock 'get set' : 
    Microsoft.Ajax.Utilities.Block FalseBlock 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_TrueBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_FalseBlock(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    SwapBranches(): PrivateScope, Public, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.ImportantComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Comment 'get set' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.JSVariableField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Reflection.FieldAttributes, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSVariableField): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RefCount 'get ' : 
    Microsoft.Ajax.Utilities.Context OriginalContext 'get set' : 
    Microsoft.Ajax.Utilities.JSVariableField OuterField 'get set' : 
    System.Object FieldValue 'get set' : 
    Boolean CanCrunch 'get set' : 
    Boolean IsDeclared 'get set' : 
    System.String CrunchedName 'get set' : 
    Microsoft.Ajax.Utilities.JSNamedFunctionExpressionField NamedFunctionExpression 'get set' : 
    Boolean IsAmbiguous 'get set' : 
    Boolean IsPlaceholder 'get set' : 
    Boolean IsFunction 'get set' : 
    Boolean IsReferenced 'get ' : 
    System.String Name 'get ' : 
    System.Reflection.FieldAttributes Attributes 'get set' : 
    Boolean IsLiteral 'get ' : 
  Methods:
    get_RefCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalContext(): PrivateScope, Assembly, HideBySig, SpecialName
    set_OriginalContext(Context): PrivateScope, Assembly, HideBySig, SpecialName
    get_OuterField(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterField(JSVariableField): PrivateScope, Public, HideBySig, SpecialName
    get_FieldValue(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldValue(Object): PrivateScope, Public, HideBySig, SpecialName
    get_CanCrunch(): PrivateScope, Public, HideBySig, SpecialName
    set_CanCrunch(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsDeclared(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDeclared(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CrunchedName(): PrivateScope, Public, HideBySig, SpecialName
    set_CrunchedName(String): PrivateScope, Public, HideBySig, SpecialName
    get_NamedFunctionExpression(): PrivateScope, Public, HideBySig, SpecialName
    set_NamedFunctionExpression(JSNamedFunctionExpressionField): PrivateScope, Public, HideBySig, SpecialName
    get_IsAmbiguous(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAmbiguous(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlaceholder(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPlaceholder(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFunction(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    AddReference(ActivationObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsReferenced(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(FieldAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiteral(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    IsSameField(JSVariableField): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.JSLocalField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSVariableField
    Void .ctor(System.String, System.Object, System.Reflection.FieldAttributes): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSVariableField): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsGenerated 'get set' : 
  Methods:
    get_IsGenerated(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IsGenerated(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.JSArgumentField: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSLocalField
    Void .ctor(System.String, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.JSArgumentsField: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSVariableField
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.JScriptException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSError): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSError, Microsoft.Ajax.Utilities.Context): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileContext 'get ' : 
    Boolean CanRecover 'get set' : 
    Boolean IsError 'get set' : 
    System.Object Value 'get set' : 
    Int32 StartColumn 'get ' : 
    Int32 Line 'get ' : 
    Int32 Column 'get ' : 
    Int32 EndLine 'get ' : 
    Int32 EndColumn 'get ' : 
    System.String FullSource 'get ' : 
    System.String LineText 'get ' : 
    System.String ErrorSegment 'get ' : 
    System.String Message 'get ' : 
    Int32 Error 'get ' : 
    Int32 Severity 'get ' : 
  Methods:
    get_FileContext(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRecover(): PrivateScope, Public, HideBySig, SpecialName
    set_CanRecover(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsError(): PrivateScope, Public, HideBySig, SpecialName
    set_IsError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    get_StartColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_EndLine(): PrivateScope, Public, HideBySig, SpecialName
    get_EndColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_FullSource(): PrivateScope, Public, HideBySig, SpecialName
    get_LineText(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorSegment(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    get_Severity(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.JScriptExceptionEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Ajax.Utilities.JScriptException, Microsoft.Ajax.Utilities.ContextError): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.ContextError Error 'get set' : 
    Microsoft.Ajax.Utilities.JScriptException Exception 'get set' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.UndefinedReferenceException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(Microsoft.Ajax.Utilities.Lookup, Microsoft.Ajax.Utilities.Context): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode LookupNode 'get ' : 
    System.String Name 'get ' : 
    Microsoft.Ajax.Utilities.ReferenceType ReferenceType 'get ' : 
    Int32 Column 'get ' : 
    Int32 Line 'get ' : 
  Methods:
    get_LookupNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Ajax.Utilities.UndefinedReferenceException): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.UndefinedReferenceException Exception 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Ajax.Utilities.JSError: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.JSError NoError = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError SyntaxError = 1002 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoColon = 1003 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoSemicolon = 1004 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoLeftParenthesis = 1005 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoRightParenthesis = 1006 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoRightBracket = 1007 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoLeftCurly = 1008 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoRightCurly = 1009 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoIdentifier = 1010 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoEqual = 1011 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError IllegalChar = 1014 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UnterminatedString = 1015 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoCommentEnd = 1016 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadReturn = 1018 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadBreak = 1019 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadContinue = 1020 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadHexDigit = 1023 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoWhile = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadLabel = 1025 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoLabel = 1026 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError DupDefault = 1027 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoMemberIdentifier = 1028 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoCCEnd = 1029 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError CCOff = 1030 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoCatch = 1033 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError InvalidElse = 1034 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoComma = 1100 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError BadSwitch = 1103 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError CCInvalidEnd = 1104 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError CCInvalidElse = 1105 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError CCInvalidElseIf = 1106 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ErrorEndOfFile = 1107 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError DuplicateName = 1111 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UndeclaredVariable = 1135 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError KeywordUsedAsIdentifier = 1137 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UndeclaredFunction = 1138 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoCommaOrTypeDefinitionError = 1191 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoRightParenthesisOrComma = 1193 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NoRightBracketOrComma = 1194 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ExpressionExpected = 1195 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UnexpectedSemicolon = 1196 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError TooManyTokensSkipped = 1197 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError SuspectAssignment = 1206 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError SuspectSemicolon = 1207 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ParameterListNotLast = 1240 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StatementBlockExpected = 1267 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError VariableDefinedNotReferenced = 1268 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ArgumentNotReferenced = 1270 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError WithNotRecommended = 1271 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError FunctionNotReferenced = 1272 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError AmbiguousCatchVar = 1273 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError FunctionExpressionExpected = 1274 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ObjectConstructorTakesNoArguments = 1275 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError JSParserException = 1276 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NumericOverflow = 1277 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NumericMaximum = 1278 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError NumericMinimum = 1279 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ResourceReferenceMustBeConstant = 1280 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError AmbiguousNamedFunctionExpression = 1281 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError ConditionalCompilationTooComplex = 1282 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UnterminatedAspNetBlock = 1283 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError MisplacedFunctionDeclaration = 1284 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError OctalLiteralsDeprecated = 1285 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError FunctionNameMustBeIdentifier = 1286 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictComparisonIsAlwaysTrueOrFalse = 1287 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeNoWith = 1288 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeDuplicateArgument = 1289 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeVariableName = 1290 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeFunctionName = 1291 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeDuplicateProperty = 1292 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeInvalidAssign = 1293 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeInvalidPreOrPost = 1294 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeInvalidDelete = 1295 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError StrictModeArgumentName = 1296 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError IllegalAssignment = 5008 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError RegExpSyntax = 5017 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSError UncaughtException = 5022 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.JSGlobalField: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSVariableField
    Void .ctor(System.String, System.Object, System.Reflection.FieldAttributes): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.JSKeyword: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Methods:
    CanBeIdentifier(JSToken): PrivateScope, Assembly, Static, HideBySig
    GetKeyword(Context, Int32): PrivateScope, Assembly, HideBySig
    GetKeyword(String, Int32, Int32): PrivateScope, Assembly, HideBySig
    InitKeywords(): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Ajax.Utilities.JSNamedFunctionExpressionField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSLocalField
    Void .ctor(Microsoft.Ajax.Utilities.JSVariableField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detach(): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.JSParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Microsoft.Ajax.Utilities.CodeSettings Settings 'get ' : 
    Microsoft.Ajax.Utilities.GlobalScope GlobalScope 'get ' : 
    System.Collections.Generic.Stack`1[Microsoft.Ajax.Utilities.ActivationObject] ScopeStack 'get ' : 
    System.String FileContext 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Ajax.Utilities.JScriptExceptionEventArgs] CompilerError: 
    System.EventHandler`1[Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs] UndefinedReference: 
  Methods:
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    add_CompilerError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CompilerError(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_UndefinedReference(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_UndefinedReference(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalScope(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ScopeStack(): PrivateScope, Assembly, HideBySig, SpecialName
    OnCompilerError(JScriptException): PrivateScope, Assembly, HideBySig
    OnUndefinedReference(UndefinedReferenceException): PrivateScope, Assembly, HideBySig
    get_FileContext(): PrivateScope, Public, HideBySig, SpecialName
    set_FileContext(String): PrivateScope, Public, HideBySig, SpecialName
    PreprocessOnly(CodeSettings): PrivateScope, Public, HideBySig
    PreprocessOnly(CodeSettings, TextWriter): PrivateScope, Public, HideBySig
    Parse(CodeSettings): PrivateScope, Public, HideBySig
    ParseExpression(CodeSettings): PrivateScope, Public, HideBySig
Class Microsoft.Ajax.Utilities.ParserException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.UnexpectedTokenException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ParserException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.EndOfFileException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ParserException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.RecoveryTokenException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.ParserException
    Void .ctor(Microsoft.Ajax.Utilities.JSToken, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Ajax.Utilities.JSToken _token : Assembly
    Microsoft.Ajax.Utilities.AstNode _partiallyComputedNode : Assembly
Class Microsoft.Ajax.Utilities.NoSkipTokenSet: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Ajax.Utilities.JSToken[] s_ArrayInitNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_BlockConditionNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_BlockNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_BracketToken : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_CaseNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_DoWhileBodyNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_EndOfLineToken : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_EndOfStatementNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_ExpressionListNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_FunctionDeclNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_IfBodyNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_MemberExprNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_NoTrySkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_ObjectInitNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_ParenExpressionNoSkipToken : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_ParenToken : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_PostfixExpressionNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_StartStatementNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_SwitchNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_TopLevelNoSkipTokenSet : Assembly, Static, InitOnly
    Microsoft.Ajax.Utilities.JSToken[] s_VariableDeclNoSkipTokenSet : Assembly, Static, InitOnly
  Methods:
    Add(JSToken[]): PrivateScope, Assembly, HideBySig
    Remove(JSToken[]): PrivateScope, Assembly, HideBySig
    HasToken(JSToken): PrivateScope, Assembly, HideBySig
Struct Microsoft.Ajax.Utilities.FunctionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.FunctionType Declaration = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.FunctionType Expression = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.FunctionType Getter = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.FunctionType Setter = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.JSPredefinedField: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSVariableField
    Void .ctor(System.String, System.Reflection.MemberTypes, Microsoft.Ajax.Utilities.GlobalObjectInstance): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.MemberTypes MemberType 'get ' : 
    Microsoft.Ajax.Utilities.GlobalObjectInstance GlobalObject 'get ' : 
  Methods:
    get_MemberType(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalObject(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Ajax.Utilities.GlobalObjectInstance: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.GlobalObjectInstance Other = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.GlobalObjectInstance GlobalObject = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.GlobalObjectInstance WindowObject = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.JSScanner: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.Context): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CurrentLine 'get set' : 
    Int32 StartLinePosition 'get set' : 
    Boolean GotEndOfLine 'get set' : 
    Boolean UsePreprocessorDefines 'get set' : 
    Boolean InComment 'get ' : 
    Boolean HasImportantComments 'get ' : 
    Boolean IgnoreConditionalCompilation 'get set' : 
    Boolean AllowEmbeddedAspNetBlocks 'get set' : 
    Boolean RawTokens 'get set' : 
    Boolean SkipDebugBlocks 'get set' : 
    System.String StringLiteral 'get ' : 
  Methods:
    get_CurrentLine(): PrivateScope, Public, HideBySig, SpecialName
    get_StartLinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_GotEndOfLine(): PrivateScope, Public, HideBySig, SpecialName
    get_UsePreprocessorDefines(): PrivateScope, Public, HideBySig, SpecialName
    set_UsePreprocessorDefines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InComment(): PrivateScope, Public, HideBySig, SpecialName
    get_HasImportantComments(): PrivateScope, Public, HideBySig, SpecialName
    PopImportantComment(): PrivateScope, Public, HideBySig
    get_IgnoreConditionalCompilation(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreConditionalCompilation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEmbeddedAspNetBlocks(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEmbeddedAspNetBlocks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RawTokens(): PrivateScope, Public, HideBySig, SpecialName
    set_RawTokens(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SkipDebugBlocks(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipDebugBlocks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    IsKeyword(String, Boolean): PrivateScope, Public, Static, HideBySig
    SetSource(Context): PrivateScope, Public, HideBySig
    SetPreprocessorDefines(ReadOnlyCollection`1): PrivateScope, Public, HideBySig
    PeekToken(): PrivateScope, Assembly, HideBySig
    GetNextToken(): PrivateScope, Public, HideBySig
    get_StringLiteral(): PrivateScope, Public, HideBySig, SpecialName
    GetIdentifier(): PrivateScope, Assembly, HideBySig
    ScanRegExp(): PrivateScope, Assembly, HideBySig
    ScanRegExpFlags(): PrivateScope, Assembly, HideBySig
    SkipMultilineComment(Boolean): PrivateScope, Public, HideBySig
    StartsWithIdentifierPart(String): PrivateScope, Public, Static, HideBySig
    EndsWithIdentifierPart(String): PrivateScope, Public, Static, HideBySig
    IsValidIdentifier(String): PrivateScope, Public, Static, HideBySig
    IsSafeIdentifier(String): PrivateScope, Public, Static, HideBySig
    IsValidIdentifierStart(Char): PrivateScope, Public, Static, HideBySig
    IsSafeIdentifierStart(Char): PrivateScope, Public, Static, HideBySig
    IsValidIdentifierPart(String): PrivateScope, Public, Static, HideBySig
    IsValidIdentifierPart(Char): PrivateScope, Public, Static, HideBySig
    IsSafeIdentifierPart(Char): PrivateScope, Public, Static, HideBySig
    IsIdentifierPartChar(Char): PrivateScope, Assembly, HideBySig
    IsIdentifierStartChar(Char&): PrivateScope, Assembly, HideBySig
    IsDigit(Char): PrivateScope, Assembly, Static, HideBySig
    IsHexDigit(Char): PrivateScope, Assembly, Static, HideBySig
    IsAsciiLetter(Char): PrivateScope, Assembly, Static, HideBySig
    IsAssignmentOperator(JSToken): PrivateScope, Assembly, Static, HideBySig
    IsRightAssociativeOperator(JSToken): PrivateScope, Assembly, Static, HideBySig
    IsProcessableOperator(JSToken): PrivateScope, Assembly, Static, HideBySig
    GetOperatorPrecedence(JSToken): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Ajax.Utilities.JSToken: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.JSToken None = -1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken EndOfFile = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Semicolon = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RightCurly = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LeftCurly = 3 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Debugger = 4 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Var = 5 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken If = 6 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken For = 7 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Do = 8 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken While = 9 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Continue = 10 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Break = 11 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Return = 12 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken With = 13 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Switch = 14 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Throw = 15 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Try = 16 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Function = 17 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Else = 18 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCommentStart = 19 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationOn = 20 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationSet = 21 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationIf = 22 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationElseIf = 23 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationElse = 24 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCompilationEnd = 25 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken AspNetBlock = 26 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Null = 27 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken True = 28 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken False = 29 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken This = 30 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Identifier = 31 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken StringLiteral = 32 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken IntegerLiteral = 33 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken NumericLiteral = 34 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LeftParenthesis = 35 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LeftBracket = 36 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken AccessField = 37 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken FirstOperator = 38 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Void = 38 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken TypeOf = 39 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Delete = 40 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Increment = 41 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Decrement = 42 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LogicalNot = 43 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseNot = 44 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken FirstBinaryOperator = 45 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Plus = 45 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Minus = 46 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LessThan = 47 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Divide = 48 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Modulo = 49 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LeftShift = 50 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RightShift = 51 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken UnsignedRightShift = 52 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Equal = 53 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken NotEqual = 54 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken StrictEqual = 55 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken StrictNotEqual = 56 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LessThanEqual = 57 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken GreaterThan = 58 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken GreaterThanEqual = 59 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Multiply = 60 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseAnd = 61 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseOr = 62 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseXor = 63 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LogicalAnd = 64 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LogicalOr = 65 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Assign = 66 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken PlusAssign = 67 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken MinusAssign = 68 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken MultiplyAssign = 69 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken DivideAssign = 70 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ModuloAssign = 71 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseAndAssign = 72 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseOrAssign = 73 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken BitwiseXorAssign = 74 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LeftShiftAssign = 75 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RightShiftAssign = 76 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken UnsignedRightShiftAssign = 77 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LastAssign = 77 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken InstanceOf = 78 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken In = 79 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalIf = 80 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Colon = 81 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Comma = 82 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken LastOperator = 82 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Case = 83 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Catch = 84 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Default = 85 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Finally = 86 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken New = 87 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RightParenthesis = 88 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RightBracket = 89 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken PreprocessorConstant = 90 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Comment = 91 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken UnterminatedComment = 92 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Class = 93 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Const = 94 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Enum = 95 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Export = 96 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Extends = 97 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Import = 98 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Super = 99 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Implements = 100 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Interface = 101 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Let = 102 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Package = 103 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Private = 104 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Protected = 105 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Public = 106 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Static = 107 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Yield = 108 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Native = 109 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Get = 110 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Set = 111 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken EndOfLine = 112 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken WhiteSpace = 113 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken Error = 114 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken RegularExpression = 115 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken PreprocessDirective = 116 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.JSToken ConditionalCommentEnd = 117 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.JSWithField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.JSLocalField
    Void .ctor(System.String, System.Reflection.FieldAttributes): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.JSVariableField): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Ajax.Utilities.LabeledStatement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Int32, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NestCount 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Statement 'get set' : 
    System.String Label 'get set' : 
    Boolean RequiresSeparator 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_NestCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Statement(): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.LogicalNot: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Ajax.Utilities.TreeVisitor
    Void .ctor(Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Measure(): PrivateScope, Public, HideBySig
    Apply(): PrivateScope, Public, HideBySig
    Apply(AstNode, JSParser): PrivateScope, Public, Static, HideBySig
    Visit(ArrayLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(BinaryOperator): PrivateScope, Public, Virtual, HideBySig
    Visit(CallNode): PrivateScope, Public, Virtual, HideBySig
    Visit(Conditional): PrivateScope, Public, Virtual, HideBySig
    Visit(ConstantWrapper): PrivateScope, Public, Virtual, HideBySig
    Visit(Delete): PrivateScope, Public, Virtual, HideBySig
    Visit(Lookup): PrivateScope, Public, Virtual, HideBySig
    Visit(Member): PrivateScope, Public, Virtual, HideBySig
    Visit(ObjectLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(PostOrPrefixOperator): PrivateScope, Public, Virtual, HideBySig
    Visit(RegExpLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(ThisLiteral): PrivateScope, Public, Virtual, HideBySig
    Visit(TypeOfNode): PrivateScope, Public, Virtual, HideBySig
    Visit(VoidNode): PrivateScope, Public, Virtual, HideBySig
    Visit(NumericUnary): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Ajax.Utilities.ReferenceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.ReferenceType Variable = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.ReferenceType Function = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.ReferenceType Constructor = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.Lookup: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.JSVariableField VariableField 'get set' : 
    Microsoft.Ajax.Utilities.JSLocalField LocalField 'get ' : 
    Boolean IsGenerated 'get set' : 
    Microsoft.Ajax.Utilities.ReferenceType RefType 'get set' : 
    System.String Name 'get set' : 
    Boolean IsDebuggerStatement 'get ' : 
  Methods:
    get_VariableField(): PrivateScope, Public, HideBySig, SpecialName
    set_VariableField(JSVariableField): PrivateScope, Assembly, HideBySig, SpecialName
    get_LocalField(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenerated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGenerated(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RefType(): PrivateScope, Public, HideBySig, SpecialName
    set_RefType(ReferenceType): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetOuterLocalField(ActivationObject): PrivateScope, Assembly, HideBySig
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.MatchPropertiesVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Ajax.Utilities.IVisitor
  Methods:
    Match(AstNode, String): PrivateScope, Public, HideBySig
    Visit(CallNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Member): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Lookup): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ArrayLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AspNetBlockNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AstNodeList): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(BinaryOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Block): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Break): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElse): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationEnd): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationOn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Conditional): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapper): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapperPP): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ContinueNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(CustomNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DebuggerNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Delete): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DirectivePrologue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DoWhile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForIn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(FunctionObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(GetterSetter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(IfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ImportantComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(LabeledStatement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(NumericUnary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteralField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(PostOrPrefixOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(RegExpLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ReturnNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Switch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(SwitchCase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThisLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThrowNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TryNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TypeOfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Var): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VariableDeclaration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VoidNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WhileNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WithNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Ajax.Utilities.Member: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, System.String, Microsoft.Ajax.Utilities.Context): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Root 'get set' : 
    System.String Name 'get set' : 
    Microsoft.Ajax.Utilities.Context NameContext 'get set' : 
    Microsoft.Ajax.Utilities.OperatorPrecedence Precedence 'get ' : 
    Boolean IsDebuggerStatement 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
  Methods:
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_NameContext(): PrivateScope, Public, HideBySig, SpecialName
    get_Precedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_IsDebuggerStatement(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.Missing: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Microsoft.Ajax.Utilities.Missing Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.NewParensVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    Microsoft.Ajax.Utilities.IVisitor
  Methods:
    NeedsParens(AstNode, Boolean): PrivateScope, Public, Static, HideBySig
    Visit(ArrayLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AspNetBlockNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(BinaryOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(CallNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElse): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationEnd): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationOn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Conditional): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapper): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapperPP): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(CustomNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Delete): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(FunctionObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ImportantComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Lookup): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Member): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(NumericUnary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(PostOrPrefixOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(RegExpLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThisLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TypeOfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VoidNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AstNodeList): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(GetterSetter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteralField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Block): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Break): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ContinueNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DebuggerNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DirectivePrologue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DoWhile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForIn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(IfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(LabeledStatement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ReturnNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Switch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(SwitchCase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThrowNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TryNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Var): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VariableDeclaration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WhileNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WithNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Ajax.Utilities.NumericUnary: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.UnaryOperator
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ObjectLiteral: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.ObjectLiteralField[], Microsoft.Ajax.Utilities.AstNode[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[Microsoft.Ajax.Utilities.ObjectLiteralField] Keys 'get ' : 
    System.Collections.Generic.IList`1[Microsoft.Ajax.Utilities.AstNode] Values 'get ' : 
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Keys(): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct Microsoft.Ajax.Utilities.OperatorPrecedence: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.OperatorPrecedence None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Comma = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Assignment = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Conditional = 3 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence LogicalOr = 4 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence LogicalAnd = 5 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence BitwiseOr = 6 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence BitwiseXor = 7 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence BitwiseAnd = 8 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Equality = 9 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Relational = 10 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Shift = 11 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Additive = 12 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Multiplicative = 13 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Unary = 14 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence FieldAccess = 15 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Primary = 16 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OperatorPrecedence Highest = 17 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.OutputVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.TextWriter, Microsoft.Ajax.Utilities.CodeSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Ajax.Utilities.IVisitor
  Properties:
    Microsoft.Ajax.Utilities.CodeSettings Settings 'get set' : 
  Methods:
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    set_Settings(CodeSettings): PrivateScope, Public, HideBySig, SpecialName
    Visit(ArrayLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AspNetBlockNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(AstNodeList): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(BinaryOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Block): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Break): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(CallNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElse): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationElseIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationEnd): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationIf): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationOn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConditionalCompilationSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Conditional): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapper): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ConstantWrapperPP): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ContinueNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(CustomNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DebuggerNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Delete): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DirectivePrologue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DoWhile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForIn): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ForNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(FunctionObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(GetterSetter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(IfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ImportantComment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(LabeledStatement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Lookup): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Member): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(NumericUnary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ObjectLiteralField): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(PostOrPrefixOperator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(RegExpLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ReturnNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Switch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(SwitchCase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThisLiteral): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(ThrowNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TryNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(TypeOfNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(Var): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VariableDeclaration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(VoidNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WhileNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(WithNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    NormalizeNumber(Double, Context): PrivateScope, Public, Static, HideBySig
    EscapeString(String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Ajax.Utilities.ParameterDeclaration: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.JSArgumentField Field 'get ' : 
    System.String Name 'get ' : 
    System.String OriginalName 'get ' : 
    Microsoft.Ajax.Utilities.Context Context 'get ' : 
  Methods:
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalName(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Ajax.Utilities.PostOrPrefix: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.PostOrPrefix PostfixDecrement = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PostOrPrefix PostfixIncrement = 1 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PostOrPrefix PrefixDecrement = 2 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.PostOrPrefix PrefixIncrement = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.PostOrPrefixOperator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.UnaryOperator
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.JSToken, Microsoft.Ajax.Utilities.PostOrPrefix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.PostOrPrefix Operator 'get set' : 
    Microsoft.Ajax.Utilities.AstNode LeftHandSide 'get ' : 
  Methods:
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    set_Operator(PostOrPrefix): PrivateScope, Public, HideBySig, SpecialName
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_LeftHandSide(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.RegExpLiteral: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(System.String, System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Pattern 'get set' : 
    System.String PatternSwitches 'get set' : 
  Methods:
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternSwitches(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ReorderScopeVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Ajax.Utilities.TreeVisitor
  Methods:
    Apply(Block, JSParser): PrivateScope, Public, Static, HideBySig
    Visit(Block): PrivateScope, Public, Virtual, HideBySig
    Visit(FunctionObject): PrivateScope, Public, Virtual, HideBySig
    Visit(Var): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ReturnNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Operand 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ScannerException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(Microsoft.Ajax.Utilities.JSError): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.JSError Error 'get ' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.StringMgr: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetString(String): PrivateScope, Public, Static, HideBySig
    GetString(String, Object[]): PrivateScope, Public, Static, HideBySig
Class Microsoft.Ajax.Utilities.Switch: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNodeList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Expression 'get set' : 
    Microsoft.Ajax.Utilities.AstNodeList Cases 'get set' : 
    Boolean RequiresSeparator 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Cases(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.SwitchCase: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.Block): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode CaseValue 'get set' : 
    Microsoft.Ajax.Utilities.Block Statements 'get ' : 
    Boolean IsDefault 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_CaseValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Statements(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefault(): PrivateScope, Assembly, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.ThisLiteral: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.Expression
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.ThrowNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Operand 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.TryNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.Block TryBlock 'get set' : 
    Microsoft.Ajax.Utilities.Block CatchBlock 'get set' : 
    Microsoft.Ajax.Utilities.Block FinallyBlock 'get set' : 
    System.String CatchVarName 'get set' : 
    Microsoft.Ajax.Utilities.Context CatchVarContext 'get set' : 
    Microsoft.Ajax.Utilities.JSVariableField CatchVariable 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_TryBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_CatchBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_FinallyBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_CatchVarName(): PrivateScope, Public, HideBySig, SpecialName
    get_CatchVarContext(): PrivateScope, Public, HideBySig, SpecialName
    get_CatchVariable(): PrivateScope, Public, HideBySig, SpecialName
    SetCatchVariable(JSVariableField): PrivateScope, Public, HideBySig
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Ajax.Utilities.TypeOfNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.UnaryOperator
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindPrimitiveType(): PrivateScope, Public, Virtual, HideBySig
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.Var: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Microsoft.Ajax.Utilities.VariableDeclaration Item [Int32] 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean ContainsInOperator 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    Append(AstNode): PrivateScope, Assembly, HideBySig
    InsertAt(Int32, AstNode): PrivateScope, Assembly, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    get_ContainsInOperator(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.VariableDeclaration: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.AstNode, System.Reflection.FieldAttributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, System.String, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.AstNode, System.Reflection.FieldAttributes, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Identifier 'get set' : 
    Microsoft.Ajax.Utilities.Context IdentifierContext 'get set' : 
    Microsoft.Ajax.Utilities.AstNode Initializer 'get set' : 
    Microsoft.Ajax.Utilities.JSVariableField Field 'get set' : 
    Boolean IsCCSpecialCase 'get set' : 
    Boolean UseCCOn 'get set' : 
    Boolean IsGenerated 'get set' : 
    Boolean IsExpression 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
  Methods:
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierContext(): PrivateScope, Public, HideBySig, SpecialName
    get_Initializer(): PrivateScope, Public, HideBySig, SpecialName
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCCSpecialCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCCSpecialCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseCCOn(): PrivateScope, Public, HideBySig, SpecialName
    set_UseCCOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenerated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGenerated(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_IsExpression(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.VoidNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.UnaryOperator
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(AstNode): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.WhileNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode Condition 'get set' : 
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.WithNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.AstNode
    Void .ctor(Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser, Microsoft.Ajax.Utilities.AstNode, Microsoft.Ajax.Utilities.AstNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Ajax.Utilities.AstNode WithObject 'get set' : 
    Microsoft.Ajax.Utilities.Block Body 'get set' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Ajax.Utilities.AstNode] Children 'get ' : 
    Boolean RequiresSeparator 'get ' : 
  Methods:
    get_WithObject(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IVisitor): PrivateScope, Public, Virtual, HideBySig
    GetFunctionGuess(AstNode): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReplaceChild(AstNode, AstNode): PrivateScope, Public, Virtual, HideBySig
    get_RequiresSeparator(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    EncloseBlock(EncloseBlockType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Ajax.Utilities.WithScope: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Ajax.Utilities.BlockScope
    Void .ctor(Microsoft.Ajax.Utilities.ActivationObject, Microsoft.Ajax.Utilities.Context, Microsoft.Ajax.Utilities.JSParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindReference(String): PrivateScope, Public, Virtual, HideBySig
    CreateInnerField(JSVariableField): PrivateScope, Public, Virtual, HideBySig
    CreateField(JSVariableField): PrivateScope, Public, Virtual, HideBySig
    CreateField(String, Object, FieldAttributes): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Ajax.Utilities.OutputMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Ajax.Utilities.OutputMode SingleLine = 0 : Public, Static, Literal, HasDefault
    Microsoft.Ajax.Utilities.OutputMode MultipleLines = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Ajax.Utilities.ContextError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Boolean, Int32, System.String, System.String, System.String, System.String, Int32, Int32, Int32, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsError 'get set' : 
    Int32 Severity 'get set' : 
    System.String Subcategory 'get set' : 
    System.String ErrorCode 'get set' : 
    System.String HelpKeyword 'get set' : 
    System.String File 'get set' : 
    Int32 StartLine 'get set' : 
    Int32 StartColumn 'get set' : 
    Int32 EndLine 'get set' : 
    Int32 EndColumn 'get set' : 
    System.String Message 'get set' : 
  Methods:
    get_IsError(): PrivateScope, Public, HideBySig, SpecialName
    get_Severity(): PrivateScope, Public, HideBySig, SpecialName
    get_Subcategory(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_HelpKeyword(): PrivateScope, Public, HideBySig, SpecialName
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    get_StartLine(): PrivateScope, Public, HideBySig, SpecialName
    get_StartColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_EndLine(): PrivateScope, Public, HideBySig, SpecialName
    get_EndColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.JSEncoderFallback: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Text.EncoderFallback
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxCharCount 'get ' : 
  Methods:
    CreateFallbackBuffer(): PrivateScope, Public, Virtual, HideBySig
    get_MaxCharCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Ajax.Utilities.JSEncoderFallbackBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Text.EncoderFallbackBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Remaining 'get ' : 
  Methods:
    get_Remaining(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Fallback(Char, Int32): PrivateScope, Public, Virtual, HideBySig
    Fallback(Char, Char, Int32): PrivateScope, Public, Virtual, HideBySig
    GetNextChar(): PrivateScope, Public, Virtual, HideBySig
    MovePrevious(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Ajax.Utilities.Minifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 WarningLevel 'get set' : 
    System.String FileName 'get set' : 
    System.Collections.Generic.ICollection`1[Microsoft.Ajax.Utilities.ContextError] ErrorList 'get ' : 
    System.Collections.Generic.ICollection`1[System.String] Errors 'get ' :  (Obsolete)
  Methods:
    get_WarningLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_WarningLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorList(): PrivateScope, Public, HideBySig, SpecialName
    get_Errors(): PrivateScope, Public, HideBySig, SpecialName
    MinifyJavaScript(String): PrivateScope, Public, HideBySig
    MinifyJavaScript(String, CodeSettings): PrivateScope, Public, HideBySig
    MinifyStyleSheet(String): PrivateScope, Public, HideBySig
    MinifyStyleSheet(String, CssSettings): PrivateScope, Public, HideBySig
    MinifyJavaScript(String, CodeSettings, String[]): PrivateScope, Public, HideBySig (Obsolete)
    MinifyJavaScript(String, String[]): PrivateScope, Public, HideBySig (Obsolete)
Class Microsoft.Ajax.Utilities.ScriptCruncher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Microsoft.Ajax.Utilities.Minifier
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Crunch(String): PrivateScope, Public, HideBySig (Obsolete)
    Crunch(String, CodeSettings): PrivateScope, Public, HideBySig (Obsolete)
Class Microsoft.Ajax.Utilities.ResourceStrings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.IDictionaryEnumerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Item [System.String] 'get set' : 
    Int32 Count 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, String): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
Class WebGrease.WorkflowException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class WebGrease.BuildWorkflowException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :WebGrease.WorkflowException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String, System.String, Int32, Int32, Int32, Int32, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasDetailedError 'get set' : 
    System.String Subcategory 'get set' : 
    System.String ErrorCode 'get set' : 
    System.String HelpKeyword 'get set' : 
    System.String File 'get set' : 
    Int32 LineNumber 'get set' : 
    Int32 ColumnNumber 'get set' : 
    Int32 EndLineNumber 'get set' : 
    Int32 EndColumnNumber 'get set' : 
  Methods:
    get_HasDetailedError(): PrivateScope, Public, HideBySig, SpecialName
    get_Subcategory(): PrivateScope, Public, HideBySig, SpecialName
    set_Subcategory(String): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorCode(String): PrivateScope, Public, HideBySig, SpecialName
    get_HelpKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HelpKeyword(String): PrivateScope, Public, HideBySig, SpecialName
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndLineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndColumnNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_EndColumnNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Common.HashUtility: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetHashStringForFile(String): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Common.FileHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    WriteFile(String, String, Encoding): PrivateScope, Assembly, Static, HideBySig
    CopyFile(String, String): PrivateScope, Assembly, Static, HideBySig
Struct WebGrease.Configuration.ActivityMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Configuration.ActivityMode ShowHelp = 0 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode All = 1 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode Minify = 2 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode Validate = 3 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode ExpandTokens = 4 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode SpriteImages = 5 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode Bundle = 6 : Public, Static, Literal, HasDefault
    WebGrease.Configuration.ActivityMode AutoName = 7 : Public, Static, Literal, HasDefault
Class WebGrease.Configuration.ArgumentProcessor: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class WebGrease.Configuration.AutoNameConfig: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ShouldAutoName 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_ShouldAutoName(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Configuration.BundlingConfig: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ShouldBundleFiles 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_ShouldBundleFiles(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Configuration.CssFileSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] Themes 'get set' : 
    System.Collections.Generic.IList`1[System.String] Locales 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.CssMinificationConfig] Minification 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.CssSpritingConfig] ImageSpriting 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.AutoNameConfig] Autonaming 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.BundlingConfig] Bundling 'get set' : 
    System.String Name 'get set' : 
    System.String Output 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Configuration.InputSpec] InputSpecs 'get set' : 
  Methods:
    get_Themes(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Locales(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Minification(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageSpriting(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Autonaming(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bundling(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Output(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Output(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_InputSpecs(): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.CssMinificationConfig: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean ShouldMinify 'get set' : 
    Boolean ShouldValidateLowerCase 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.String] ForbiddenSelectors 'get set' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldMinify(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldMinify(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldValidateLowerCase(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldValidateLowerCase(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ForbiddenSelectors(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ForbiddenSelectors(IEnumerable`1): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.CssSpritingConfig: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 ImagePadding 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.String] ImagesToIgnore 'get set' : 
    Boolean ShouldAutoVersionBackgroundImages 'get set' : 
    Boolean ShouldAutoSprite 'get set' : 
    System.String DestinationImageFolder 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImagePadding(): PrivateScope, Public, HideBySig, SpecialName
    set_ImagePadding(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImagesToIgnore(): PrivateScope, Public, HideBySig, SpecialName
    set_ImagesToIgnore(IEnumerable`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldAutoVersionBackgroundImages(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldAutoVersionBackgroundImages(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldAutoSprite(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldAutoSprite(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationImageFolder(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationImageFolder(String): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.InputSpec: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Path 'get set' : 
    System.String SearchPattern 'get set' : 
    System.IO.SearchOption SearchOption 'get set' : 
  Methods:
    get_Path(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Path(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_SearchPattern(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SearchPattern(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_SearchOption(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SearchOption(SearchOption): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.JSFileSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Output 'get set' : 
    System.Collections.Generic.List`1[System.String] Locales 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.JSValidationConfig] Validation 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.JsMinificationConfig] Minification 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.AutoNameConfig] Autonaming 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,WebGrease.Configuration.BundlingConfig] Bundling 'get set' : 
    System.Collections.Generic.List`1[WebGrease.Configuration.InputSpec] InputSpecs 'get set' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Output(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Output(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Locales(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Locales(List`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Validation(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Minification(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Autonaming(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bundling(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InputSpecs(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InputSpecs(List`1): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.JsMinificationConfig: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean ShouldMinify 'get set' : 
    System.String GlobalsToIgnore 'get set' : 
    System.String MinificationArugments 'get set' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldMinify(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldMinify(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_GlobalsToIgnore(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GlobalsToIgnore(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_MinificationArugments(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MinificationArugments(String): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.JSValidationConfig: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean ShouldAnalyze 'get set' : 
    System.String AnalyzeArguments 'get set' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldAnalyze(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldAnalyze(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_AnalyzeArguments(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AnalyzeArguments(String): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Configuration.WebGreaseConfiguration: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceDirectory 'get set' : 
    System.String DestinationDirectory 'get set' : 
    System.String TokensDirectory 'get set' : 
    System.String OverrideTokensDirectory 'get set' : 
    System.String ApplicationRootDirectory 'get set' : 
    System.String LogsDirectory 'get set' : 
    System.Collections.Generic.IList`1[System.String] ImageDirectories 'get set' : 
    System.Collections.Generic.IList`1[System.String] ImageExtensions 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Configuration.CssFileSet] CssFileSets 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.Configuration.JSFileSet] JSFileSets 'get set' : 
  Methods:
    get_SourceDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_DestinationDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_DestinationDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_TokensDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_TokensDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_OverrideTokensDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideTokensDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationRootDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationRootDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_LogsDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_LogsDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_ImageDirectories(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageDirectories(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageExtensions(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageExtensions(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_CssFileSets(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CssFileSets(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_JSFileSets(): PrivateScope, Assembly, HideBySig, SpecialName
    set_JSFileSets(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    GetNamedConfig(IDictionary`2, String): PrivateScope, Assembly, Static, HideBySig
Struct WebGrease.Css.Ast.AllowedImportData: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.Ast.AllowedImportData String = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.AllowedImportData Uri = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.AllowedImportData None = 2 : Public, Static, Literal, HasDefault
Class WebGrease.Css.Ast.AstNode: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class WebGrease.Css.Ast.Animation.KeyFramesBlockNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.Collections.ObjectModel.ReadOnlyCollection`1[System.String], System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] KeyFramesSelectors 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode] DeclarationNodes 'get set' : 
  Methods:
    get_KeyFramesSelectors(): PrivateScope, Public, HideBySig, SpecialName
    get_DeclarationNodes(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.StyleSheetRuleNode: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
Class WebGrease.Css.Ast.Animation.KeyFramesNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.StyleSheetRuleNode
    Void .ctor(System.String, System.String, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Animation.KeyFramesBlockNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String KeyFramesSymbol 'get set' : 
    System.String IdentValue 'get set' : 
    System.String StringValue 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Animation.KeyFramesBlockNode] KeyFramesBlockNodes 'get set' : 
  Methods:
    get_KeyFramesSymbol(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentValue(): PrivateScope, Public, HideBySig, SpecialName
    get_StringValue(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyFramesBlockNodes(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.AstException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct WebGrease.Css.Ast.Combinator: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.Ast.Combinator PlusSign = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Combinator GreaterThanSign = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Combinator Tilde = 2 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Combinator ZeroSpace = 3 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Combinator SingleSpace = 4 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Combinator None = 5 : Public, Static, Literal, HasDefault
Class WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Combinator, WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Combinator Combinator 'get set' : 
    WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode SimpleSelectorSequenceNode 'get set' : 
  Methods:
    get_Combinator(): PrivateScope, Public, HideBySig, SpecialName
    get_SimpleSelectorSequenceNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.DeclarationNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, WebGrease.Css.Ast.ExprNode, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Property 'get set' : 
    WebGrease.Css.Ast.ExprNode ExprNode 'get set' : 
    System.String Prio 'get set' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    get_ExprNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Prio(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.DocumentQueryNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.StyleSheetRuleNode
    Void .ctor(System.String, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.RulesetNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String MatchFunctionName 'get set' : 
    System.String DocumentSymbol 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.RulesetNode] Rulesets 'get set' : 
  Methods:
    get_MatchFunctionName(): PrivateScope, Public, HideBySig, SpecialName
    get_DocumentSymbol(): PrivateScope, Public, HideBySig, SpecialName
    get_Rulesets(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.ExprNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.TermNode, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.TermWithOperatorNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.TermNode TermNode 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.TermWithOperatorNode] TermsWithOperators 'get set' : 
  Methods:
    get_TermNode(): PrivateScope, Public, HideBySig, SpecialName
    get_TermsWithOperators(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.FunctionNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, WebGrease.Css.Ast.ExprNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FunctionName 'get set' : 
    WebGrease.Css.Ast.ExprNode ExprNode 'get set' : 
  Methods:
    get_FunctionName(): PrivateScope, Public, HideBySig, SpecialName
    get_ExprNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.ImportNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.AllowedImportData, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaQueryNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.AllowedImportData AllowedImportDataType 'get set' : 
    System.String ImportDataValue 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaQueryNode] MediaQueries 'get set' : 
  Methods:
    get_AllowedImportDataType(): PrivateScope, Public, HideBySig, SpecialName
    get_ImportDataValue(): PrivateScope, Public, HideBySig, SpecialName
    get_MediaQueries(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.MediaQuery.MediaExpressionNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, WebGrease.Css.Ast.ExprNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String MediaFeature 'get set' : 
    WebGrease.Css.Ast.ExprNode ExprNode 'get set' : 
  Methods:
    get_MediaFeature(): PrivateScope, Public, HideBySig, SpecialName
    get_ExprNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.MediaQuery.MediaNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.StyleSheetRuleNode
    Void .ctor(System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaQueryNode], System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.RulesetNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaQueryNode] MediaQueries 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.RulesetNode] Rulesets 'get set' : 
  Methods:
    get_MediaQueries(): PrivateScope, Public, HideBySig, SpecialName
    get_Rulesets(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.MediaQuery.MediaQueryNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, System.String, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaExpressionNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OnlyText 'get set' : 
    System.String NotText 'get set' : 
    System.String MediaType 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.MediaQuery.MediaExpressionNode] MediaExpressions 'get set' : 
  Methods:
    get_OnlyText(): PrivateScope, Public, HideBySig, SpecialName
    get_NotText(): PrivateScope, Public, HideBySig, SpecialName
    get_MediaType(): PrivateScope, Public, HideBySig, SpecialName
    get_MediaExpressions(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.NamespaceNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Prefix 'get set' : 
    System.String Value 'get set' : 
  Methods:
    get_Prefix(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.PageNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.StyleSheetRuleNode
    Void .ctor(System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PseudoPage 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode] Declarations 'get set' : 
  Methods:
    get_PseudoPage(): PrivateScope, Public, HideBySig, SpecialName
    get_Declarations(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.RulesetNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.StyleSheetRuleNode
    Void .ctor(WebGrease.Css.Ast.Selectors.SelectorsGroupNode, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.SelectorsGroupNode SelectorsGroupNode 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.DeclarationNode] Declarations 'get set' : 
  Methods:
    get_SelectorsGroupNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Declarations(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.AttribNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode, System.String, WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode SelectorNamespacePrefixNode 'get set' : 
    System.String Ident 'get set' : 
    WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode OperatorAndValueNode 'get set' : 
  Methods:
    get_SelectorNamespacePrefixNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Ident(): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorAndValueNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.AttribOperatorKind, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.AttribOperatorKind AttribOperatorKind 'get set' : 
    System.String IdentOrString 'get set' : 
  Methods:
    get_AttribOperatorKind(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentOrString(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Struct WebGrease.Css.Ast.Selectors.AttribOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.Ast.Selectors.AttribOperatorKind Prefix = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind Suffix = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind Substring = 2 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind Equal = 3 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind Includes = 4 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind DashMatch = 5 : Public, Static, Literal, HasDefault
    WebGrease.Css.Ast.Selectors.AttribOperatorKind None = 6 : Public, Static, Literal, HasDefault
Class WebGrease.Css.Ast.Selectors.FunctionalPseudoNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, WebGrease.Css.Ast.Selectors.SelectorExpressionNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FunctionName 'get set' : 
    WebGrease.Css.Ast.Selectors.SelectorExpressionNode SelectorExpressionNode 'get set' : 
  Methods:
    get_FunctionName(): PrivateScope, Public, HideBySig, SpecialName
    get_SelectorExpressionNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, System.String, System.String, WebGrease.Css.Ast.Selectors.AttribNode, WebGrease.Css.Ast.Selectors.PseudoNode, WebGrease.Css.Ast.Selectors.NegationNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Hash 'get set' : 
    System.String CssClass 'get set' : 
    System.String AtName 'get set' : 
    WebGrease.Css.Ast.Selectors.AttribNode AttribNode 'get set' : 
    WebGrease.Css.Ast.Selectors.PseudoNode PseudoNode 'get set' : 
    WebGrease.Css.Ast.Selectors.NegationNode NegationNode 'get set' : 
  Methods:
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    get_CssClass(): PrivateScope, Public, HideBySig, SpecialName
    get_AtName(): PrivateScope, Public, HideBySig, SpecialName
    get_AttribNode(): PrivateScope, Public, HideBySig, SpecialName
    get_PseudoNode(): PrivateScope, Public, HideBySig, SpecialName
    get_NegationNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.NegationArgNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.TypeSelectorNode, WebGrease.Css.Ast.Selectors.UniversalSelectorNode, System.String, System.String, WebGrease.Css.Ast.Selectors.AttribNode, WebGrease.Css.Ast.Selectors.PseudoNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.TypeSelectorNode TypeSelectorNode 'get set' : 
    WebGrease.Css.Ast.Selectors.UniversalSelectorNode UniversalSelectorNode 'get set' : 
    System.String Hash 'get set' : 
    System.String CssClass 'get set' : 
    WebGrease.Css.Ast.Selectors.AttribNode AttribNode 'get set' : 
    WebGrease.Css.Ast.Selectors.PseudoNode PseudoNode 'get set' : 
  Methods:
    get_TypeSelectorNode(): PrivateScope, Public, HideBySig, SpecialName
    get_UniversalSelectorNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    get_CssClass(): PrivateScope, Public, HideBySig, SpecialName
    get_AttribNode(): PrivateScope, Public, HideBySig, SpecialName
    get_PseudoNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.NegationNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.NegationArgNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.NegationArgNode NegationArgNode 'get set' : 
  Methods:
    get_NegationArgNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.PseudoNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(Int32, System.String, WebGrease.Css.Ast.Selectors.FunctionalPseudoNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfColons 'get set' : 
    System.String Ident 'get set' : 
    WebGrease.Css.Ast.Selectors.FunctionalPseudoNode FunctionalPseudoNode 'get set' : 
  Methods:
    get_NumberOfColons(): PrivateScope, Public, HideBySig, SpecialName
    get_Ident(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionalPseudoNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.SelectorExpressionNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] SelectorExpressions 'get set' : 
  Methods:
    get_SelectorExpressions(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Prefix 'get set' : 
  Methods:
    get_Prefix(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.SelectorNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode SimpleSelectorSequenceNode 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode] CombinatorSimpleSelectorSequenceNodes 'get set' : 
  Methods:
    get_SimpleSelectorSequenceNode(): PrivateScope, Public, HideBySig, SpecialName
    get_CombinatorSimpleSelectorSequenceNodes(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.SelectorsGroupNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Selectors.SelectorNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Selectors.SelectorNode] SelectorNodes 'get set' : 
  Methods:
    get_SelectorNodes(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.TypeSelectorNode, WebGrease.Css.Ast.Selectors.UniversalSelectorNode, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.TypeSelectorNode TypeSelectorNode 'get set' : 
    WebGrease.Css.Ast.Selectors.UniversalSelectorNode UniversalSelectorNode 'get set' : 
    System.String Separator 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode] HashClassAttribPseudoNegationNodes 'get set' : 
  Methods:
    get_TypeSelectorNode(): PrivateScope, Public, HideBySig, SpecialName
    get_UniversalSelectorNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    get_HashClassAttribPseudoNegationNodes(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.TypeSelectorNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode SelectorNamespacePrefixNode 'get set' : 
    System.String ElementName 'get set' : 
  Methods:
    get_SelectorNamespacePrefixNode(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementName(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.Selectors.UniversalSelectorNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode SelectorNamespacePrefixNode 'get set' : 
  Methods:
    get_SelectorNamespacePrefixNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.StyleSheetNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.ImportNode], System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.NamespaceNode], System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.StyleSheetRuleNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CharSetString 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.ImportNode] Imports 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.NamespaceNode] Namespaces 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.Css.Ast.StyleSheetRuleNode] StyleSheetRules 'get set' : 
  Methods:
    get_CharSetString(): PrivateScope, Public, HideBySig, SpecialName
    get_Imports(): PrivateScope, Public, HideBySig, SpecialName
    get_Namespaces(): PrivateScope, Public, HideBySig, SpecialName
    get_StyleSheetRules(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.TermNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, System.String, System.String, System.String, WebGrease.Css.Ast.FunctionNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String UnaryOperator 'get set' : 
    System.String NumberBasedValue 'get set' : 
    System.String StringBasedValue 'get set' : 
    System.String Hexcolor 'get set' : 
    WebGrease.Css.Ast.FunctionNode FunctionNode 'get set' : 
  Methods:
    get_UnaryOperator(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberBasedValue(): PrivateScope, Public, HideBySig, SpecialName
    get_StringBasedValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Hexcolor(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Ast.TermWithOperatorNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Ast.AstNode
    Void .ctor(System.String, WebGrease.Css.Ast.TermNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Operator 'get set' : 
    WebGrease.Css.Ast.TermNode TermNode 'get set' : 
  Methods:
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    get_TermNode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(NodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.CommonTreeTransformer: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateStyleSheetNode(CommonTree): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Css.CssConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String DoubleDot = .. : Public, Static, Literal, HasDefault
    System.String And = and : Public, Static, Literal, HasDefault
    System.String Namespace = @namespace : Public, Static, Literal, HasDefault
    System.String Not = not : Public, Static, Literal, HasDefault
    System.String PrefixMatch = ^= : Public, Static, Literal, HasDefault
    System.String SuffixMatch = $= : Public, Static, Literal, HasDefault
    System.String SubstringMatch = *= : Public, Static, Literal, HasDefault
    System.String Star = * : Public, Static, Literal, HasDefault
    System.String Charset = @charset  : Public, Static, Literal, HasDefault
    System.String Import = @import  : Public, Static, Literal, HasDefault
    System.String Media = @media  : Public, Static, Literal, HasDefault
    System.String Page = @page : Public, Static, Literal, HasDefault
    System.String SingleQuote = ' : Public, Static, Literal, HasDefault
    System.String Quote = " : Public, Static, Literal, HasDefault
    System.String Url = url : Public, Static, Literal, HasDefault
    Char SingleSpace =   : Public, Static, Literal, HasDefault
    Char Comma = , : Public, Static, Literal, HasDefault
    Char Semicolon = ; : Public, Static, Literal, HasDefault
    Char OpenRoundBracket = ( : Public, Static, Literal, HasDefault
    Char CloseRoundBracket = ) : Public, Static, Literal, HasDefault
    Char OpenCurlyBracket = { : Public, Static, Literal, HasDefault
    Char CloseCurlyBracket = } : Public, Static, Literal, HasDefault
    Char OpenSquareBracket = [ : Public, Static, Literal, HasDefault
    Char CloseSquareBracket = ] : Public, Static, Literal, HasDefault
    Char Dot = . : Public, Static, Literal, HasDefault
    Char Hash = # : Public, Static, Literal, HasDefault
    Char Colon = : : Public, Static, Literal, HasDefault
    System.String Equal = = : Public, Static, Literal, HasDefault
    System.String Plus = + : Public, Static, Literal, HasDefault
    System.String Greater = > : Public, Static, Literal, HasDefault
    System.String Tilde = ~ : Public, Static, Literal, HasDefault
    System.String Whitespace = WHITESPACE : Public, Static, Literal, HasDefault
    System.String Includes = ~= : Public, Static, Literal, HasDefault
    System.String DashMatch = |= : Public, Static, Literal, HasDefault
    System.String Rgb = rgb : Public, Static, Literal, HasDefault
    System.String EscapedNewLine = \
 : Public, Static, Literal, HasDefault
    System.String EscapedCarriageReturnNewLine = \
 : Public, Static, Literal, HasDefault
    System.String EscapedFormFeed = \ : Public, Static, Literal, HasDefault
    System.String Pipe = | : Public, Static, Literal, HasDefault
Class WebGrease.Css.CssLexer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Antlr.Runtime.Lexer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Antlr.Runtime.ICharStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Antlr.Runtime.ICharStream, Antlr.Runtime.RecognizerSharedState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 EOF = -1 : Public, Static, Literal, HasDefault
    Int32 A = 4 : Public, Static, Literal, HasDefault
    Int32 AND = 5 : Public, Static, Literal, HasDefault
    Int32 ANGLE = 6 : Public, Static, Literal, HasDefault
    Int32 AT_NAME = 7 : Public, Static, Literal, HasDefault
    Int32 BACKWARD_SLASH = 8 : Public, Static, Literal, HasDefault
    Int32 C = 9 : Public, Static, Literal, HasDefault
    Int32 CHARSET_SYM = 10 : Public, Static, Literal, HasDefault
    Int32 CIRCLE_BEGIN = 11 : Public, Static, Literal, HasDefault
    Int32 CIRCLE_END = 12 : Public, Static, Literal, HasDefault
    Int32 CLASS_IDENT = 13 : Public, Static, Literal, HasDefault
    Int32 COLON = 14 : Public, Static, Literal, HasDefault
    Int32 COMMA = 15 : Public, Static, Literal, HasDefault
    Int32 COMMENTS = 16 : Public, Static, Literal, HasDefault
    Int32 CURLY_BEGIN = 17 : Public, Static, Literal, HasDefault
    Int32 CURLY_END = 18 : Public, Static, Literal, HasDefault
    Int32 D = 19 : Public, Static, Literal, HasDefault
    Int32 DASHMATCH = 20 : Public, Static, Literal, HasDefault
    Int32 DIGITS = 21 : Public, Static, Literal, HasDefault
    Int32 DIMENSION = 22 : Public, Static, Literal, HasDefault
    Int32 DOCUMENT_SYM = 23 : Public, Static, Literal, HasDefault
    Int32 DOMAIN_FUNCTION = 24 : Public, Static, Literal, HasDefault
    Int32 E = 25 : Public, Static, Literal, HasDefault
    Int32 EQUALS = 26 : Public, Static, Literal, HasDefault
    Int32 ESCAPE = 27 : Public, Static, Literal, HasDefault
    Int32 F = 28 : Public, Static, Literal, HasDefault
    Int32 FORWARD_SLASH = 29 : Public, Static, Literal, HasDefault
    Int32 FREQ = 30 : Public, Static, Literal, HasDefault
    Int32 FROM = 31 : Public, Static, Literal, HasDefault
    Int32 G = 32 : Public, Static, Literal, HasDefault
    Int32 GREATER = 33 : Public, Static, Literal, HasDefault
    Int32 H = 34 : Public, Static, Literal, HasDefault
    Int32 HASH = 35 : Public, Static, Literal, HasDefault
    Int32 HASH_IDENT = 36 : Public, Static, Literal, HasDefault
    Int32 HEXDIGIT = 37 : Public, Static, Literal, HasDefault
    Int32 I = 38 : Public, Static, Literal, HasDefault
    Int32 IDENT = 39 : Public, Static, Literal, HasDefault
    Int32 IMPORTANT_SYM = 40 : Public, Static, Literal, HasDefault
    Int32 IMPORT_SYM = 41 : Public, Static, Literal, HasDefault
    Int32 INCLUDES = 42 : Public, Static, Literal, HasDefault
    Int32 K = 43 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_SYM = 44 : Public, Static, Literal, HasDefault
    Int32 L = 45 : Public, Static, Literal, HasDefault
    Int32 LENGTH = 46 : Public, Static, Literal, HasDefault
    Int32 LETTER = 47 : Public, Static, Literal, HasDefault
    Int32 M = 48 : Public, Static, Literal, HasDefault
    Int32 MEDIA_SYM = 49 : Public, Static, Literal, HasDefault
    Int32 MINUS = 50 : Public, Static, Literal, HasDefault
    Int32 MSIE_EXPRESSION = 51 : Public, Static, Literal, HasDefault
    Int32 MSIE_IMAGE_TRANSFORM = 52 : Public, Static, Literal, HasDefault
    Int32 N = 53 : Public, Static, Literal, HasDefault
    Int32 NAME = 54 : Public, Static, Literal, HasDefault
    Int32 NAMESPACE_SYM = 55 : Public, Static, Literal, HasDefault
    Int32 NL = 56 : Public, Static, Literal, HasDefault
    Int32 NMCHAR = 57 : Public, Static, Literal, HasDefault
    Int32 NMSTART = 58 : Public, Static, Literal, HasDefault
    Int32 NONASCII = 59 : Public, Static, Literal, HasDefault
    Int32 NOT = 60 : Public, Static, Literal, HasDefault
    Int32 NUMBER = 61 : Public, Static, Literal, HasDefault
    Int32 O = 62 : Public, Static, Literal, HasDefault
    Int32 ONLY = 63 : Public, Static, Literal, HasDefault
    Int32 P = 64 : Public, Static, Literal, HasDefault
    Int32 PAGE_SYM = 65 : Public, Static, Literal, HasDefault
    Int32 PERCENTAGE = 66 : Public, Static, Literal, HasDefault
    Int32 PIPE = 67 : Public, Static, Literal, HasDefault
    Int32 PLUS = 68 : Public, Static, Literal, HasDefault
    Int32 PREFIXMATCH = 69 : Public, Static, Literal, HasDefault
    Int32 R = 70 : Public, Static, Literal, HasDefault
    Int32 REGEXP_FUNCTION = 71 : Public, Static, Literal, HasDefault
    Int32 RELATIVELENGTH = 72 : Public, Static, Literal, HasDefault
    Int32 RESOLUTION = 73 : Public, Static, Literal, HasDefault
    Int32 S = 74 : Public, Static, Literal, HasDefault
    Int32 SEMICOLON = 75 : Public, Static, Literal, HasDefault
    Int32 SPACE_AFTER_UNICODE = 76 : Public, Static, Literal, HasDefault
    Int32 SQUARE_BEGIN = 77 : Public, Static, Literal, HasDefault
    Int32 SQUARE_END = 78 : Public, Static, Literal, HasDefault
    Int32 STAR = 79 : Public, Static, Literal, HasDefault
    Int32 STRING = 80 : Public, Static, Literal, HasDefault
    Int32 SUBSTRINGMATCH = 81 : Public, Static, Literal, HasDefault
    Int32 SUFFIXMATCH = 82 : Public, Static, Literal, HasDefault
    Int32 T = 83 : Public, Static, Literal, HasDefault
    Int32 TILDE = 84 : Public, Static, Literal, HasDefault
    Int32 TIME = 85 : Public, Static, Literal, HasDefault
    Int32 TO = 86 : Public, Static, Literal, HasDefault
    Int32 U = 87 : Public, Static, Literal, HasDefault
    Int32 UNICODE = 88 : Public, Static, Literal, HasDefault
    Int32 UNICODE_ESCAPE_HACK = 89 : Public, Static, Literal, HasDefault
    Int32 UNICODE_NULLTERM = 90 : Public, Static, Literal, HasDefault
    Int32 UNICODE_RANGE = 91 : Public, Static, Literal, HasDefault
    Int32 UNICODE_TAB = 92 : Public, Static, Literal, HasDefault
    Int32 UNICODE_ZEROS = 93 : Public, Static, Literal, HasDefault
    Int32 URI = 94 : Public, Static, Literal, HasDefault
    Int32 URL = 95 : Public, Static, Literal, HasDefault
    Int32 URLPREFIX_FUNCTION = 96 : Public, Static, Literal, HasDefault
    Int32 V = 97 : Public, Static, Literal, HasDefault
    Int32 W = 98 : Public, Static, Literal, HasDefault
    Int32 WS = 99 : Public, Static, Literal, HasDefault
    Int32 WS_FRAGMENT = 100 : Public, Static, Literal, HasDefault
    Int32 X = 101 : Public, Static, Literal, HasDefault
    Int32 Y = 102 : Public, Static, Literal, HasDefault
    Int32 Z = 103 : Public, Static, Literal, HasDefault
  Properties:
    System.String GrammarFileName 'get ' : 
  Methods:
    mTokens(): PrivateScope, Public, Virtual, HideBySig
    get_GrammarFileName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class WebGrease.Css.CssParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Antlr.Runtime.Parser
    Void .ctor(Antlr.Runtime.ITokenStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Antlr.Runtime.ITokenStream, Antlr.Runtime.RecognizerSharedState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] tokenNames : Assembly, Static, InitOnly
    Int32 EOF = -1 : Public, Static, Literal, HasDefault
    Int32 A = 4 : Public, Static, Literal, HasDefault
    Int32 AND = 5 : Public, Static, Literal, HasDefault
    Int32 ANGLE = 6 : Public, Static, Literal, HasDefault
    Int32 AT_NAME = 7 : Public, Static, Literal, HasDefault
    Int32 BACKWARD_SLASH = 8 : Public, Static, Literal, HasDefault
    Int32 C = 9 : Public, Static, Literal, HasDefault
    Int32 CHARSET_SYM = 10 : Public, Static, Literal, HasDefault
    Int32 CIRCLE_BEGIN = 11 : Public, Static, Literal, HasDefault
    Int32 CIRCLE_END = 12 : Public, Static, Literal, HasDefault
    Int32 CLASS_IDENT = 13 : Public, Static, Literal, HasDefault
    Int32 COLON = 14 : Public, Static, Literal, HasDefault
    Int32 COMMA = 15 : Public, Static, Literal, HasDefault
    Int32 COMMENTS = 16 : Public, Static, Literal, HasDefault
    Int32 CURLY_BEGIN = 17 : Public, Static, Literal, HasDefault
    Int32 CURLY_END = 18 : Public, Static, Literal, HasDefault
    Int32 D = 19 : Public, Static, Literal, HasDefault
    Int32 DASHMATCH = 20 : Public, Static, Literal, HasDefault
    Int32 DIGITS = 21 : Public, Static, Literal, HasDefault
    Int32 DIMENSION = 22 : Public, Static, Literal, HasDefault
    Int32 DOCUMENT_SYM = 23 : Public, Static, Literal, HasDefault
    Int32 DOMAIN_FUNCTION = 24 : Public, Static, Literal, HasDefault
    Int32 E = 25 : Public, Static, Literal, HasDefault
    Int32 EQUALS = 26 : Public, Static, Literal, HasDefault
    Int32 ESCAPE = 27 : Public, Static, Literal, HasDefault
    Int32 F = 28 : Public, Static, Literal, HasDefault
    Int32 FORWARD_SLASH = 29 : Public, Static, Literal, HasDefault
    Int32 FREQ = 30 : Public, Static, Literal, HasDefault
    Int32 FROM = 31 : Public, Static, Literal, HasDefault
    Int32 G = 32 : Public, Static, Literal, HasDefault
    Int32 GREATER = 33 : Public, Static, Literal, HasDefault
    Int32 H = 34 : Public, Static, Literal, HasDefault
    Int32 HASH = 35 : Public, Static, Literal, HasDefault
    Int32 HASH_IDENT = 36 : Public, Static, Literal, HasDefault
    Int32 HEXDIGIT = 37 : Public, Static, Literal, HasDefault
    Int32 I = 38 : Public, Static, Literal, HasDefault
    Int32 IDENT = 39 : Public, Static, Literal, HasDefault
    Int32 IMPORTANT_SYM = 40 : Public, Static, Literal, HasDefault
    Int32 IMPORT_SYM = 41 : Public, Static, Literal, HasDefault
    Int32 INCLUDES = 42 : Public, Static, Literal, HasDefault
    Int32 K = 43 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_SYM = 44 : Public, Static, Literal, HasDefault
    Int32 L = 45 : Public, Static, Literal, HasDefault
    Int32 LENGTH = 46 : Public, Static, Literal, HasDefault
    Int32 LETTER = 47 : Public, Static, Literal, HasDefault
    Int32 M = 48 : Public, Static, Literal, HasDefault
    Int32 MEDIA_SYM = 49 : Public, Static, Literal, HasDefault
    Int32 MINUS = 50 : Public, Static, Literal, HasDefault
    Int32 MSIE_EXPRESSION = 51 : Public, Static, Literal, HasDefault
    Int32 MSIE_IMAGE_TRANSFORM = 52 : Public, Static, Literal, HasDefault
    Int32 N = 53 : Public, Static, Literal, HasDefault
    Int32 NAME = 54 : Public, Static, Literal, HasDefault
    Int32 NAMESPACE_SYM = 55 : Public, Static, Literal, HasDefault
    Int32 NL = 56 : Public, Static, Literal, HasDefault
    Int32 NMCHAR = 57 : Public, Static, Literal, HasDefault
    Int32 NMSTART = 58 : Public, Static, Literal, HasDefault
    Int32 NONASCII = 59 : Public, Static, Literal, HasDefault
    Int32 NOT = 60 : Public, Static, Literal, HasDefault
    Int32 NUMBER = 61 : Public, Static, Literal, HasDefault
    Int32 O = 62 : Public, Static, Literal, HasDefault
    Int32 ONLY = 63 : Public, Static, Literal, HasDefault
    Int32 P = 64 : Public, Static, Literal, HasDefault
    Int32 PAGE_SYM = 65 : Public, Static, Literal, HasDefault
    Int32 PERCENTAGE = 66 : Public, Static, Literal, HasDefault
    Int32 PIPE = 67 : Public, Static, Literal, HasDefault
    Int32 PLUS = 68 : Public, Static, Literal, HasDefault
    Int32 PREFIXMATCH = 69 : Public, Static, Literal, HasDefault
    Int32 R = 70 : Public, Static, Literal, HasDefault
    Int32 REGEXP_FUNCTION = 71 : Public, Static, Literal, HasDefault
    Int32 RELATIVELENGTH = 72 : Public, Static, Literal, HasDefault
    Int32 RESOLUTION = 73 : Public, Static, Literal, HasDefault
    Int32 S = 74 : Public, Static, Literal, HasDefault
    Int32 SEMICOLON = 75 : Public, Static, Literal, HasDefault
    Int32 SPACE_AFTER_UNICODE = 76 : Public, Static, Literal, HasDefault
    Int32 SQUARE_BEGIN = 77 : Public, Static, Literal, HasDefault
    Int32 SQUARE_END = 78 : Public, Static, Literal, HasDefault
    Int32 STAR = 79 : Public, Static, Literal, HasDefault
    Int32 STRING = 80 : Public, Static, Literal, HasDefault
    Int32 SUBSTRINGMATCH = 81 : Public, Static, Literal, HasDefault
    Int32 SUFFIXMATCH = 82 : Public, Static, Literal, HasDefault
    Int32 T = 83 : Public, Static, Literal, HasDefault
    Int32 TILDE = 84 : Public, Static, Literal, HasDefault
    Int32 TIME = 85 : Public, Static, Literal, HasDefault
    Int32 TO = 86 : Public, Static, Literal, HasDefault
    Int32 U = 87 : Public, Static, Literal, HasDefault
    Int32 UNICODE = 88 : Public, Static, Literal, HasDefault
    Int32 UNICODE_ESCAPE_HACK = 89 : Public, Static, Literal, HasDefault
    Int32 UNICODE_NULLTERM = 90 : Public, Static, Literal, HasDefault
    Int32 UNICODE_RANGE = 91 : Public, Static, Literal, HasDefault
    Int32 UNICODE_TAB = 92 : Public, Static, Literal, HasDefault
    Int32 UNICODE_ZEROS = 93 : Public, Static, Literal, HasDefault
    Int32 URI = 94 : Public, Static, Literal, HasDefault
    Int32 URL = 95 : Public, Static, Literal, HasDefault
    Int32 URLPREFIX_FUNCTION = 96 : Public, Static, Literal, HasDefault
    Int32 V = 97 : Public, Static, Literal, HasDefault
    Int32 W = 98 : Public, Static, Literal, HasDefault
    Int32 WS = 99 : Public, Static, Literal, HasDefault
    Int32 WS_FRAGMENT = 100 : Public, Static, Literal, HasDefault
    Int32 X = 101 : Public, Static, Literal, HasDefault
    Int32 Y = 102 : Public, Static, Literal, HasDefault
    Int32 Z = 103 : Public, Static, Literal, HasDefault
    Int32 ATIDENTIFIER = 104 : Public, Static, Literal, HasDefault
    Int32 ATTRIBIDENTIFIER = 105 : Public, Static, Literal, HasDefault
    Int32 ATTRIBNAME = 106 : Public, Static, Literal, HasDefault
    Int32 ATTRIBOPERATOR = 107 : Public, Static, Literal, HasDefault
    Int32 ATTRIBOPERATORVALUE = 108 : Public, Static, Literal, HasDefault
    Int32 ATTRIBVALUE = 109 : Public, Static, Literal, HasDefault
    Int32 CHARSET = 110 : Public, Static, Literal, HasDefault
    Int32 CLASSIDENTIFIER = 111 : Public, Static, Literal, HasDefault
    Int32 COLONS = 112 : Public, Static, Literal, HasDefault
    Int32 COMBINATOR = 113 : Public, Static, Literal, HasDefault
    Int32 COMBINATOR_SIMPLE_SELECTOR = 114 : Public, Static, Literal, HasDefault
    Int32 COMBINATOR_SIMPLE_SELECTOR_SEQUENCES = 115 : Public, Static, Literal, HasDefault
    Int32 DECLARATION = 116 : Public, Static, Literal, HasDefault
    Int32 DECLARATIONS = 117 : Public, Static, Literal, HasDefault
    Int32 DOCUMENT = 118 : Public, Static, Literal, HasDefault
    Int32 DOCUMENT_MATCHNAME = 119 : Public, Static, Literal, HasDefault
    Int32 DOCUMENT_SYMBOL = 120 : Public, Static, Literal, HasDefault
    Int32 ELEMENT_NAME = 121 : Public, Static, Literal, HasDefault
    Int32 EXPR = 122 : Public, Static, Literal, HasDefault
    Int32 FUNCTIONAL_PSEUDO = 123 : Public, Static, Literal, HasDefault
    Int32 FUNCTIONBASEDVALUE = 124 : Public, Static, Literal, HasDefault
    Int32 FUNCTIONNAME = 125 : Public, Static, Literal, HasDefault
    Int32 FUNCTIONPARAM = 126 : Public, Static, Literal, HasDefault
    Int32 HASHCLASSATNAMEATTRIBPSEUDONEGATION = 127 : Public, Static, Literal, HasDefault
    Int32 HASHCLASSATNAMEATTRIBPSEUDONEGATIONNODES = 128 : Public, Static, Literal, HasDefault
    Int32 HASHIDENTIFIER = 129 : Public, Static, Literal, HasDefault
    Int32 HEXBASEDVALUE = 130 : Public, Static, Literal, HasDefault
    Int32 IDENTBASEDVALUE = 131 : Public, Static, Literal, HasDefault
    Int32 IMPORT = 132 : Public, Static, Literal, HasDefault
    Int32 IMPORTANT = 133 : Public, Static, Literal, HasDefault
    Int32 IMPORTS = 134 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES = 135 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_BLOCK = 136 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_BLOCKS = 137 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_SELECTOR = 138 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_SELECTORS = 139 : Public, Static, Literal, HasDefault
    Int32 KEYFRAMES_SYMBOL = 140 : Public, Static, Literal, HasDefault
    Int32 MEDIA = 141 : Public, Static, Literal, HasDefault
    Int32 MEDIA_EXPRESSION = 142 : Public, Static, Literal, HasDefault
    Int32 MEDIA_EXPRESSIONS = 143 : Public, Static, Literal, HasDefault
    Int32 MEDIA_FEATURE = 144 : Public, Static, Literal, HasDefault
    Int32 MEDIA_QUERY = 145 : Public, Static, Literal, HasDefault
    Int32 MEDIA_QUERY_LIST = 146 : Public, Static, Literal, HasDefault
    Int32 MEDIA_TYPE = 147 : Public, Static, Literal, HasDefault
    Int32 NAMESPACE = 148 : Public, Static, Literal, HasDefault
    Int32 NAMESPACES = 149 : Public, Static, Literal, HasDefault
    Int32 NAMESPACE_PREFIX = 150 : Public, Static, Literal, HasDefault
    Int32 NEGATIONIDENTIFIER = 151 : Public, Static, Literal, HasDefault
    Int32 NEGATION_ARG = 152 : Public, Static, Literal, HasDefault
    Int32 NOT_TEXT = 153 : Public, Static, Literal, HasDefault
    Int32 NUMBERBASEDVALUE = 154 : Public, Static, Literal, HasDefault
    Int32 ONLY_TEXT = 155 : Public, Static, Literal, HasDefault
    Int32 OPERATOR = 156 : Public, Static, Literal, HasDefault
    Int32 PAGE = 157 : Public, Static, Literal, HasDefault
    Int32 PROPERTY = 158 : Public, Static, Literal, HasDefault
    Int32 PSEUDOIDENTIFIER = 159 : Public, Static, Literal, HasDefault
    Int32 PSEUDONAME = 160 : Public, Static, Literal, HasDefault
    Int32 PSEUDO_PAGE = 161 : Public, Static, Literal, HasDefault
    Int32 RULESET = 162 : Public, Static, Literal, HasDefault
    Int32 RULESETS = 163 : Public, Static, Literal, HasDefault
    Int32 SELECTOR = 164 : Public, Static, Literal, HasDefault
    Int32 SELECTORS_GROUP = 165 : Public, Static, Literal, HasDefault
    Int32 SELECTOR_EXPRESSION = 166 : Public, Static, Literal, HasDefault
    Int32 SELECTOR_NAMESPACE_PREFIX = 167 : Public, Static, Literal, HasDefault
    Int32 SIMPLE_SELECTOR_SEQUENCE = 168 : Public, Static, Literal, HasDefault
    Int32 STAR_TEXT = 169 : Public, Static, Literal, HasDefault
    Int32 STRINGBASEDVALUE = 170 : Public, Static, Literal, HasDefault
    Int32 STYLESHEET = 171 : Public, Static, Literal, HasDefault
    Int32 TERM = 172 : Public, Static, Literal, HasDefault
    Int32 TERMWITHOPERATOR = 173 : Public, Static, Literal, HasDefault
    Int32 TERMWITHOPERATORS = 174 : Public, Static, Literal, HasDefault
    Int32 TYPE_SELECTOR = 175 : Public, Static, Literal, HasDefault
    Int32 UNARY = 176 : Public, Static, Literal, HasDefault
    Int32 UNIVERSAL = 177 : Public, Static, Literal, HasDefault
    Int32 URIBASEDVALUE = 178 : Public, Static, Literal, HasDefault
    Int32 WHITESPACE = 179 : Public, Static, Literal, HasDefault
  Properties:
    Antlr.Runtime.Tree.ITreeAdaptor TreeAdaptor 'get set' : 
    System.String[] TokenNames 'get ' : 
    System.String GrammarFileName 'get ' : 
  Methods:
    Parse(String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Parse(FileInfo, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReportError(RecognitionException): PrivateScope, Public, Virtual, HideBySig
    get_TreeAdaptor(): PrivateScope, Public, HideBySig, SpecialName
    set_TreeAdaptor(ITreeAdaptor): PrivateScope, Public, HideBySig, SpecialName
    get_TokenNames(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GrammarFileName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    main(): PrivateScope, Public, HideBySig
    synpred1_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred2_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred3_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred4_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred5_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred6_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred7_CssParser_fragment(): PrivateScope, Public, HideBySig
    synpred8_CssParser_fragment(): PrivateScope, Public, HideBySig
Class WebGrease.Css.CssStrings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String CssLowercaseValidationError 'get ' : 
    System.String CssLowercaseValidationParentNodeError 'get ' : 
    System.String CssSelectorHackError 'get ' : 
    System.String DuplicateBackgroundFormatError 'get ' : 
    System.String DuplicateImageReferenceWithDifferentRulesError 'get ' : 
    System.String ExpectedAstNode 'get ' : 
    System.String ExpectedEnum 'get ' : 
    System.String ExpectedIdentifierOrString 'get ' : 
    System.String ExpectedOperator 'get ' : 
    System.String ExpectedSimpleSelector 'get ' : 
    System.String ExpectedSingleValue 'get ' : 
    System.String ExpectedValue 'get ' : 
    System.String FileNotFoundError 'get ' : 
    System.String InnerExceptionFile 'get ' : 
    System.String InnerExceptionSelector 'get ' : 
    System.String InvalidDimensionsError 'get ' : 
    System.String OriginalFileElementEmptyError 'get ' : 
    System.String RepeatedPropertyNameError 'get ' : 
    System.String TooManyLengthsError 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CssLowercaseValidationError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CssLowercaseValidationParentNodeError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CssSelectorHackError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DuplicateBackgroundFormatError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DuplicateImageReferenceWithDifferentRulesError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedAstNode(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedEnum(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedIdentifierOrString(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedOperator(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedSimpleSelector(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedSingleValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExpectedValue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FileNotFoundError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerExceptionFile(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerExceptionSelector(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidDimensionsError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OriginalFileElementEmptyError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RepeatedPropertyNameError(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TooManyLengthsError(): PrivateScope, Public, Static, HideBySig, SpecialName
Class WebGrease.Css.Extensions.AstNodeExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    PrettyPrint(AstNode): PrivateScope, Public, Static, HideBySig
    MinifyPrint(AstNode): PrivateScope, Public, Static, HideBySig
    PrintSelector(RulesetNode): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Css.Extensions.BackgroundAstNodeExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryGetBackgroundDeclaration(IEnumerable`1, String, AstNode, Background&(Out), BackgroundImage&(Out), BackgroundPosition&(Out), List`1, HashSet`1, ImageAssemblyAnalysisLog): PrivateScope, Assembly, Static, HideBySig
    DeclarationEnumerator(DeclarationNode): PrivateScope, Assembly, Static, HideBySig
    CopyTerm(TermNode): PrivateScope, Assembly, Static, HideBySig
    CreateDeclarationNode(DeclarationNode, List`1): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Css.Extensions.CommonTreeExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Children(CommonTree, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GrandChildren(CommonTree, String): PrivateScope, Public, Static, HideBySig
    TextOrDefault(CommonTree, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FirstChildText(CommonTree): PrivateScope, Public, Static, HideBySig
    FirstChildTextOrDefault(CommonTree, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FirstChildText(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FirstChildTextOrDefault(IEnumerable`1, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class WebGrease.Css.Extensions.ListExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AsSafeReadOnly(List`1): PrivateScope, Public, Static, HideBySig
    ForEach(IEnumerable`1, Action`1): PrivateScope, Public, Static, HideBySig
    ForEach(IEnumerable`1, Action`2): PrivateScope, Public, Static, HideBySig
    ForEach(IList`1, Action`2): PrivateScope, Public, Static, HideBySig
    ToSafeReadOnlyCollection(IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class WebGrease.Css.Extensions.NumberExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    UnaryOperator(Nullable`1): PrivateScope, Assembly, Static, HideBySig
    Pixels(Nullable`1): PrivateScope, Assembly, Static, HideBySig
    ParseFloat(String): PrivateScope, Assembly, Static, HideBySig
    SignInt(String): PrivateScope, Assembly, Static, HideBySig
    TryParseZeroBasedNumberValue(String): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String BackgroundImage = background-image : Public, Static, Literal, HasDefault
    System.String BackgroundRepeat = background-repeat : Public, Static, Literal, HasDefault
    System.String BackgroundPosition = background-position : Public, Static, Literal, HasDefault
    System.String Background = background : Public, Static, Literal, HasDefault
    System.String Repeat = repeat : Public, Static, Literal, HasDefault
    System.String NoRepeat = no-repeat : Public, Static, Literal, HasDefault
    System.String RepeatX = repeat-x : Public, Static, Literal, HasDefault
    System.String RepeatY = repeat-y : Public, Static, Literal, HasDefault
    System.String Left = left : Public, Static, Literal, HasDefault
    System.String Right = right : Public, Static, Literal, HasDefault
    System.String Center = center : Public, Static, Literal, HasDefault
    System.String Top = top : Public, Static, Literal, HasDefault
    System.String Bottom = bottom : Public, Static, Literal, HasDefault
    System.String Px = px : Public, Static, Literal, HasDefault
    System.String Percentage = % : Public, Static, Literal, HasDefault
    System.String Subtract = - : Public, Static, Literal, HasDefault
    System.String SingleSpace =   : Public, Static, Literal, HasDefault
    System.String UpFolder = .. : Public, Static, Literal, HasDefault
    System.String Zero = 0 : Public, Static, Literal, HasDefault
    System.String PxFormat = {0}px : Public, Static, Literal, HasDefault
    System.String OriginalfileElementName = originalfile : Public, Static, Literal, HasDefault
    System.String WidthElementName = width : Public, Static, Literal, HasDefault
    System.String HeightElementName = height : Public, Static, Literal, HasDefault
    System.String XCoordinateElementName = xposition : Public, Static, Literal, HasDefault
    System.String YCoordinateElementName = yposition : Public, Static, Literal, HasDefault
    System.String PositionInSpriteElementName = positioninsprite : Public, Static, Literal, HasDefault
    System.String InputElementName = input : Public, Static, Literal, HasDefault
    System.String OutputElementName = output : Public, Static, Literal, HasDefault
    System.String FileAttributeName = file : Public, Static, Literal, HasDefault
    System.String UrlTerm = url({0}) : Public, Static, Literal, HasDefault
Class WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ImageName 'get set' : 
    System.String SpriteName 'get set' : 
  Methods:
    get_ImageName(): PrivateScope, Public, HideBySig, SpecialName
    get_SpriteName(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String BucketName 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] ImagesInBucket 'get set' : 
  Methods:
    get_BucketName(): PrivateScope, Public, HideBySig, SpecialName
    get_ImagesInBucket(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput ImageAssemblyScanInput 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.ImageAssemble.InputImage] ImageReferencesToAssemble 'get set' : 
  Methods:
    get_ImageAssemblyScanInput(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageAssemblyScanInput(ImageAssemblyScanInput): PrivateScope, Public, HideBySig, SpecialName
    get_ImageReferencesToAssemble(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.Linq.XContainer): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RelativeOutputFilePath 'get set' : 
    System.String OutputFilePath 'get set' : 
    System.String OriginalFilePath 'get set' : 
    System.Nullable`1[System.Int32] X 'get set' : 
    System.Nullable`1[System.Int32] Y 'get set' : 
    System.Nullable`1[WebGrease.ImageAssemble.ImagePosition] ImagePosition 'get set' : 
  Methods:
    get_RelativeOutputFilePath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_RelativeOutputFilePath(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_OutputFilePath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_OutputFilePath(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_OriginalFilePath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_OriginalFilePath(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_X(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Y(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImagePosition(): PrivateScope, Assembly, HideBySig, SpecialName
    LoadDimension(XElement): PrivateScope, Assembly, Static, HideBySig
Struct WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason IncorrectPosition = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason NoRepeat = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason NoUrl = 2 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason IgnoreUrl = 3 : Public, Static, Literal, HasDefault
Class WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[WebGrease.Css.ImageAssemblyAnalysis.LogModel.FailureReason] FailureReason 'get set' : 
    WebGrease.Css.Ast.AstNode AstNode 'get set' : 
  Methods:
    get_FailureReason(): PrivateScope, Public, HideBySig, SpecialName
    set_FailureReason(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_AstNode(): PrivateScope, Public, HideBySig, SpecialName
    set_AstNode(AstNode): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(ImageAssemblyAnalysis): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageLog: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[WebGrease.Css.ImageAssemblyAnalysis.LogModel.AssembledImage] InputImages 'get set' : 
  Methods:
    get_InputImages(): PrivateScope, Assembly, HideBySig, SpecialName
Class WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Background: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(WebGrease.Css.Ast.DeclarationNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.DeclarationNode DeclarationAstNode 'get set' : 
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage BackgroundImage 'get set' : 
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition BackgroundPosition 'get set' : 
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat BackgroundRepeat 'get set' : 
    System.String Url 'get ' : 
  Methods:
    get_DeclarationAstNode(): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundImage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BackgroundPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BackgroundRepeat(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Url(): PrivateScope, Assembly, HideBySig, SpecialName
    UpdateBackgroundNode(String, Nullable`1, Nullable`1): PrivateScope, Assembly, HideBySig
Class WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundImage: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(WebGrease.Css.Ast.DeclarationNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String UrlRegEx : Assembly, Static, InitOnly
  Properties:
    WebGrease.Css.Ast.DeclarationNode DeclarationNode 'get set' : 
    WebGrease.Css.Ast.TermNode UrlTermNode 'get set' : 
    System.String Url 'get set' : 
  Methods:
    get_DeclarationNode(): PrivateScope, Public, HideBySig, SpecialName
    get_UrlTermNode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Url(): PrivateScope, Assembly, HideBySig, SpecialName
    HasMultipleUrls(String): PrivateScope, Assembly, Static, HideBySig
    TryGetUrl(TermNode, String&(Out)): PrivateScope, Assembly, Static, HideBySig
    VerifyBackgroundUrl(AstNode, String, HashSet`1, ImageAssemblyAnalysisLog, Boolean&(Out)): PrivateScope, Assembly, HideBySig
    ParseTerm(TermNode): PrivateScope, Assembly, HideBySig
    ParseTermWithOperator(TermWithOperatorNode): PrivateScope, Assembly, HideBySig
    UpdateTermForUrl(TermNode, TermNode&(Out), String): PrivateScope, Assembly, HideBySig
    UpdateBackgroundImageNode(String): PrivateScope, Assembly, HideBySig
Struct WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Left = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Right = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Center = 2 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Top = 3 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Bottom = 4 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Px = 5 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Percentage = 6 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source NoUnits = 7 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source Unknown = 8 : Public, Static, Literal, HasDefault
Class WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundPosition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(WebGrease.Css.Ast.DeclarationNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.Ast.DeclarationNode DeclarationNode 'get set' : 
    System.Nullable`1[System.Single] X 'get set' : 
    System.Nullable`1[System.Single] Y 'get set' : 
    System.Nullable`1[WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source] XSource 'get set' : 
    System.Nullable`1[WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Source] YSource 'get set' : 
    WebGrease.Css.Ast.TermNode XTermNode 'get set' : 
    WebGrease.Css.Ast.TermNode YTermNode 'get set' : 
  Methods:
    get_DeclarationNode(): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Y(): PrivateScope, Assembly, HideBySig, SpecialName
    get_XSource(): PrivateScope, Assembly, HideBySig, SpecialName
    get_YSource(): PrivateScope, Assembly, HideBySig, SpecialName
    get_XTermNode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_YTermNode(): PrivateScope, Assembly, HideBySig, SpecialName
    AddingMissingXAndY(Nullable`1, Nullable`1, Boolean, Boolean, Int32, Int32, List`1): PrivateScope, Assembly, Static, HideBySig
    CreateNewDeclaration(Nullable`1, Nullable`1): PrivateScope, Assembly, Static, HideBySig
    IsVerticalSpriteCandidate(AstNode, ImageAssemblyAnalysisLog): PrivateScope, Assembly, HideBySig
    IsHorizontalRightAligned(): PrivateScope, Assembly, HideBySig
    IsHorizontalCenterAligned(): PrivateScope, Assembly, HideBySig
    GetImagePositionInVerticalSprite(): PrivateScope, Assembly, HideBySig
    ParseTerm(TermNode): PrivateScope, Assembly, HideBySig
    ParseTermWithOperator(TermWithOperatorNode): PrivateScope, Assembly, HideBySig
    UpdateTermForX(TermNode, TermNode&(Out), Nullable`1): PrivateScope, Assembly, HideBySig
    UpdateTermForY(TermNode, TermNode&(Out), Nullable`1): PrivateScope, Assembly, HideBySig
    UpdateBackgroundPositionNode(Nullable`1, Nullable`1): PrivateScope, Assembly, HideBySig
Struct WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat Repeat = 0 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat NoRepeat = 1 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat RepeatX = 2 : Public, Static, Literal, HasDefault
    WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat RepeatY = 3 : Public, Static, Literal, HasDefault
Class WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.BackgroundRepeat: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(WebGrease.Css.Ast.DeclarationNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[WebGrease.Css.ImageAssemblyAnalysis.PropertyModel.Repeat] RepeatValue 'get set' : 
  Methods:
    get_RepeatValue(): PrivateScope, Assembly, HideBySig, SpecialName
    VerifyBackgroundNoRepeat(AstNode, ImageAssemblyAnalysisLog): PrivateScope, Assembly, HideBySig
    ParseTerm(TermNode): PrivateScope, Assembly, HideBySig
    ParseTermWithOperator(TermWithOperatorNode): PrivateScope, Assembly, HideBySig
Class WebGrease.CssMinifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.String] Errors 'get set' : 
    Boolean ShouldMinify 'get set' : 
  Methods:
    get_Errors(): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldMinify(): PrivateScope, Public, HideBySig, SpecialName
    set_ShouldMinify(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Minify(String): PrivateScope, Public, HideBySig
Class WebGrease.Css.PrinterFormatter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean PrettyPrint 'get set' : 
    Char IndentCharacter 'get set' : 
    Int32 IndentSize 'get set' : 
  Methods:
    get_PrettyPrint(): PrivateScope, Public, HideBySig, SpecialName
    set_PrettyPrint(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IndentCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentCharacter(Char): PrivateScope, Public, HideBySig, SpecialName
    get_IndentSize(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Append(String): PrivateScope, Public, HideBySig
    Append(Char): PrivateScope, Public, HideBySig
    AppendLine(Char): PrivateScope, Public, HideBySig
    AppendLine(): PrivateScope, Public, HideBySig
    Remove(Int32, Int32): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    IncrementIndentLevel(): PrivateScope, Public, HideBySig
    DecrementIndentLevel(): PrivateScope, Public, HideBySig
    WriteIndent(): PrivateScope, Public, HideBySig
Class WebGrease.Css.StringPathExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    MakeRelativeTo(String, String, Char[]): PrivateScope, Public, Static, HideBySig
    MakeAbsoluteTo(String, String): PrivateScope, Public, Static, HideBySig
    GetFullPathWithLowercase(String): PrivateScope, Public, Static, HideBySig
    CombinePath(String, String): PrivateScope, Public, Static, HideBySig
Class WebGrease.Css.UnicodeDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Decode(String): PrivateScope, Public, Static, HideBySig
Class WebGrease.Css.Visitor.NodeVisitor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitImportNode(ImportNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitAttribNode(AttribNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitDeclarationNode(DeclarationNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitExprNode(ExprNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitFunctionNode(FunctionNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitPseudoNode(PseudoNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitSelectorNode(SelectorNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitTermNode(TermNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitTermWithOperatorNode(TermWithOperatorNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitFunctionalPseudoNode(FunctionalPseudoNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitNegationArgNode(NegationArgNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitNegationNode(NegationNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitSelectorExpressionNode(SelectorExpressionNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitSelectorsGroupNode(SelectorsGroupNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitTypeSelectorNode(TypeSelectorNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitUniversalSelectorNode(UniversalSelectorNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitNamespaceNode(NamespaceNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitMediaQueryNode(MediaQueryNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitMediaExpressionNode(MediaExpressionNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitKeyFramesNode(KeyFramesNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitKeyFramesBlockNode(KeyFramesBlockNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VisitDocumentQueryNode(DocumentQueryNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class WebGrease.Css.Visitor.NodeTransformVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitImportNode(ImportNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig
    VisitDocumentQueryNode(DocumentQueryNode): PrivateScope, Public, Virtual, HideBySig
    VisitAttribNode(AttribNode): PrivateScope, Public, Virtual, HideBySig
    VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode): PrivateScope, Public, Virtual, HideBySig
    VisitDeclarationNode(DeclarationNode): PrivateScope, Public, Virtual, HideBySig
    VisitExprNode(ExprNode): PrivateScope, Public, Virtual, HideBySig
    VisitFunctionNode(FunctionNode): PrivateScope, Public, Virtual, HideBySig
    VisitPseudoNode(PseudoNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorNode(SelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitTermNode(TermNode): PrivateScope, Public, Virtual, HideBySig
    VisitTermWithOperatorNode(TermWithOperatorNode): PrivateScope, Public, Virtual, HideBySig
    VisitFunctionalPseudoNode(FunctionalPseudoNode): PrivateScope, Public, Virtual, HideBySig
    VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode): PrivateScope, Public, Virtual, HideBySig
    VisitNegationArgNode(NegationArgNode): PrivateScope, Public, Virtual, HideBySig
    VisitNegationNode(NegationNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorExpressionNode(SelectorExpressionNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorsGroupNode(SelectorsGroupNode): PrivateScope, Public, Virtual, HideBySig
    VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig
    VisitTypeSelectorNode(TypeSelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitUniversalSelectorNode(UniversalSelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig
    VisitNamespaceNode(NamespaceNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaQueryNode(MediaQueryNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaExpressionNode(MediaExpressionNode): PrivateScope, Public, Virtual, HideBySig
    VisitKeyFramesNode(KeyFramesNode): PrivateScope, Public, Virtual, HideBySig
    VisitKeyFramesBlockNode(KeyFramesBlockNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.ColorOptimizationVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeTransformVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitTermNode(TermNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.ExcludePropertyVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeTransformVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitDeclarationNode(DeclarationNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.FloatOptimizationVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeTransformVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitTermNode(TermNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.ImageAssemblyScanVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[System.String], System.Collections.Generic.IEnumerable`1[WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput DefaultImageAssemblyScanOutput 'get ' : 
    System.Collections.Generic.IList`1[WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanOutput] ImageAssemblyScanOutputs 'get ' : 
    WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog ImageAssemblyAnalysisLog 'get ' : 
  Methods:
    get_DefaultImageAssemblyScanOutput(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageAssemblyScanOutputs(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageAssemblyAnalysisLog(): PrivateScope, Public, HideBySig, SpecialName
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig
    VisitTermWithOperatorNode(TermWithOperatorNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.OptimizationVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.PrintVisitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
  Properties:
    Char IndentCharacter 'get set' : 
    Int32 IndentSize 'get set' : 
  Methods:
    get_IndentCharacter(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IndentCharacter(Char): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IndentSize(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    Print(AstNode, Boolean): PrivateScope, Public, Static, HideBySig
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitImportNode(ImportNode): PrivateScope, Public, Virtual, HideBySig
    VisitNamespaceNode(NamespaceNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorsGroupNode(SelectorsGroupNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorNode(SelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig
    VisitUniversalSelectorNode(UniversalSelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitTypeSelectorNode(TypeSelectorNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode): PrivateScope, Public, Virtual, HideBySig
    VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode): PrivateScope, Public, Virtual, HideBySig
    VisitAttribNode(AttribNode): PrivateScope, Public, Virtual, HideBySig
    VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode): PrivateScope, Public, Virtual, HideBySig
    VisitPseudoNode(PseudoNode): PrivateScope, Public, Virtual, HideBySig
    VisitNegationNode(NegationNode): PrivateScope, Public, Virtual, HideBySig
    VisitNegationArgNode(NegationArgNode): PrivateScope, Public, Virtual, HideBySig
    VisitDeclarationNode(DeclarationNode): PrivateScope, Public, Virtual, HideBySig
    VisitExprNode(ExprNode): PrivateScope, Public, Virtual, HideBySig
    VisitTermNode(TermNode): PrivateScope, Public, Virtual, HideBySig
    VisitTermWithOperatorNode(TermWithOperatorNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig
    VisitDocumentQueryNode(DocumentQueryNode): PrivateScope, Public, Virtual, HideBySig
    VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode): PrivateScope, Public, Virtual, HideBySig
    VisitFunctionNode(FunctionNode): PrivateScope, Public, Virtual, HideBySig
    VisitFunctionalPseudoNode(FunctionalPseudoNode): PrivateScope, Public, Virtual, HideBySig
    VisitSelectorExpressionNode(SelectorExpressionNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaQueryNode(MediaQueryNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaExpressionNode(MediaExpressionNode): PrivateScope, Public, Virtual, HideBySig
    VisitKeyFramesNode(KeyFramesNode): PrivateScope, Public, Virtual, HideBySig
    VisitKeyFramesBlockNode(KeyFramesBlockNode): PrivateScope, Public, Virtual, HideBySig
    Print(Boolean, AstNode): PrivateScope, Assembly, HideBySig
Class WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(System.Collections.Generic.HashSet`1[System.String], Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.Visitor.ValidateLowercaseVisitor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :WebGrease.Css.Visitor.NodeVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitStyleSheetNode(StyleSheetNode): PrivateScope, Public, Virtual, HideBySig
    VisitRulesetNode(RulesetNode): PrivateScope, Public, Virtual, HideBySig
    VisitMediaNode(MediaNode): PrivateScope, Public, Virtual, HideBySig
    VisitPageNode(PageNode): PrivateScope, Public, Virtual, HideBySig
    VisitDeclarationNode(DeclarationNode): PrivateScope, Public, Virtual, HideBySig
Class WebGrease.Css.ErrorHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    DedupeCSSErrors(AggregateException): PrivateScope, Assembly, Static, HideBySig
    CreateBuildErrors(AggregateException, String): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.Extensions.StringExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryParseBool(String): PrivateScope, Assembly, Static, HideBySig
    TryParseInt32(String): PrivateScope, Assembly, Static, HideBySig
    IsNullOrWhitespace(String): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.ImageAssemble.ArgumentParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String DirectoryName = /inputdirectory: : Assembly, Static, Literal, HasDefault
    System.String ShorthandInputDirectory = /i: : Assembly, Static, Literal, HasDefault
    System.String Paths = /inputfilepaths: : Assembly, Static, Literal, HasDefault
    System.String ShorthandInputFilePaths = /f: : Assembly, Static, Literal, HasDefault
    System.String OutputDirectory = /outputDirectory: : Assembly, Static, Literal, HasDefault
    System.String PackingScheme = /packingscheme: : Assembly, Static, Literal, HasDefault
    System.String ShorthandPackingScheme = /ps: : Assembly, Static, Literal, HasDefault
    System.String SpriteName = /spriteimage: : Assembly, Static, Literal, HasDefault
    System.String ShorthandSpriteImage = /s: : Assembly, Static, Literal, HasDefault
    System.String XmlMapName = /logfile: : Assembly, Static, Literal, HasDefault
    System.String ShorthandLogFile = /l: : Assembly, Static, Literal, HasDefault
    System.String ShorthandPadding = /p: : Assembly, Static, Literal, HasDefault
    System.String Padding = /padding: : Assembly, Static, Literal, HasDefault
    System.String Dedup = /dedup: : Assembly, Static, Literal, HasDefault
    System.String ShorthandDedup = /d: : Assembly, Static, Literal, HasDefault
    System.String Question = /? : Assembly, Static, Literal, HasDefault
    System.String Help = /help : Assembly, Static, Literal, HasDefault
    System.String Horizontal = HORIZONTAL : Assembly, Static, Literal, HasDefault
    System.String Vertical = VERTICAL : Assembly, Static, Literal, HasDefault
    Int32 DefaultPadding = 50 : Assembly, Static, Literal, HasDefault
    Int32 MinPadding = 0 : Assembly, Static, Literal, HasDefault
    Int32 MaxPadding = 1024 : Assembly, Static, Literal, HasDefault
    System.String DefaultSpriteName =  : Assembly, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.String] ArgumentValueData 'get set' : 
    System.Collections.ArrayList MissingParams 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[WebGrease.ImageAssemble.InputImage] InputImageList 'get ' : 
  Methods:
    get_ArgumentValueData(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_ArgumentValueData(Dictionary`2): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MissingParams(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InputImageList(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ParseArguments(String[], IList`1): PrivateScope, Assembly, Static, HideBySig
    ParseSpritePackingType(String): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.ImageAssemble.ColorQuantizer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Quantize(Image, PixelFormat): PrivateScope, Assembly, Static, HideBySig
    Quantize(Image, PixelFormat, Boolean): PrivateScope, Assembly, Static, HideBySig
Class WebGrease.ImageAssemble.ImageAssembler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String InputDirectory 'get set' : 
    System.String InputFilePaths 'get set' : 
    System.String SpriteImage 'get set' : 
    System.String LogFile 'get set' : 
    System.String Padding 'get set' : 
    System.String OutputDirectory 'get set' : 
    System.String PngOptimizerToolCommand 'get set' : 
    System.String PackingScheme 'get set' : 
    Boolean ShouldThrowException 'get set' : 
    Boolean Dedup 'get set' : 
    System.Collections.Generic.IList`1[WebGrease.ImageAssemble.InputImage] InputImageList 'get set' : 
  Methods:
    get_InputDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_InputDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_InputFilePaths(): PrivateScope, Public, HideBySig, SpecialName
    set_InputFilePaths(String): PrivateScope, Public, HideBySig, SpecialName
    get_SpriteImage(): PrivateScope, Public, HideBySig, SpecialName
    set_SpriteImage(String): PrivateScope, Public, HideBySig, SpecialName
    get_LogFile(): PrivateScope, Public, HideBySig, SpecialName
    set_LogFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_Padding(): PrivateScope, Public, HideBySig, SpecialName
    set_Padding(String): PrivateScope, Public, HideBySig, SpecialName
    get_OutputDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_PngOptimizerToolCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_PngOptimizerToolCommand(String): PrivateScope, Public, HideBySig, SpecialName
    get_PackingScheme(): PrivateScope, Public, HideBySig, SpecialName
    set_PackingScheme(String): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldThrowException(): PrivateScope, Public, HideBySig, SpecialName
    set_ShouldThrowException(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Dedup(): PrivateScope, Public, HideBySig, SpecialName
    set_Dedup(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InputImageList(): PrivateScope, Public, HideBySig, SpecialName
    set_InputImageList(IList`1): PrivateScope, Public, HideBySig, SpecialName
    Execute(): PrivateScope, Public, HideBySig
Struct WebGrease.ImageAssemble.SpritePackingType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.ImageAssemble.SpritePackingType Vertical = 0 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.SpritePackingType Horizontal = 1 : Public, Static, Literal, HasDefault
Class WebGrease.ImageAssemble.ImageAssembleBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.Drawing.Imaging.ImageFormat Format 'get ' : 
    WebGrease.ImageAssemble.ImageType Type 'get ' : 
    System.String DefaultExtension 'get ' : 
    System.String AssembleFileName 'get set' : 
    WebGrease.ImageAssemble.SpritePackingType PackingType 'get set' : 
    WebGrease.ImageAssemble.ImageMap ImageXmlMap 'get set' : 
    Int32 PaddingBetweenImages 'get set' : 
    System.String OptimizerToolCommand 'get set' : 
  Methods:
    get_Format(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_Type(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_DefaultExtension(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_AssembleFileName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AssembleFileName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_PackingType(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PackingType(SpritePackingType): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageXmlMap(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ImageXmlMap(ImageMap): PrivateScope, Assembly, HideBySig, SpecialName
    get_PaddingBetweenImages(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PaddingBetweenImages(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_OptimizerToolCommand(): PrivateScope, Assembly, HideBySig, SpecialName
    set_OptimizerToolCommand(String): PrivateScope, Assembly, HideBySig, SpecialName
    Assemble(Dictionary`2): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class WebGrease.ImageAssemble.ImageAssembleGenerator: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AssembleImages(ReadOnlyCollection`1, SpritePackingType, String, String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    RegisterAvailableAssemblers(): PrivateScope, Assembly, Static, HideBySig
    SeparateByImageType(ReadOnlyCollection`1): PrivateScope, Assembly, Static, HideBySig
Struct WebGrease.ImageAssemble.ImageType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.ImageAssemble.ImageType NotSupported = 0 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.ImageType Photo = 1 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.ImageType NonphotoNonindexed = 2 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.ImageType NonphotoIndexed = 3 : Public, Static, Literal, HasDefault
Class WebGrease.ImageAssemble.ImageAssembleStrings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String AdditionalDetailsMessage 'get ' : 
    System.String BitDepthParsingErrorMessage 'get ' : 
    System.String DirectoryDoesNotExistMessage 'get ' : 
    System.String DuplicateInputFilePathsMessage 'get ' : 
    System.String EightBitPNGCannotbeSpritedMessage 'get ' : 
    System.String IgnoredFilesMessage 'get ' : 
    System.String ImageHashNameUpdateFailedMessage 'get ' : 
    System.String ImageLoadOutofMemoryExceptionMessage 'get ' : 
    System.String ImagePositionValues 'get ' : 
    System.String ImageSaveExternalExceptionMessage 'get ' : 
    System.String InputFilesDuplicateParameterMessage 'get ' : 
    System.String InputFilesMissingPositionMessage 'get ' : 
    System.String InputFilesPathAndPositionMessage 'get ' : 
    System.String InputImageListNoImageMessage 'get ' : 
    System.String InvalidImagePositionMessage 'get ' : 
    System.String InvalidInputParameterMessage 'get ' : 
    System.String InvalidInputParameterValueMessage 'get ' : 
    System.String InvalidPaddingValueMessage 'get ' : 
    System.String MissingInputParameterMessage 'get ' : 
    System.String NoInputFilesMessage 'get ' : 
    System.String NoInputFileToProcessMessage 'get ' : 
    System.String NoInputParametersMessage 'get ' : 
    System.String PNGBitDepthNotSupportedMessage 'get ' : 
    System.String SingleInputImageCannotBeSpritedMessage 'get ' : 
    System.String SinglePNGCannotBeSpritedMessage 'get ' : 
    System.String ToolCommandLineErrorMessage 'get ' : 
    System.String ToolSuccessfulCompletionMessage 'get ' : 
    System.String ToolUsageMessage 'get ' : 
    System.String ValueMissingForInputParameterMessage 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_AdditionalDetailsMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_BitDepthParsingErrorMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DirectoryDoesNotExistMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DuplicateInputFilePathsMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_EightBitPNGCannotbeSpritedMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IgnoredFilesMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ImageHashNameUpdateFailedMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ImageLoadOutofMemoryExceptionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ImagePositionValues(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ImageSaveExternalExceptionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InputFilesDuplicateParameterMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InputFilesMissingPositionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InputFilesPathAndPositionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InputImageListNoImageMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidImagePositionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidInputParameterMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidInputParameterValueMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidPaddingValueMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MissingInputParameterMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NoInputFilesMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NoInputFileToProcessMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NoInputParametersMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_PNGBitDepthNotSupportedMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SingleInputImageCannotBeSpritedMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SinglePNGCannotBeSpritedMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ToolCommandLineErrorMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ToolSuccessfulCompletionMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ToolUsageMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ValueMissingForInputParameterMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class WebGrease.ImageAssemble.ImageMap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AppendToXml(String, String): PrivateScope, Assembly, HideBySig
    AppendToXml(String, String, Int32, Int32, Int32, Int32, String, Boolean, Nullable`1): PrivateScope, Assembly, HideBySig
    AppendPadding(String): PrivateScope, Assembly, HideBySig
    SaveXmlMap(): PrivateScope, Assembly, HideBySig
    UpdateAssembledImageName(String, String): PrivateScope, Assembly, HideBySig
Struct WebGrease.ImageAssemble.ImagePosition: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WebGrease.ImageAssemble.ImagePosition Left = 0 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.ImagePosition Right = 1 : Public, Static, Literal, HasDefault
    WebGrease.ImageAssemble.ImagePosition Center = 2 : Public, Static, Literal, HasDefault
Class WebGrease.ImageAssemble.InputImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ImagePath 'get set' : 
    WebGrease.ImageAssemble.ImagePosition Position 'get set' : 
    System.Collections.Generic.IList`1[System.String] DuplicateImagePaths 'get ' : 
  Methods:
    get_ImagePath(): PrivateScope, Public, HideBySig, SpecialName
    set_ImagePath(String): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(ImagePosition): PrivateScope, Public, HideBySig, SpecialName
    get_DuplicateImagePaths(): PrivateScope, Public, HideBySig, SpecialName
Class WebGrease.ImageAssemble.NonphotoIndexedAssemble: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :WebGrease.ImageAssemble.ImageAssembleBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Imaging.ImageFormat Format 'get ' : 
    WebGrease.ImageAssemble.ImageType Type 'get ' : 
    System.String DefaultExtension 'get ' : 
  Methods:
    get_Format(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Type(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_DefaultExtension(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class WebGrease.ImageAssemble.NonphotoNonindexedAssemble: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :WebGrease.ImageAssemble.ImageAssembleBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Imaging.ImageFormat Format 'get ' : 
    WebGrease.ImageAssemble.ImageType Type 'get ' : 
    System.String DefaultExtension 'get ' : 
  Methods:
    get_Format(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Type(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_DefaultExtension(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class WebGrease.ImageAssemble.NotSupportedAssemble: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :WebGrease.ImageAssemble.ImageAssembleBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Imaging.ImageFormat Format 'get ' : 
    WebGrease.ImageAssemble.ImageType Type 'get ' : 
    System.String DefaultExtension 'get ' : 
  Methods:
    get_Format(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Type(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_DefaultExtension(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Assemble(Dictionary`2): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class WebGrease.ImageAssemble.PhotoAssemble: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :WebGrease.ImageAssemble.ImageAssembleBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Imaging.ImageFormat Format 'get ' : 
    System.String DefaultExtension 'get ' : 
    WebGrease.ImageAssemble.ImageType Type 'get ' : 
  Methods:
    get_Format(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_DefaultExtension(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Type(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class WebGrease.ResourceStrings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String ConfigurationFileParseError 'get ' : 
    System.String DuplicateFoundFormat 'get ' : 
    System.String ErrorsInFileFormat 'get ' : 
    System.String GeneralErrorMessage 'get ' : 
    System.String InvalidBundlingOutputFile 'get ' : 
    System.String MoreThan256Colours 'get ' : 
    System.String MultipleSwitches 'get ' : 
    System.String NoFilesProcessed 'get ' : 
    System.String SemiTransparencyFound 'get ' : 
    System.String Usage 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ConfigurationFileParseError(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DuplicateFoundFormat(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ErrorsInFileFormat(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_GeneralErrorMessage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidBundlingOutputFile(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MoreThan256Colours(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MultipleSwitches(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NoFilesProcessed(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SemiTransparencyFound(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Usage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class WebGrease.Strings: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Char[] FileFilterSeparator : Assembly, Static, InitOnly
    System.Collections.Generic.List`1[System.String] DefaultImageExtensions : Assembly, Static, InitOnly
    System.String[] HackSelectors : Assembly, Static, InitOnly
    System.String AllFilesFilter = *.* : Assembly, Static, Literal, HasDefault
    System.String XmlFilesFilter = *.xml : Assembly, Static, Literal, HasDefault
    System.String Error = Error : Assembly, Static, Literal, HasDefault
    System.String Warning = Warning : Assembly, Static, Literal, HasDefault
    System.String WorkFlow = Statics Workflow : Assembly, Static, Literal, HasDefault
    System.String VSErrorFormat = {0}: {1}{2} {3}: {4} : Assembly, Static, Literal, HasDefault
    System.String BackwardSlash = \ : Assembly, Static, Literal, HasDefault
    System.String Comma = , : Assembly, Static, Literal, HasDefault
    System.String Css = css : Assembly, Static, Literal, HasDefault
    System.String MinCssExtension = .min.css : Assembly, Static, Literal, HasDefault
    System.String MinJsExtension = .min.js : Assembly, Static, Literal, HasDefault
    System.String CssFilter = *.css : Assembly, Static, Literal, HasDefault
    System.String MinCssFilter = *.min.css : Assembly, Static, Literal, HasDefault
    System.String JsFilter = *.js : Assembly, Static, Literal, HasDefault
    System.String MinJsFilter = *.min.js : Assembly, Static, Literal, HasDefault
    System.String DefaultCssVersion = css21 : Assembly, Static, Literal, HasDefault
    System.String DoubleDot = .. : Assembly, Static, Literal, HasDefault
    System.String ForwardSlash = / : Assembly, Static, Literal, HasDefault
    System.String Ie = ie : Assembly, Static, Literal, HasDefault
    System.String JS = js : Assembly, Static, Literal, HasDefault
    System.String LocalizationResourceKeyDelimiter = % : Assembly, Static, Literal, HasDefault
    System.String LocalizationResourceKeyRegex = ^[a-zA-Z][\w\.]*$ : Assembly, Static, Literal, HasDefault
    System.String Px = px : Assembly, Static, Literal, HasDefault
    System.String ScanLogExtension = .scan.xml : Assembly, Static, Literal, HasDefault
    System.String ResxExtension = .resx : Assembly, Static, Literal, HasDefault
    System.String Semicolon = ; : Assembly, Static, Literal, HasDefault
    Char SemicolonChar = ; : Assembly, Static, Literal, HasDefault
    Char CommaChar = , : Assembly, Static, Literal, HasDefault
    Char PipeChar = | : Assembly, Static, Literal, HasDefault
    System.String Underscore = _ : Assembly, Static, Literal, HasDefault
    System.String DefaultLocale = generic-generic : Assembly, Static, Literal, HasDefault
    System.String DefaultResx = generic-generic.resx : Assembly, Static, Literal, HasDefault
    System.String XmlExtension = .xml : Assembly, Static, Literal, HasDefault
    System.String LazyLoadXmlFileExtension = .lazyload.xml : Assembly, Static, Literal, HasDefault
    System.String DefaultMandatoryJsMinifyArgs = -Ei:utf-8 -Eo:utf-8 -p -z : Assembly, Static, Literal, HasDefault
    System.String GlobalsToIgnoreArg = /global: : Assembly, Static, Literal, HasDefault
    System.String DefaultGlobalsToIgnore = jQuery : Assembly, Static, Literal, HasDefault
    System.String DefaultMinifyArgs = -h -d -m -k : Assembly, Static, Literal, HasDefault
    System.String DefaultAnalyzeArgs = -analyze -WARN:4 : Assembly, Static, Literal, HasDefault
    System.String CssLocalizedOutput = CssLocalizedOutput : Assembly, Static, Literal, HasDefault
    System.String JsLocalizedOutput = JsLocalizedOutput : Assembly, Static, Literal, HasDefault
    System.String CssPreHashedOutput = CssPreHashedOutput : Assembly, Static, Literal, HasDefault
    System.String JsPreHashedOutput = JsPreHasedOutput : Assembly, Static, Literal, HasDefault
    System.String ImagesLogFile = images_log.xml : Assembly, Static, Literal, HasDefault
    System.String CssLogFile = css_log.xml : Assembly, Static, Literal, HasDefault
    System.String JsLogFile = js_log.xml : Assembly, Static, Literal, HasDefault
  Properties:
    Char[] SemicolonSeparator 'get ' : 
  Methods:
    get_SemicolonSeparator(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class WebGrease.Activities.FileHasherActivity: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] SourceDirectories 'get set' : 
    System.String DestinationDirectory 'get set' : 
    Boolean CreateExtraDirectoryLevelFromHashes 'get set' : 
    System.String BasePrefixToAddToOutputPath 'get set' : 
    System.String BasePrefixToRemoveFromOutputPathInLog 'get set' : 
    System.String BasePrefixToRemoveFromInputPathInLog 'get set' : 
    System.String LogFileName 'get set' : 
    Boolean ShouldPreserveSourceDirectoryStructure 'get set' : 
    System.String FileTypeFilter 'get set' : 
  Methods:
    get_SourceDirectories(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DestinationDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DestinationDirectory(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_CreateExtraDirectoryLevelFromHashes(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CreateExtraDirectoryLevelFromHashes(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_BasePrefixToAddToOutputPath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BasePrefixToAddToOutputPath(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_BasePrefixToRemoveFromOutputPathInLog(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BasePrefixToRemoveFromOutputPathInLog(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_BasePrefixToRemoveFromInputPathInLog(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BasePrefixToRemoveFromInputPathInLog(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_LogFileName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LogFileName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldPreserveSourceDirectoryStructure(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ShouldPreserveSourceDirectoryStructure(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_FileTypeFilter(): PrivateScope, Assembly, HideBySig, SpecialName
    set_FileTypeFilter(String): PrivateScope, Assembly, HideBySig, SpecialName
    Execute(): PrivateScope, Assembly, HideBySig
Class <PrivateImplementationDetails>{13CFF276-2537-427E-A104-E28181A04941}: NotPublic
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x600004f-1 : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000050-1 : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000124-1 : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000153-1 : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000157-1 : Assembly, Static
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000796-1 : Assembly, Static
    Int64 $$method0x6000dad-1 : Assembly, Static, HasFieldRVA
Class System.Diagnostics.Contracts.__ContractsRuntime: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Int32 insideContractEvaluation : Assembly, Static
  Methods:
    ReportFailure(ContractFailureKind, String, String, Exception): PrivateScope, Assembly, Static
    TriggerFailure(ContractFailureKind, String, String, String, Exception): PrivateScope, Assembly, Static
    Requires(Boolean, String, String): PrivateScope, Assembly, Static
    Ensures(Boolean, String, String): PrivateScope, Assembly, Static
Struct System.Diagnostics.Contracts.RuntimeContractsFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Contracts.RuntimeContractsFlags None = 0 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags LegacyRequires = 1 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags RequiresWithException = 2 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags Requires = 4 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags Ensures = 8 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags Invariants = 16 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags Asserts = 32 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags Assumes = 64 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags ThrowOnFailure = 4096 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags StandardMode = 8192 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags InheritContracts = 16384 : Assembly, Static, Literal, HasDefault
    System.Diagnostics.Contracts.RuntimeContractsFlags NoChecking = 32768 : Assembly, Static, Literal, HasDefault
Class System.Diagnostics.Contracts.RuntimeContractsAttribute: AutoLayout, AnsiClass, Class, Sealed
  :System.Attribute
    Void .ctor(System.Diagnostics.Contracts.RuntimeContractsFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class WebGrease.Activities.EverythingActivity+LogErrorDelegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Exception, String(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Exception, String, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class WebGrease.Css.CssParser+main_return: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :Antlr.Runtime.ParserRuleReturnScope`1[Antlr.Runtime.CommonToken]
    Void .ctor(WebGrease.Css.CssParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Antlr.Runtime.IAstRuleReturnScope`1[System.Object]
    Antlr.Runtime.IAstRuleReturnScope
  Properties:
    System.Object Tree 'get set' : 
  Methods:
    get_Tree(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Tree(Object): PrivateScope, Public, HideBySig, SpecialName
