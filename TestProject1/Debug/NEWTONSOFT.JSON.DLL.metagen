  Newtonsoft.Json.Dynamic.snk - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly Newtonsoft.Json, Version=4.5.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Struct Newtonsoft.Json.Bson.BsonBinaryType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Bson.BsonBinaryType Binary = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType Function = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType Data = 2 : Public, Static, Literal, HasDefault (Obsolete)
    Newtonsoft.Json.Bson.BsonBinaryType Uuid = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType Md5 = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType UserDefined = 128 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Bson.BsonBinaryWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.BinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    WriteToken(BsonToken): PrivateScope, Public, HideBySig
    WriteUtf8Bytes(String, Int32): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.JsonReader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Fields:
    State _currentState : Assembly
    Newtonsoft.Json.ReadType _readType : Assembly
    Newtonsoft.Json.DateParseHandling _dateParseHandling : Assembly
  Properties:
    Boolean CloseInput 'get set' : 
    Char QuoteChar 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Newtonsoft.Json.JsonToken TokenType 'get ' : 
    System.Object Value 'get ' : 
    System.Type ValueType 'get ' : 
    Int32 Depth 'get ' : 
    System.String Path 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_CloseInput(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseInput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(Int32): PrivateScope, Assembly, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadInternal(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReadAsDateTimeOffsetInternal(): PrivateScope, Assembly, HideBySig
    ReadAsBytesInternal(): PrivateScope, Assembly, HideBySig
    ReadAsDecimalInternal(): PrivateScope, Assembly, HideBySig
    ReadAsInt32Internal(): PrivateScope, Assembly, HideBySig
    ReadAsStringInternal(): PrivateScope, Assembly, HideBySig
    ReadAsDateTimeInternal(): PrivateScope, Assembly, HideBySig
    Skip(): PrivateScope, Public, HideBySig
    IsPrimitiveToken(JsonToken): PrivateScope, Assembly, Static, HideBySig
    IsStartToken(JsonToken): PrivateScope, Assembly, Static, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.JsonReader+State: AutoLayout, AnsiClass, Class, VisibilityMask, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    State Start = 0 : Public, Static, Literal, HasDefault
    State Complete = 1 : Public, Static, Literal, HasDefault
    State Property = 2 : Public, Static, Literal, HasDefault
    State ObjectStart = 3 : Public, Static, Literal, HasDefault
    State Object = 4 : Public, Static, Literal, HasDefault
    State ArrayStart = 5 : Public, Static, Literal, HasDefault
    State Array = 6 : Public, Static, Literal, HasDefault
    State Closed = 7 : Public, Static, Literal, HasDefault
    State PostValue = 8 : Public, Static, Literal, HasDefault
    State ConstructorStart = 9 : Public, Static, Literal, HasDefault
    State Constructor = 10 : Public, Static, Literal, HasDefault
    State Error = 11 : Public, Static, Literal, HasDefault
    State Finished = 12 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Bson.BsonReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, Boolean, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean JsonNet35BinaryCompatibility 'get set' : 
    Boolean ReadRootValueAsArray 'get set' : 
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_JsonNet35BinaryCompatibility(): PrivateScope, Public, HideBySig, SpecialName
    set_JsonNet35BinaryCompatibility(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadRootValueAsArray(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadRootValueAsArray(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    ReadInternal(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Bson.BsonToken: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
    Newtonsoft.Json.Bson.BsonToken Parent 'get set' : 
    Int32 CalculatedSize 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(BsonToken): PrivateScope, Public, HideBySig, SpecialName
    get_CalculatedSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CalculatedSize(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Bson.BsonProperty]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    Add(String, BsonToken): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Bson.BsonArray: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Bson.BsonToken]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    Add(BsonToken): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Bson.BsonValue: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(System.Object, Newtonsoft.Json.Bson.BsonType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonString: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonValue
    Void .ctor(System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ByteCount 'get set' : 
    Boolean IncludeLength 'get set' : 
  Methods:
    get_ByteCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ByteCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeLength(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeLength(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonRegex: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Bson.BsonString Pattern 'get set' : 
    Newtonsoft.Json.Bson.BsonString Options 'get set' : 
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    set_Options(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonProperty: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Bson.BsonString Name 'get set' : 
    Newtonsoft.Json.Bson.BsonToken Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(BsonToken): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.Bson.BsonType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    SByte value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Bson.BsonType Number = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType String = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Object = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Array = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Binary = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Undefined = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Oid = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Boolean = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Date = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Null = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Regex = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Reference = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Code = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Symbol = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType CodeWScope = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Integer = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType TimeStamp = 17 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Long = 18 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType MinKey = -1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType MaxKey = 127 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonWriter: AutoLayout, AnsiClass, Class, Public, Abstract
  Interfaces:
    System.IDisposable
  Fields:
    State[][] StateArrayTempate : Assembly, Static, InitOnly
  Properties:
    Boolean CloseOutput 'get set' : 
    System.String ContainerPath 'get ' : 
    Newtonsoft.Json.WriteState WriteState 'get ' : 
    System.String Path 'get ' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
  Methods:
    BuildStateArray(): PrivateScope, Assembly, Static, HideBySig
    get_CloseOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseOutput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ContainerPath(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WriteState(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndConstructor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteToken(JsonReader): PrivateScope, Public, HideBySig
    WriteToken(JsonReader, Int32): PrivateScope, Assembly, HideBySig
    AutoComplete(JsonToken): PrivateScope, Assembly, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteRawValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.JsonWriter+State: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    State Start = 0 : Public, Static, Literal, HasDefault
    State Property = 1 : Public, Static, Literal, HasDefault
    State ObjectStart = 2 : Public, Static, Literal, HasDefault
    State Object = 3 : Public, Static, Literal, HasDefault
    State ArrayStart = 4 : Public, Static, Literal, HasDefault
    State Array = 5 : Public, Static, Literal, HasDefault
    State ConstructorStart = 6 : Public, Static, Literal, HasDefault
    State Constructor = 7 : Public, Static, Literal, HasDefault
    State Bytes = 8 : Public, Static, Literal, HasDefault
    State Closed = 9 : Public, Static, Literal, HasDefault
    State Error = 10 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Bson.BsonWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteRawValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    AddToken(BsonToken): PrivateScope, Assembly, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteObjectId(Byte[]): PrivateScope, Public, HideBySig
    WriteRegex(String, String): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Bson.BsonObjectId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Interface Newtonsoft.Json.Converters.IBinary: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.JsonConverter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSchema(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.BinaryConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.DataSetConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.DataTableConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.CustomCreationConverter`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Newtonsoft.Json.JsonConverter
  Properties:
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    Create(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.DateTimeConverterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
  Methods:
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Interface Newtonsoft.Json.Converters.IEntityKeyMember: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.String Key 'get set' : 
    System.Object Value 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Key(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Converters.EntityKeyMemberConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.ExpandoObjectConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.KeyValuePairConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.BsonObjectIdConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.RegexConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.StringEnumConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CamelCaseText 'get set' : 
  Methods:
    get_CamelCaseText(): PrivateScope, Public, HideBySig, SpecialName
    set_CamelCaseText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Struct Newtonsoft.Json.ConstructorHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ConstructorHandling Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor = 1 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Converters.VersionConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.JsonContainerAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Fields:
    System.Nullable`1[System.Boolean] _isReference : Assembly
    System.Nullable`1[System.Boolean] _itemIsReference : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _itemReferenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _itemTypeNameHandling : Assembly
  Properties:
    System.String Id 'get set' : 
    System.String Title 'get set' : 
    System.String Description 'get set' : 
    System.Type ItemConverterType 'get set' : 
    Boolean IsReference 'get set' : 
    Boolean ItemIsReference 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ItemReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling ItemTypeNameHandling 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_ItemConverterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonDictionaryAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FormatExceptionMessage(IJsonLineInfo, String, String): PrivateScope, Assembly, Static, HideBySig
Struct Newtonsoft.Json.DateFormatHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateFormatHandling IsoDateFormat = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.DateParseHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateParseHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DateTime = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DateTimeOffset = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.DateTimeZoneHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateTimeZoneHandling Local = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling Utc = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling Unspecified = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling RoundtripKind = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Formatting: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Formatting None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Formatting Indented = 1 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonConstructorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Newtonsoft.Json.JsonContainerType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.JsonContainerType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Constructor = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.JsonPosition: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Newtonsoft.Json.JsonContainerType Type : Assembly
    System.Nullable`1[System.Int32] Position : Assembly
    System.String PropertyName : Assembly
  Methods:
    WriteTo(StringBuilder): PrivateScope, Assembly, HideBySig
    InsideContainer(): PrivateScope, Assembly, HideBySig
    BuildPath(IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Linq.JPropertyKeyedCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Newtonsoft.Json.Linq.JToken]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JToken Item [System.String] 'get ' : 
    System.Collections.Generic.ICollection`1[System.String] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[Newtonsoft.Json.Linq.JToken] Values 'get ' : 
  Methods:
    Contains(String): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(String, JToken&(Out)): PrivateScope, Public, HideBySig
    get_Keys(): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    Compare(JPropertyKeyedCollection): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Serialization.JsonContract: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IsNullable : Assembly
    Boolean IsConvertable : Assembly
    System.Type NonNullableUnderlyingType : Assembly
    Newtonsoft.Json.ReadType InternalReadType : Assembly
    Newtonsoft.Json.Serialization.JsonContractType ContractType : Assembly
  Properties:
    System.Type UnderlyingType 'get set' : 
    System.Type CreatedType 'get set' : 
    System.Nullable`1[System.Boolean] IsReference 'get set' : 
    Newtonsoft.Json.JsonConverter Converter 'get set' : 
    Newtonsoft.Json.JsonConverter InternalConverter 'get set' : 
    System.Reflection.MethodInfo OnDeserialized 'get set' : 
    System.Reflection.MethodInfo OnDeserializing 'get set' : 
    System.Reflection.MethodInfo OnSerialized 'get set' : 
    System.Reflection.MethodInfo OnSerializing 'get set' : 
    System.Func`1[System.Object] DefaultCreator 'get set' : 
    Boolean DefaultCreatorNonPublic 'get set' : 
    System.Reflection.MethodInfo OnError 'get set' : 
  Methods:
    get_UnderlyingType(): PrivateScope, Public, HideBySig, SpecialName
    get_CreatedType(): PrivateScope, Public, HideBySig, SpecialName
    set_CreatedType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Converter(): PrivateScope, Public, HideBySig, SpecialName
    set_Converter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_InternalConverter(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InternalConverter(JsonConverter): PrivateScope, Assembly, HideBySig, SpecialName
    get_OnDeserialized(): PrivateScope, Public, HideBySig, SpecialName
    set_OnDeserialized(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_OnDeserializing(): PrivateScope, Public, HideBySig, SpecialName
    set_OnDeserializing(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_OnSerialized(): PrivateScope, Public, HideBySig, SpecialName
    set_OnSerialized(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_OnSerializing(): PrivateScope, Public, HideBySig, SpecialName
    set_OnSerializing(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCreator(Func`1): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCreatorNonPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCreatorNonPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OnError(): PrivateScope, Public, HideBySig, SpecialName
    set_OnError(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    InvokeOnSerializing(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnSerialized(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnDeserializing(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnDeserialized(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnError(Object, StreamingContext, ErrorContext): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonContainerContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.JsonContract ItemContract 'get set' : 
    Newtonsoft.Json.Serialization.JsonContract FinalItemContract 'get ' : 
    Newtonsoft.Json.JsonConverter ItemConverter 'get set' : 
    System.Nullable`1[System.Boolean] ItemIsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ItemReferenceLoopHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] ItemTypeNameHandling 'get set' : 
  Methods:
    get_ItemContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ItemContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    get_FinalItemContract(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ItemConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Utilities.DynamicProxy`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDynamicMemberNames(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryBinaryOperation(T, BinaryOperationBinder, Object, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryConvert(T, ConvertBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryCreateInstance(T, CreateInstanceBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteIndex(T, DeleteIndexBinder, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteMember(T, DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetIndex(T, GetIndexBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetMember(T, GetMemberBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvoke(T, InvokeBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvokeMember(T, InvokeMemberBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetIndex(T, SetIndexBinder, Object[], Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetMember(T, SetMemberBinder, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryUnaryOperation(T, UnaryOperationBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Linq.JPath: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.Object] Parts 'get set' : 
  Methods:
    get_Parts(): PrivateScope, Public, HideBySig, SpecialName
    Evaluate(JToken, Boolean): PrivateScope, Assembly, HideBySig
Interface Newtonsoft.Json.Linq.IJEnumerable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T, Newtonsoft.Json.Linq.JToken,  Covariant
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken] Item [System.Object] 'get ' : 
  Methods:
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Newtonsoft.Json.IJsonLineInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
  Methods:
    HasLineInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_LineNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinePosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Linq.JToken: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.IEnumerable
    Newtonsoft.Json.IJsonLineInfo
    System.ICloneable
    System.Dynamic.IDynamicMetaObjectProvider
  Properties:
    Newtonsoft.Json.Linq.JTokenEqualityComparer EqualityComparer 'get ' : 
    Newtonsoft.Json.Linq.JContainer Parent 'get set' : 
    Newtonsoft.Json.Linq.JToken Root 'get ' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JToken Next 'get set' : 
    Newtonsoft.Json.Linq.JToken Previous 'get set' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken First 'get ' : 
    Newtonsoft.Json.Linq.JToken Last 'get ' : 
  Methods:
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte[]): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateReader(): PrivateScope, Public, HideBySig
    FromObjectInternal(Object, JsonSerializer): PrivateScope, Assembly, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    ToObject(): PrivateScope, Public, HideBySig
    ToObject(JsonSerializer): PrivateScope, Public, HideBySig
    ReadFrom(JsonReader): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    SetLineInfo(IJsonLineInfo): PrivateScope, Assembly, HideBySig
    SetLineInfo(Int32, Int32): PrivateScope, Assembly, HideBySig
    SelectToken(String): PrivateScope, Public, HideBySig
    SelectToken(String, Boolean): PrivateScope, Public, HideBySig
    DeepClone(): PrivateScope, Public, HideBySig
    get_EqualityComparer(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(JContainer): PrivateScope, Assembly, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DeepEquals(JToken, JToken): PrivateScope, Public, Static, HideBySig
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(JToken): PrivateScope, Assembly, HideBySig, SpecialName
    get_Previous(): PrivateScope, Public, HideBySig, SpecialName
    set_Previous(JToken): PrivateScope, Assembly, HideBySig, SpecialName
    AddAfterSelf(Object): PrivateScope, Public, HideBySig
    AddBeforeSelf(Object): PrivateScope, Public, HideBySig
    Ancestors(): PrivateScope, Public, HideBySig
    AfterSelf(): PrivateScope, Public, HideBySig
    BeforeSelf(): PrivateScope, Public, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_First(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Last(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Children(): PrivateScope, Public, HideBySig
    Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(): PrivateScope, Public, HideBySig
    Replace(JToken): PrivateScope, Public, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Formatting, JsonConverter[]): PrivateScope, Public, HideBySig
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JToken
    Void .ctor(System.Object, Newtonsoft.Json.Linq.JTokenType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Linq.JValue]
    System.IFormattable
    System.IComparable
    System.IComparable`1[Newtonsoft.Json.Linq.JValue]
  Properties:
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    System.Object Value 'get set' : 
  Methods:
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateComment(String): PrivateScope, Public, Static, HideBySig
    CreateString(String): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Equals(JValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(JValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Linq.JRaw: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JValue
    Void .ctor(Newtonsoft.Json.Linq.JRaw): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(JsonReader): PrivateScope, Public, Static, HideBySig
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct Newtonsoft.Json.Required: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Required Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Required AllowNull = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Required Always = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.JsonDynamicContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.JsonPropertyCollection Properties 'get set' : 
    System.Func`2[System.String,System.String] PropertyNameResolver 'get set' : 
  Methods:
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyNameResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyNameResolver(Func`2): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonFormatterConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.JsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.IFormatterConverter
  Methods:
    Convert(Object, Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Convert(Object, TypeCode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToBoolean(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToByte(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToChar(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDateTime(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDecimal(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDouble(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt16(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt32(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt64(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToSByte(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToSingle(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt16(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt32(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt64(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.JsonISerializableContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] ISerializableCreator 'get set' : 
  Methods:
    get_ISerializableCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_ISerializableCreator(ObjectConstructor`1): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonLinqContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.JsonPrimitiveContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Newtonsoft.Json.Serialization.IValueProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Serialization.DynamicValueProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.MemberInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IValueProvider
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetValue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ErrorEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Object, Newtonsoft.Json.Serialization.ErrorContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object CurrentObject 'get set' : 
    Newtonsoft.Json.Serialization.ErrorContext ErrorContext 'get set' : 
  Methods:
    get_CurrentObject(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorContext(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JPropertyDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.PropertyDescriptor
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ComponentType 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Type PropertyType 'get ' : 
  Methods:
    CanResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig
    ResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
    ShouldSerializeValue(Object): PrivateScope, Public, Virtual, HideBySig
    get_ComponentType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Interface Newtonsoft.Json.Serialization.IReferenceResolver: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ResolveReference(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetReference(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsReferenced(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddReference(Object, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Serialization.DefaultReferenceResolver: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IReferenceResolver
  Methods:
    ResolveReference(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReference(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddReference(Object, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsReferenced(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.PreserveReferencesHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.PreserveReferencesHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling Objects = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling Arrays = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling All = 3 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonArrayAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllowNullItems 'get set' : 
  Methods:
    get_AllowNullItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowNullItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.DefaultValueHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DefaultValueHandling Include = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling Ignore = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling Populate = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate = 3 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonConverterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ConverterType 'get ' : 
  Methods:
    get_ConverterType(): PrivateScope, Public, HideBySig, SpecialName
    CreateJsonConverterInstance(Type): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonObjectAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.MemberSerialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.Required] _itemRequired : Assembly
  Properties:
    Newtonsoft.Json.MemberSerialization MemberSerialization 'get set' : 
    Newtonsoft.Json.Required ItemRequired 'get set' : 
  Methods:
    get_MemberSerialization(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberSerialization(MemberSerialization): PrivateScope, Public, HideBySig, SpecialName
    get_ItemRequired(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemRequired(Required): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonSerializerSettings: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.Formatting] _formatting : Assembly
    System.Nullable`1[Newtonsoft.Json.DateFormatHandling] _dateFormatHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DateTimeZoneHandling] _dateTimeZoneHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DateParseHandling] _dateParseHandling : Assembly
    System.Globalization.CultureInfo _culture : Assembly
    System.Nullable`1[System.Boolean] _checkAdditionalContent : Assembly
    System.Nullable`1[System.Int32] _maxDepth : Assembly
    Boolean _maxDepthSet : Assembly
    System.Runtime.Serialization.StreamingContext DefaultContext : Assembly, Static, InitOnly
    System.Globalization.CultureInfo DefaultCulture : Assembly, Static, InitOnly
    Newtonsoft.Json.ReferenceLoopHandling DefaultReferenceLoopHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.MissingMemberHandling DefaultMissingMemberHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.NullValueHandling DefaultNullValueHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling DefaultDefaultValueHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling DefaultObjectCreationHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling DefaultPreserveReferencesHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.ConstructorHandling DefaultConstructorHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling DefaultTypeNameHandling = 0 : Assembly, Static, Literal, HasDefault
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle DefaultTypeNameAssemblyFormat = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.Formatting DefaultFormatting = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateFormatHandling DefaultDateFormatHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling DefaultDateTimeZoneHandling = 3 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DefaultDateParseHandling = 1 : Assembly, Static, Literal, HasDefault
    Boolean DefaultCheckAdditionalContent = False : Assembly, Static, Literal, HasDefault
  Properties:
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.JsonConverter] Converters 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' : 
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Methods:
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_Converters(): PrivateScope, Public, HideBySig, SpecialName
    set_Converters(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, HideBySig, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, HideBySig, SpecialName
    get_Binder(): PrivateScope, Public, HideBySig, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, HideBySig, SpecialName
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    set_Error(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonValidatingReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(Newtonsoft.Json.JsonReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    System.Object Value 'get ' : 
    Int32 Depth 'get ' : 
    System.String Path 'get ' : 
    Char QuoteChar 'get set' : 
    Newtonsoft.Json.JsonToken TokenType 'get ' : 
    System.Type ValueType 'get ' : 
    Newtonsoft.Json.Schema.JsonSchema Schema 'get set' : 
    Newtonsoft.Json.JsonReader Reader 'get ' : 
  Events:
    Newtonsoft.Json.Schema.ValidationEventHandler ValidationEventHandler: 
  Methods:
    add_ValidationEventHandler(ValidationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ValidationEventHandler(ValidationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_Reader(): PrivateScope, Public, HideBySig, SpecialName
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JTokenEqualityComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[Newtonsoft.Json.Linq.JToken]
  Methods:
    Equals(JToken, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.MemberSerialization: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.MemberSerialization OptOut = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MemberSerialization OptIn = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MemberSerialization Fields = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.ObjectCreationHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ObjectCreationHandling Auto = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling Reuse = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling Replace = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Converters.IsoDateTimeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Converters.DateTimeConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Globalization.DateTimeStyles DateTimeStyles 'get set' : 
    System.String DateTimeFormat 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_DateTimeStyles(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeStyles(DateTimeStyles): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.JavaScriptDateTimeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Converters.DateTimeConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
Interface Newtonsoft.Json.Converters.IXmlNode: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String NamespaceUri 'get ' : 
    System.Object WrappedNode 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WrappedNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Converters.XmlNodeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.XmlNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.Object WrappedNode 'get ' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String Name 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String Prefix 'get ' : 
    System.String NamespaceUri 'get ' : 
  Methods:
    get_WrappedNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChildNodes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ParentNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Prefix(): PrivateScope, Public, HideBySig, SpecialName
    get_NamespaceUri(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Newtonsoft.Json.Converters.IXmlDocument: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    CreateComment(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTextNode(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateCDataSection(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSignificantWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateProcessingInstruction(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateElement(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAttribute(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAttribute(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DocumentElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Converters.XmlDocumentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocument
  Properties:
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    CreateComment(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateTextNode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateCDataSection(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSignificantWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateProcessingInstruction(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DocumentElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Newtonsoft.Json.Converters.IXmlElement: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPrefixOfNamespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Converters.XmlElementWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlElement
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPrefixOfNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Newtonsoft.Json.Converters.IXmlDeclaration: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Encoding(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Standalone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Standalone(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Converters.XmlDeclarationWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlDeclaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDeclaration
  Properties:
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Encoding(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Encoding(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Standalone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Standalone(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XObjectWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.Linq.XObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.Object WrappedNode 'get ' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String NamespaceUri 'get ' : 
  Methods:
    get_WrappedNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XDeclarationWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XDeclaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDeclaration
  Properties:
    System.Xml.Linq.XDeclaration Declaration 'get set' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Declaration(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Encoding(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Encoding(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Standalone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Standalone(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XContainerWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WrapNode(XObject): PrivateScope, Assembly, Static, HideBySig
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.XDocumentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XContainerWrapper
    Void .ctor(System.Xml.Linq.XDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocument
  Properties:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateComment(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateTextNode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateCDataSection(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSignificantWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateProcessingInstruction(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DocumentElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.XTextWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XText): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XCommentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XProcessingInstructionWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XProcessingInstruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LocalName 'get ' : 
    System.String Value 'get set' : 
  Methods:
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XAttributeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    System.String LocalName 'get ' : 
    System.String NamespaceUri 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XElementWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XContainerWrapper
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlElement
  Properties:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    System.String Value 'get set' : 
    System.String LocalName 'get ' : 
    System.String NamespaceUri 'get ' : 
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPrefixOfNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Converters.XmlNodeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DeserializeRootElementName 'get set' : 
    Boolean WriteArrayAttribute 'get set' : 
    Boolean OmitRootObject 'get set' : 
  Methods:
    get_DeserializeRootElementName(): PrivateScope, Public, HideBySig, SpecialName
    set_DeserializeRootElementName(String): PrivateScope, Public, HideBySig, SpecialName
    get_WriteArrayAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteArrayAttribute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OmitRootObject(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitRootObject(Boolean): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Struct Newtonsoft.Json.ReadType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ReadType Read = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsInt32 = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsBytes = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsString = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDecimal = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDateTime = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDateTimeOffset = 6 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonTextReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
  Methods:
    SetCharBuffer(Char[]): PrivateScope, Assembly, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    ReadInternal(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Close(): PrivateScope, Public, Virtual, HideBySig
    HasLineInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_LineNumber(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinePosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.JsonPropertyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] _nullValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DefaultValueHandling] _defaultValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _referenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ObjectCreationHandling] _objectCreationHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _typeNameHandling : Assembly
    System.Nullable`1[System.Boolean] _isReference : Assembly
    System.Nullable`1[System.Int32] _order : Assembly
    System.Nullable`1[Newtonsoft.Json.Required] _required : Assembly
    System.Nullable`1[System.Boolean] _itemIsReference : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _itemReferenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _itemTypeNameHandling : Assembly
  Properties:
    System.Type ItemConverterType 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    Boolean IsReference 'get set' : 
    Int32 Order 'get set' : 
    Newtonsoft.Json.Required Required 'get set' : 
    System.String PropertyName 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ItemReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling ItemTypeNameHandling 'get set' : 
    Boolean ItemIsReference 'get set' : 
  Methods:
    get_ItemConverterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Required): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonIgnoreAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonTextWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Indentation 'get set' : 
    Char QuoteChar 'get set' : 
    Char IndentChar 'get set' : 
    Boolean QuoteName 'get set' : 
  Methods:
    get_Indentation(): PrivateScope, Public, HideBySig, SpecialName
    set_Indentation(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteChar(Char): PrivateScope, Public, HideBySig, SpecialName
    get_IndentChar(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentChar(Char): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteName(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteWhitespace(String): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.JsonWriterException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Path 'get set' : 
  Methods:
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    Create(JsonWriter, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonReaderException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumber 'get set' : 
    Int32 LinePosition 'get set' : 
    System.String Path 'get set' : 
  Methods:
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_LinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    Create(JsonReader, String): PrivateScope, Assembly, Static, HideBySig
    Create(JsonReader, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(IJsonLineInfo, String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonConverterCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Newtonsoft.Json.JsonConverter]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonConvert: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String True : Public, Static, InitOnly
    System.String False : Public, Static, InitOnly
    System.String Null : Public, Static, InitOnly
    System.String Undefined : Public, Static, InitOnly
    System.String PositiveInfinity : Public, Static, InitOnly
    System.String NegativeInfinity : Public, Static, InitOnly
    System.String NaN : Public, Static, InitOnly
    Int64 InitialJavaScriptDateTicks : Assembly, Static, InitOnly
  Methods:
    ToString(DateTime): PrivateScope, Public, Static, HideBySig
    ToString(DateTime, DateFormatHandling, DateTimeZoneHandling): PrivateScope, Public, Static, HideBySig
    EnsureDateTime(DateTime, DateTimeZoneHandling): PrivateScope, Assembly, Static, HideBySig
    ToString(DateTimeOffset): PrivateScope, Public, Static, HideBySig
    ToString(DateTimeOffset, DateFormatHandling): PrivateScope, Public, Static, HideBySig
    WriteDateTimeString(TextWriter, DateTime, DateFormatHandling): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeString(TextWriter, DateTime, TimeSpan, DateTimeKind, DateFormatHandling): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeOffset(TextWriter, TimeSpan, DateFormatHandling): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime, TimeSpan): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime, Boolean): PrivateScope, Assembly, Static, HideBySig
    ConvertJavaScriptTicksToDateTime(Int64): PrivateScope, Assembly, Static, HideBySig
    ToString(Boolean): PrivateScope, Public, Static, HideBySig
    ToString(Char): PrivateScope, Public, Static, HideBySig
    ToString(Enum): PrivateScope, Public, Static, HideBySig
    ToString(Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int16): PrivateScope, Public, Static, HideBySig
    ToString(UInt16): PrivateScope, Public, Static, HideBySig
    ToString(UInt32): PrivateScope, Public, Static, HideBySig
    ToString(Int64): PrivateScope, Public, Static, HideBySig
    ToString(UInt64): PrivateScope, Public, Static, HideBySig
    ToString(Single): PrivateScope, Public, Static, HideBySig
    ToString(Double): PrivateScope, Public, Static, HideBySig
    ToString(Byte): PrivateScope, Public, Static, HideBySig
    ToString(SByte): PrivateScope, Public, Static, HideBySig
    ToString(Decimal): PrivateScope, Public, Static, HideBySig
    ToString(Guid): PrivateScope, Public, Static, HideBySig
    ToString(TimeSpan): PrivateScope, Public, Static, HideBySig
    ToString(Uri): PrivateScope, Public, Static, HideBySig
    ToString(String): PrivateScope, Public, Static, HideBySig
    ToString(String, Char): PrivateScope, Public, Static, HideBySig
    ToString(Object): PrivateScope, Public, Static, HideBySig
    IsJsonPrimitiveType(Type): PrivateScope, Assembly, Static, HideBySig
    SerializeObject(Object): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeObjectAsync(Object): PrivateScope, Public, Static, HideBySig
    SerializeObjectAsync(Object, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeObjectAsync(Object, Formatting, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String): PrivateScope, Public, Static, HideBySig
    DeserializeAnonymousType(String, T): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObjectAsync(String): PrivateScope, Public, Static, HideBySig
    DeserializeObjectAsync(String, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObjectAsync(String): PrivateScope, Public, Static, HideBySig
    DeserializeObjectAsync(String, Type, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    PopulateObject(String, Object): PrivateScope, Public, Static, HideBySig
    PopulateObject(String, Object, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    PopulateObjectAsync(String, Object, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode, Formatting, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String, String): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject, Formatting, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String, String): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String, String, Boolean): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.JsonSerializationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(JsonReader, String): PrivateScope, Assembly, Static, HideBySig
    Create(JsonReader, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(IJsonLineInfo, String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonSerializer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    Newtonsoft.Json.JsonConverterCollection Converters 'get ' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Events:
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error: 
  Methods:
    add_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Binder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NullValueHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Converters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContractResolver(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Context(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Formatting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateParseHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxDepth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsCheckAdditionalContentSet(): PrivateScope, Assembly, HideBySig
    Create(JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    Populate(TextReader, Object): PrivateScope, Public, HideBySig
    Populate(JsonReader, Object): PrivateScope, Public, HideBySig
    PopulateInternal(JsonReader, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Deserialize(JsonReader): PrivateScope, Public, HideBySig
    Deserialize(TextReader, Type): PrivateScope, Public, HideBySig
    Deserialize(JsonReader): PrivateScope, Public, HideBySig
    Deserialize(JsonReader, Type): PrivateScope, Public, HideBySig
    DeserializeInternal(JsonReader, Type): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Serialize(TextWriter, Object): PrivateScope, Public, HideBySig
    Serialize(JsonWriter, Object): PrivateScope, Public, HideBySig
    SerializeInternal(JsonWriter, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetMatchingConverter(Type): PrivateScope, Assembly, HideBySig
    GetMatchingConverter(IList`1, Type): PrivateScope, Assembly, Static, HideBySig
    OnError(ErrorEventArgs): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Linq.Extensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Ancestors(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Descendants(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Properties(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Value(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Value(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Assembly, Static, HideBySig
    Children(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Children(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Convert(IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
    Convert(T): PrivateScope, Assembly, Static, HideBySig
    AsJEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AsJEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Linq.JContainer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Newtonsoft.Json.Linq.JToken
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JContainer): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.ICollection`1[Newtonsoft.Json.Linq.JToken]
    System.ComponentModel.ITypedList
    System.ComponentModel.IBindingList
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.Specialized.INotifyCollectionChanged
  Properties:
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JToken First 'get ' : 
    Newtonsoft.Json.Linq.JToken Last 'get ' : 
    Int32 Count 'get ' : 
  Events:
    System.ComponentModel.ListChangedEventHandler ListChanged: 
    System.ComponentModel.AddingNewEventHandler AddingNew: 
    System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged: 
  Methods:
    add_ListChanged(ListChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ListChanged(ListChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_AddingNew(AddingNewEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AddingNew(AddingNewEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_CollectionChanged(NotifyCollectionChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_CollectionChanged(NotifyCollectionChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CheckReentrancy(): PrivateScope, Assembly, HideBySig
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ContentsEqual(JContainer): PrivateScope, Assembly, HideBySig
    get_First(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Last(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Children(): PrivateScope, Public, Virtual, HideBySig
    Values(): PrivateScope, Public, Virtual, HideBySig
    Descendants(): PrivateScope, Public, HideBySig
    IsMultiContent(Object): PrivateScope, Assembly, HideBySig
    EnsureParentToken(JToken, Boolean): PrivateScope, Assembly, HideBySig
    IndexOfItem(JToken): PrivateScope, Assembly, HideBySig
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    RemoveItemAt(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    RemoveItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetItem(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    SetItem(Int32, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ClearItems(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReplaceItem(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ContainsItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CopyItemsTo(Array, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsTokenUnchanged(JToken, JToken): PrivateScope, Assembly, Static, HideBySig
    ValidateToken(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAndSkipParentCheck(JToken): PrivateScope, Assembly, HideBySig
    AddFirst(Object): PrivateScope, Public, HideBySig
    AddInternal(Int32, Object, Boolean): PrivateScope, Assembly, HideBySig
    CreateFromContent(Object): PrivateScope, Assembly, HideBySig
    CreateWriter(): PrivateScope, Public, HideBySig
    ReplaceAll(Object): PrivateScope, Public, HideBySig
    RemoveAll(): PrivateScope, Public, HideBySig
    ReadTokenFrom(JsonReader): PrivateScope, Assembly, HideBySig
    ReadContentFrom(JsonReader): PrivateScope, Assembly, HideBySig
    ContentsHashCode(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Linq.JConstructor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JConstructor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Linq.JEnumerable`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, Newtonsoft.Json.Linq.JToken
  :System.ValueType
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Linq.IJEnumerable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Fields:
    Newtonsoft.Json.Linq.JEnumerable`1[T] Empty : Public, Static, InitOnly
  Properties:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken] Item [System.Object] 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.String,Newtonsoft.Json.Linq.JToken]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,Newtonsoft.Json.Linq.JToken]]
    System.ComponentModel.INotifyPropertyChanged
    System.ComponentModel.ICustomTypeDescriptor
    System.ComponentModel.INotifyPropertyChanging
  Properties:
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken Item [System.String] 'get set' : 
  Events:
    System.ComponentModel.PropertyChangedEventHandler PropertyChanged: 
    System.ComponentModel.PropertyChangingEventHandler PropertyChanging: 
  Methods:
    add_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_PropertyChanging(PropertyChangingEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PropertyChanging(PropertyChangingEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ValidateToken(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InternalPropertyChanged(JProperty): PrivateScope, Assembly, HideBySig
    InternalPropertyChanging(JProperty): PrivateScope, Assembly, HideBySig
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Properties(): PrivateScope, Public, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    PropertyValues(): PrivateScope, Public, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    Add(String, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(String, JToken&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Linq.JArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken Item [Int32] 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOf(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Linq.JTokenReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(Newtonsoft.Json.Linq.JToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Methods:
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    ReadInternal(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Read(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JTokenWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(Newtonsoft.Json.Linq.JContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JToken Token 'get ' : 
  Methods:
    get_Token(): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    AddValue(JValue, JsonToken): PrivateScope, Assembly, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(Newtonsoft.Json.Linq.JProperty): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Newtonsoft.Json.Linq.JToken Value 'get set' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(JToken): PrivateScope, Public, HideBySig, SpecialName
    GetItem(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetItem(Int32, JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveItemAt(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ContainsItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ClearItems(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Linq.JTokenType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.JTokenType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Constructor = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Property = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Comment = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Integer = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Float = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType String = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Boolean = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Null = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Undefined = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Date = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Raw = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Bytes = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Guid = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Uri = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType TimeSpan = 17 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.Extensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsValid(JToken, JsonSchema): PrivateScope, Public, Static, HideBySig
    IsValid(JToken, JsonSchema, IList`1&(Out)): PrivateScope, Public, Static, HideBySig
    Validate(JToken, JsonSchema): PrivateScope, Public, Static, HideBySig
    Validate(JToken, JsonSchema, ValidationEventHandler): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumber 'get set' : 
    Int32 LinePosition 'get set' : 
    System.String Path 'get set' : 
  Methods:
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_LinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Schema.JsonSchemaModel: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Required 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaType Type 'get set' : 
    System.Nullable`1[System.Int32] MinimumLength 'get set' : 
    System.Nullable`1[System.Int32] MaximumLength 'get set' : 
    System.Nullable`1[System.Double] DivisibleBy 'get set' : 
    System.Nullable`1[System.Double] Minimum 'get set' : 
    System.Nullable`1[System.Double] Maximum 'get set' : 
    Boolean ExclusiveMinimum 'get set' : 
    Boolean ExclusiveMaximum 'get set' : 
    System.Nullable`1[System.Int32] MinimumItems 'get set' : 
    System.Nullable`1[System.Int32] MaximumItems 'get set' : 
    System.Collections.Generic.IList`1[System.String] Patterns 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchemaModel] Items 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaModel] Properties 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaModel] PatternProperties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaModel AdditionalProperties 'get set' : 
    Boolean AllowAdditionalProperties 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken] Enum 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaType Disallow 'get set' : 
  Methods:
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(JsonSchemaType): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DivisibleBy(): PrivateScope, Public, HideBySig, SpecialName
    set_DivisibleBy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMinimum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMinimum(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMaximum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMaximum(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Patterns(): PrivateScope, Public, HideBySig, SpecialName
    set_Patterns(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    set_Properties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternProperties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchemaModel): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Enum(): PrivateScope, Public, HideBySig, SpecialName
    set_Enum(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Disallow(): PrivateScope, Public, HideBySig, SpecialName
    set_Disallow(JsonSchemaType): PrivateScope, Public, HideBySig, SpecialName
    Create(IList`1): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaModelBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(JsonSchema): PrivateScope, Public, HideBySig
    AddSchema(JsonSchemaNode, JsonSchema): PrivateScope, Public, HideBySig
    AddProperties(IDictionary`2, IDictionary`2): PrivateScope, Public, HideBySig
    AddProperty(IDictionary`2, String, JsonSchema): PrivateScope, Public, HideBySig
    AddItem(JsonSchemaNode, Int32, JsonSchema): PrivateScope, Public, HideBySig
    AddAdditionalProperties(JsonSchemaNode, JsonSchema): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaNodeCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Schema.JsonSchemaNode: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.Schema.JsonSchema): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Id 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Newtonsoft.Json.Schema.JsonSchema] Schemas 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode] Properties 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode] PatternProperties 'get set' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Schema.JsonSchemaNode] Items 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaNode AdditionalProperties 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Schemas(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchemaNode): PrivateScope, Public, HideBySig, SpecialName
    Combine(JsonSchema): PrivateScope, Public, HideBySig
    GetId(IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchema] LoadedSchemas 'get set' : 
  Methods:
    get_LoadedSchemas(): PrivateScope, Public, HideBySig, SpecialName
    GetSchema(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Schema.JsonSchemaWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteSchema(JsonSchema): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.Schema.UndefinedSchemaIdHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UseTypeName = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UseAssemblyQualifiedName = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.ValidationEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Newtonsoft.Json.Schema.JsonSchemaException): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Schema.JsonSchemaException Exception 'get ' : 
    System.String Path 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Schema.ValidationEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ValidationEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ValidationEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Newtonsoft.Json.Serialization.IContractResolver: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ResolveContract(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Serialization.DefaultContractResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IContractResolver
  Properties:
    Newtonsoft.Json.Serialization.IContractResolver Instance 'get ' : 
    Boolean DynamicCodeGeneration 'get ' : 
    System.Reflection.BindingFlags DefaultMembersSearchFlags 'get set' : 
    Boolean SerializeCompilerGeneratedMembers 'get set' : 
    Boolean IgnoreSerializableInterface 'get set' : 
    Boolean IgnoreSerializableAttribute 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DynamicCodeGeneration(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultMembersSearchFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultMembersSearchFlags(BindingFlags): PrivateScope, Public, HideBySig, SpecialName
    get_SerializeCompilerGeneratedMembers(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializeCompilerGeneratedMembers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreSerializableInterface(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreSerializableInterface(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreSerializableAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreSerializableAttribute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ResolveContract(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanConvertToString(Type): PrivateScope, Assembly, Static, HideBySig
    GetClrTypeFullName(Type): PrivateScope, Assembly, Static, HideBySig
    GetResolvedPropertyName(String): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.DefaultContractResolver
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Newtonsoft.Json.Serialization.ResolverContractKey: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Type, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Serialization.ResolverContractKey]
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ResolverContractKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.DefaultSerializationBinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Runtime.Serialization.SerializationBinder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance : Assembly, Static, InitOnly
  Methods:
    BindToType(String, String): PrivateScope, Public, Virtual, HideBySig
    BindToName(Type, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct Newtonsoft.Json.Serialization.DefaultSerializationBinder+TypeNameKey: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Serialization.DefaultSerializationBinder+TypeNameKey]
  Fields:
    System.String AssemblyName : Assembly, InitOnly
    System.String TypeName : Assembly, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(TypeNameKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ErrorContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object, System.Object, System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception Error 'get set' : 
    System.Object OriginalObject 'get set' : 
    System.Object Member 'get set' : 
    System.String Path 'get set' : 
    Boolean Handled 'get set' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalObject(): PrivateScope, Public, HideBySig, SpecialName
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Handled(): PrivateScope, Public, HideBySig, SpecialName
    set_Handled(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonArrayContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type CollectionItemType 'get set' : 
  Methods:
    get_CollectionItemType(): PrivateScope, Public, HideBySig, SpecialName
    CreateWrapper(Object): PrivateScope, Assembly, HideBySig
Struct Newtonsoft.Json.Serialization.JsonContractType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Serialization.JsonContractType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Primitive = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType String = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Dictionary = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Dynamic = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Serializable = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Linq = 8 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.JsonDictionaryContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Func`2[System.String,System.String] PropertyNameResolver 'get set' : 
    System.Type DictionaryKeyType 'get set' : 
    System.Type DictionaryValueType 'get set' : 
    Newtonsoft.Json.Serialization.JsonContract KeyContract 'get set' : 
  Methods:
    get_PropertyNameResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyNameResolver(Func`2): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryKeyType(): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryValueType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    CreateWrapper(Object): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.Required] _required : Assembly
  Properties:
    Newtonsoft.Json.Serialization.JsonContract PropertyContract 'get set' : 
    System.String PropertyName 'get set' : 
    System.Type DeclaringType 'get set' : 
    System.Nullable`1[System.Int32] Order 'get set' : 
    System.String UnderlyingName 'get set' : 
    Newtonsoft.Json.Serialization.IValueProvider ValueProvider 'get set' : 
    System.Type PropertyType 'get set' : 
    Newtonsoft.Json.JsonConverter Converter 'get set' : 
    Newtonsoft.Json.JsonConverter MemberConverter 'get set' : 
    Boolean Ignored 'get set' : 
    Boolean Readable 'get set' : 
    Boolean Writable 'get set' : 
    System.Object DefaultValue 'get set' : 
    Newtonsoft.Json.Required Required 'get set' : 
    System.Nullable`1[System.Boolean] IsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] NullValueHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.DefaultValueHandling] DefaultValueHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ReferenceLoopHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ObjectCreationHandling] ObjectCreationHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] TypeNameHandling 'get set' : 
    System.Predicate`1[System.Object] ShouldSerialize 'get set' : 
    System.Predicate`1[System.Object] GetIsSpecified 'get set' : 
    System.Action`2[System.Object,System.Object] SetIsSpecified 'get set' : 
    Newtonsoft.Json.JsonConverter ItemConverter 'get set' : 
    System.Nullable`1[System.Boolean] ItemIsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] ItemTypeNameHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ItemReferenceLoopHandling 'get set' : 
  Methods:
    get_PropertyContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PropertyContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    get_PropertyName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, HideBySig, SpecialName
    set_DeclaringType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlyingName(): PrivateScope, Public, HideBySig, SpecialName
    set_UnderlyingName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ValueProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueProvider(IValueProvider): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Converter(): PrivateScope, Public, HideBySig, SpecialName
    set_Converter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_MemberConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_Ignored(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignored(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Readable(): PrivateScope, Public, HideBySig, SpecialName
    set_Readable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Writable(): PrivateScope, Public, HideBySig, SpecialName
    set_Writable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValue(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Required): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldSerialize(): PrivateScope, Public, HideBySig, SpecialName
    set_ShouldSerialize(Predicate`1): PrivateScope, Public, HideBySig, SpecialName
    get_GetIsSpecified(): PrivateScope, Public, HideBySig, SpecialName
    set_GetIsSpecified(Predicate`1): PrivateScope, Public, HideBySig, SpecialName
    get_SetIsSpecified(): PrivateScope, Public, HideBySig, SpecialName
    set_SetIsSpecified(Action`2): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_ItemConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonPropertyCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Newtonsoft.Json.Serialization.JsonProperty]
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddProperty(JsonProperty): PrivateScope, Public, HideBySig
    GetClosestMatchProperty(String): PrivateScope, Public, HideBySig
    GetProperty(String, StringComparison): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.MissingMemberHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.MissingMemberHandling Ignore = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MissingMemberHandling Error = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.NullValueHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.NullValueHandling Include = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.NullValueHandling Ignore = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.ReferenceLoopHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ReferenceLoopHandling Error = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReferenceLoopHandling Ignore = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReferenceLoopHandling Serialize = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.JsonSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Id 'get set' : 
    System.String Title 'get set' : 
    System.Nullable`1[System.Boolean] Required 'get set' : 
    System.Nullable`1[System.Boolean] ReadOnly 'get set' : 
    System.Nullable`1[System.Boolean] Hidden 'get set' : 
    System.Nullable`1[System.Boolean] Transient 'get set' : 
    System.String Description 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Schema.JsonSchemaType] Type 'get set' : 
    System.String Pattern 'get set' : 
    System.Nullable`1[System.Int32] MinimumLength 'get set' : 
    System.Nullable`1[System.Int32] MaximumLength 'get set' : 
    System.Nullable`1[System.Double] DivisibleBy 'get set' : 
    System.Nullable`1[System.Double] Minimum 'get set' : 
    System.Nullable`1[System.Double] Maximum 'get set' : 
    System.Nullable`1[System.Boolean] ExclusiveMinimum 'get set' : 
    System.Nullable`1[System.Boolean] ExclusiveMaximum 'get set' : 
    System.Nullable`1[System.Int32] MinimumItems 'get set' : 
    System.Nullable`1[System.Int32] MaximumItems 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchema] Items 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchema] Properties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchema AdditionalProperties 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchema] PatternProperties 'get set' : 
    Boolean AllowAdditionalProperties 'get set' : 
    System.String Requires 'get set' : 
    System.Collections.Generic.IList`1[System.String] Identity 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken] Enum 'get set' : 
    System.Collections.Generic.IDictionary`2[Newtonsoft.Json.Linq.JToken,System.String] Options 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Schema.JsonSchemaType] Disallow 'get set' : 
    Newtonsoft.Json.Linq.JToken Default 'get set' : 
    Newtonsoft.Json.Schema.JsonSchema Extends 'get set' : 
    System.String Format 'get set' : 
    System.String InternalId 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Hidden(): PrivateScope, Public, HideBySig, SpecialName
    set_Hidden(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Transient(): PrivateScope, Public, HideBySig, SpecialName
    set_Transient(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DivisibleBy(): PrivateScope, Public, HideBySig, SpecialName
    set_DivisibleBy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMinimum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMinimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMaximum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMaximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    set_Properties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternProperties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Requires(): PrivateScope, Public, HideBySig, SpecialName
    set_Requires(String): PrivateScope, Public, HideBySig, SpecialName
    get_Identity(): PrivateScope, Public, HideBySig, SpecialName
    set_Identity(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Enum(): PrivateScope, Public, HideBySig, SpecialName
    set_Enum(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    set_Options(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_Disallow(): PrivateScope, Public, HideBySig, SpecialName
    set_Disallow(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(JToken): PrivateScope, Public, HideBySig, SpecialName
    get_Extends(): PrivateScope, Public, HideBySig, SpecialName
    set_Extends(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_InternalId(): PrivateScope, Assembly, HideBySig, SpecialName
    Read(JsonReader): PrivateScope, Public, Static, HideBySig
    Read(JsonReader, JsonSchemaResolver): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, JsonSchemaResolver): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter): PrivateScope, Public, HideBySig
    WriteTo(JsonWriter, JsonSchemaResolver): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.Schema.JsonSchemaResolver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Parse(JsonReader): PrivateScope, Assembly, HideBySig
    MapType(String): PrivateScope, Assembly, Static, HideBySig
    MapType(JsonSchemaType): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaType] JsonSchemaTypeMapping : Public, Static, InitOnly
    System.String TypePropertyName = type : Public, Static, Literal, HasDefault
    System.String PropertiesPropertyName = properties : Public, Static, Literal, HasDefault
    System.String ItemsPropertyName = items : Public, Static, Literal, HasDefault
    System.String RequiredPropertyName = required : Public, Static, Literal, HasDefault
    System.String PatternPropertiesPropertyName = patternProperties : Public, Static, Literal, HasDefault
    System.String AdditionalPropertiesPropertyName = additionalProperties : Public, Static, Literal, HasDefault
    System.String RequiresPropertyName = requires : Public, Static, Literal, HasDefault
    System.String IdentityPropertyName = identity : Public, Static, Literal, HasDefault
    System.String MinimumPropertyName = minimum : Public, Static, Literal, HasDefault
    System.String MaximumPropertyName = maximum : Public, Static, Literal, HasDefault
    System.String ExclusiveMinimumPropertyName = exclusiveMinimum : Public, Static, Literal, HasDefault
    System.String ExclusiveMaximumPropertyName = exclusiveMaximum : Public, Static, Literal, HasDefault
    System.String MinimumItemsPropertyName = minItems : Public, Static, Literal, HasDefault
    System.String MaximumItemsPropertyName = maxItems : Public, Static, Literal, HasDefault
    System.String PatternPropertyName = pattern : Public, Static, Literal, HasDefault
    System.String MaximumLengthPropertyName = maxLength : Public, Static, Literal, HasDefault
    System.String MinimumLengthPropertyName = minLength : Public, Static, Literal, HasDefault
    System.String EnumPropertyName = enum : Public, Static, Literal, HasDefault
    System.String OptionsPropertyName = options : Public, Static, Literal, HasDefault
    System.String ReadOnlyPropertyName = readonly : Public, Static, Literal, HasDefault
    System.String TitlePropertyName = title : Public, Static, Literal, HasDefault
    System.String DescriptionPropertyName = description : Public, Static, Literal, HasDefault
    System.String FormatPropertyName = format : Public, Static, Literal, HasDefault
    System.String DefaultPropertyName = default : Public, Static, Literal, HasDefault
    System.String TransientPropertyName = transient : Public, Static, Literal, HasDefault
    System.String DivisibleByPropertyName = divisibleBy : Public, Static, Literal, HasDefault
    System.String HiddenPropertyName = hidden : Public, Static, Literal, HasDefault
    System.String DisallowPropertyName = disallow : Public, Static, Literal, HasDefault
    System.String ExtendsPropertyName = extends : Public, Static, Literal, HasDefault
    System.String IdPropertyName = id : Public, Static, Literal, HasDefault
    System.String OptionValuePropertyName = value : Public, Static, Literal, HasDefault
    System.String OptionLabelPropertyName = label : Public, Static, Literal, HasDefault
    System.String ReferencePropertyName = $ref : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.JsonSchemaGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UndefinedSchemaIdHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
  Methods:
    get_UndefinedSchemaIdHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_UndefinedSchemaIdHandling(UndefinedSchemaIdHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, HideBySig, SpecialName
    Generate(Type): PrivateScope, Public, HideBySig
    Generate(Type, JsonSchemaResolver): PrivateScope, Public, HideBySig
    Generate(Type, Boolean): PrivateScope, Public, HideBySig
    Generate(Type, JsonSchemaResolver, Boolean): PrivateScope, Public, HideBySig
    HasFlag(Nullable`1, JsonSchemaType): PrivateScope, Assembly, Static, HideBySig
Struct Newtonsoft.Json.Schema.JsonSchemaType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Schema.JsonSchemaType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType String = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Float = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Integer = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Boolean = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Object = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Array = 32 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Null = 64 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Any = 127 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.JsonObjectContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.MemberSerialization MemberSerialization 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Required] ItemRequired 'get set' : 
    Newtonsoft.Json.Serialization.JsonPropertyCollection Properties 'get set' : 
    Newtonsoft.Json.Serialization.JsonPropertyCollection ConstructorParameters 'get set' : 
    System.Reflection.ConstructorInfo OverrideConstructor 'get set' : 
    System.Reflection.ConstructorInfo ParametrizedConstructor 'get set' : 
    Boolean HasRequiredOrDefaultValueProperties 'get ' : 
  Methods:
    get_MemberSerialization(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberSerialization(MemberSerialization): PrivateScope, Public, HideBySig, SpecialName
    get_ItemRequired(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemRequired(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_ConstructorParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_OverrideConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideConstructor(ConstructorInfo): PrivateScope, Public, HideBySig, SpecialName
    get_ParametrizedConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_ParametrizedConstructor(ConstructorInfo): PrivateScope, Public, HideBySig, SpecialName
    get_HasRequiredOrDefaultValueProperties(): PrivateScope, Assembly, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonSerializerInternalBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    Newtonsoft.Json.JsonSerializer Serializer : Assembly, InitOnly
  Properties:
    Newtonsoft.Json.Utilities.BidirectionalDictionary`2[System.String,System.Object] DefaultReferenceMappings 'get ' : 
  Methods:
    get_DefaultReferenceMappings(): PrivateScope, Assembly, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonSerializerInternalReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonSerializerInternalBase
    Void .ctor(Newtonsoft.Json.JsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Populate(JsonReader, Object): PrivateScope, Public, HideBySig
    Deserialize(JsonReader, Type, Boolean): PrivateScope, Public, HideBySig
    GetExpectedDescription(JsonContract): PrivateScope, Assembly, HideBySig
    CreateNewDictionary(JsonReader, JsonDictionaryContract): PrivateScope, Public, HideBySig
    CreateNewObject(JsonReader, JsonObjectContract, JsonProperty, JsonProperty, String, Boolean&(Out)): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.Serialization.JsonSerializerInternalReader+PropertyPresence: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PropertyPresence None = 0 : Public, Static, Literal, HasDefault
    PropertyPresence Null = 1 : Public, Static, Literal, HasDefault
    PropertyPresence Value = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.JsonSerializerInternalWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonSerializerInternalBase
    Void .ctor(Newtonsoft.Json.JsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Serialize(JsonWriter, Object): PrivateScope, Public, HideBySig
    TryConvertToString(Object, Type, String&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Serialization.JsonSerializerProxy: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.JsonSerializer
    Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' : 
    Newtonsoft.Json.JsonConverterCollection Converters 'get ' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Events:
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error: 
  Methods:
    add_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    remove_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Converters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Binder(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetInternalSerializer(): PrivateScope, Assembly, HideBySig
    DeserializeInternal(JsonReader, Type): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    PopulateInternal(JsonReader, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SerializeInternal(JsonWriter, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Serialization.JsonStringContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonPrimitiveContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Newtonsoft.Json.Serialization.IMetadataTypeAttribute: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Type MetadataClassType 'get ' : 
  Methods:
    get_MetadataClassType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Serialization.JsonTypeReflector: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String IdPropertyName = $id : Public, Static, Literal, HasDefault
    System.String RefPropertyName = $ref : Public, Static, Literal, HasDefault
    System.String TypePropertyName = $type : Public, Static, Literal, HasDefault
    System.String ValuePropertyName = $value : Public, Static, Literal, HasDefault
    System.String ArrayValuesPropertyName = $values : Public, Static, Literal, HasDefault
    System.String ShouldSerializePrefix = ShouldSerialize : Public, Static, Literal, HasDefault
    System.String SpecifiedPostfix = Specified : Public, Static, Literal, HasDefault
  Properties:
    Boolean DynamicCodeGeneration 'get ' : 
    Boolean FullyTrusted 'get ' : 
    Newtonsoft.Json.Utilities.ReflectionDelegateFactory ReflectionDelegateFactory 'get ' : 
  Methods:
    GetJsonContainerAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetJsonObjectAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetJsonArrayAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetJsonDictionaryAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetSerializableAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetDataContractAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetDataMemberAttribute(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetObjectMemberSerialization(Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetJsonConverter(ICustomAttributeProvider, Type): PrivateScope, Public, Static, HideBySig
    GetTypeConverter(Type): PrivateScope, Public, Static, HideBySig
    GetAttribute(ICustomAttributeProvider): PrivateScope, Public, Static, HideBySig
    get_DynamicCodeGeneration(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FullyTrusted(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReflectionDelegateFactory(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.CachedAttributeGetter`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T, System.Attribute
  Methods:
    GetAttribute(ICustomAttributeProvider): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Serialization.LateBoundMetadataTypeAttribute: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IMetadataTypeAttribute
  Properties:
    System.Type MetadataClassType 'get ' : 
  Methods:
    get_MetadataClassType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Serialization.ReflectionValueProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.MemberInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IValueProvider
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetValue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.OnErrorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Utilities.Base64Encoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
  :System.Dynamic.DynamicMetaObject
    Void .ctor(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy`1[T], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    BindGetMember(GetMemberBinder): PrivateScope, Public, Virtual, HideBySig
    BindSetMember(SetMemberBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindDeleteMember(DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig
    BindConvert(ConvertBinder): PrivateScope, Public, Virtual, HideBySig
    BindInvokeMember(InvokeMemberBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindCreateInstance(CreateInstanceBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindInvoke(InvokeBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindBinaryOperation(BinaryOperationBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindUnaryOperation(UnaryOperationBinder): PrivateScope, Public, Virtual, HideBySig
    BindGetIndex(GetIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindSetIndex(SetIndexBinder, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindDeleteIndex(DeleteIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    GetDynamicMemberNames(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryGetMember(IDynamicMetaObjectProvider, String, Object&(Out)): PrivateScope, Public, Static, HideBySig
    TrySetMember(IDynamicMetaObjectProvider, String, Object): PrivateScope, Public, Static, HideBySig
    GetDynamicMemberNames(IDynamicMetaObjectProvider): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils+BinderWrapper: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String CSharpAssemblyName = Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Public, Static, Literal, HasDefault
  Methods:
    GetMember(String, Type): PrivateScope, Public, Static, HideBySig
    SetMember(String, Type): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils+NoThrowGetBinderMember: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :System.Dynamic.GetMemberBinder
    Void .ctor(System.Dynamic.GetMemberBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FallbackGetMember(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils+NoThrowSetBinderMember: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :System.Dynamic.SetMemberBinder
    Void .ctor(System.Dynamic.SetMemberBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FallbackSetMember(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils+NoThrowExpressionVisitor: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :System.Linq.Expressions.ExpressionVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object ErrorResult : Assembly, Static, InitOnly
Class Newtonsoft.Json.Utilities.DynamicWrapperBase: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Utilities.DynamicWrapper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetWrapper(Type, Type): PrivateScope, Public, Static, HideBySig
    GetUnderlyingObject(Object): PrivateScope, Public, Static, HideBySig
    CreateWrapper(Object): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.WrapperMethodBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Type, System.Reflection.Emit.TypeBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Generate(MethodInfo): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.WrapperDictionary: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetType(Type, Type): PrivateScope, Public, HideBySig
    SetType(Type, Type, Type): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.ReflectionDelegateFactory: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    CreateGet(MemberInfo): PrivateScope, Public, HideBySig
    CreateSet(MemberInfo): PrivateScope, Public, HideBySig
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Utilities.DynamicReflectionDelegateFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Utilities.ReflectionDelegateFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Utilities.DynamicReflectionDelegateFactory Instance : Public, Static
  Methods:
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    GenerateCreateSetFieldIL(FieldInfo, ILGenerator): PrivateScope, Assembly, Static, HideBySig
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    GenerateCreateSetPropertyIL(PropertyInfo, ILGenerator): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Serialization.ObjectConstructor`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.ILGeneratorExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    PushInstance(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    BoxIfNeeded(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    UnboxIfNeeded(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    CallMethod(ILGenerator, MethodInfo): PrivateScope, Public, Static, HideBySig
    Return(ILGenerator): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Utilities.ReflectionDelegateFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Utilities.ReflectionDelegateFactory Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.MethodCall`2[T,TResult]: AutoLayout, AnsiClass, Class, Sealed
  Type parameter: T
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.Utilities.StringReference: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char[] Chars 'get ' : 
    Int32 StartIndex 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Chars(): PrivateScope, Public, HideBySig, SpecialName
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.ThreadSafeStore`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Func`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(TKey): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.TypeNameHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.TypeNameHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Objects = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Arrays = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling All = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Auto = 4 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.BidirectionalDictionary`2[TFirst,TSecond]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TFirst
  Type parameter: TSecond
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[TFirst], System.Collections.Generic.IEqualityComparer`1[TSecond]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(TFirst, TSecond): PrivateScope, Public, HideBySig
    TryGetByFirst(TFirst, TSecond&(Out)): PrivateScope, Public, HideBySig
    TryGetBySecond(TSecond, TFirst&(Out)): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.ConvertUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetTypeCode(IConvertible): PrivateScope, Public, Static, HideBySig
    GetTypeCode(Object): PrivateScope, Public, Static, HideBySig
    GetTypeCode(Type): PrivateScope, Public, Static, HideBySig
    ToConvertible(Object): PrivateScope, Public, Static, HideBySig
    IsConvertible(Object): PrivateScope, Public, Static, HideBySig
    IsConvertible(Type): PrivateScope, Public, Static, HideBySig
    Convert(Object, CultureInfo, Type): PrivateScope, Public, Static, HideBySig
    TryConvert(Object, CultureInfo, Type, Object&(Out)): PrivateScope, Public, Static, HideBySig
    ConvertOrCast(Object, CultureInfo, Type): PrivateScope, Public, Static, HideBySig
    ToValue(INullable): PrivateScope, Public, Static, HideBySig
    GetConverter(Type): PrivateScope, Assembly, Static, HideBySig
    IsInteger(Object): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Utilities.ConvertUtils+TypeConvertKey: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Type, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Utilities.ConvertUtils+TypeConvertKey]
  Properties:
    System.Type InitialType 'get ' : 
    System.Type TargetType 'get ' : 
  Methods:
    get_InitialType(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetType(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(TypeConvertKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Newtonsoft.Json.Utilities.IWrappedCollection: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object UnderlyingCollection 'get ' : 
  Methods:
    get_UnderlyingCollection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Utilities.CollectionWrapper`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.ICollection`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    Newtonsoft.Json.Utilities.IWrappedCollection
    System.Collections.IList
    System.Collections.ICollection
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object UnderlyingCollection 'get ' : 
  Methods:
    Add(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_UnderlyingCollection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Utilities.DateTimeUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetUtcOffsetText(DateTime): PrivateScope, Public, Static, HideBySig
    GetUtcOffset(DateTime): PrivateScope, Public, Static, HideBySig
    ToSerializationMode(DateTimeKind): PrivateScope, Public, Static, HideBySig
Interface Newtonsoft.Json.Utilities.IWrappedDictionary: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object UnderlyingDictionary 'get ' : 
  Methods:
    get_UnderlyingDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Utilities.DictionaryWrapper`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
    Newtonsoft.Json.Utilities.IWrappedDictionary
    System.Collections.IDictionary
    System.Collections.ICollection
  Properties:
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    TValue Item [TKey] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object UnderlyingDictionary 'get ' : 
  Methods:
    Add(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_UnderlyingDictionary(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Utilities.EnumUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetFlagsValues(T): PrivateScope, Public, Static, HideBySig
    GetNamesAndValues(): PrivateScope, Public, Static, HideBySig
    GetNamesAndValues(Type): PrivateScope, Public, Static, HideBySig
    GetValues(Type): PrivateScope, Public, Static, HideBySig
    GetNames(Type): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.EnumValue`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(System.String, T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    T Value    'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Utilities.EnumValues`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Newtonsoft.Json.Utilities.EnumValue`1[T]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Utilities.JavaScriptUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    WriteEscapedJavaScriptString(TextWriter, String, Char, Boolean): PrivateScope, Public, Static, HideBySig
    ToEscapedJavaScriptString(String): PrivateScope, Public, Static, HideBySig
    ToEscapedJavaScriptString(String, Char, Boolean): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.JsonToken: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.JsonToken None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartObject = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartArray = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartConstructor = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken PropertyName = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Comment = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Raw = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Integer = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Float = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken String = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Boolean = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Null = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Undefined = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndObject = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndArray = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndConstructor = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Date = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Bytes = 17 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.StringBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    Append(Char): PrivateScope, Public, HideBySig
    Append(Char[], Int32, Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Int32, Int32): PrivateScope, Public, HideBySig
    GetInternalBuffer(): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.CollectionUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CastValid(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNullOrEmpty(ICollection`1): PrivateScope, Public, Static, HideBySig
    AddRange(IList`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AddRange(IList, IEnumerable): PrivateScope, Public, Static, HideBySig
    CreateGenericList(Type): PrivateScope, Public, Static, HideBySig
    IsDictionaryType(Type): PrivateScope, Public, Static, HideBySig
    CreateCollectionWrapper(Object): PrivateScope, Public, Static, HideBySig
    CreateDictionaryWrapper(Object): PrivateScope, Public, Static, HideBySig
    CreateList(Type, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
    ToArray(Array, Type): PrivateScope, Public, Static, HideBySig
    AddDistinct(IList`1, T): PrivateScope, Public, Static, HideBySig
    AddDistinct(IList`1, T, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ContainsValue(IEnumerable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    AddRangeDistinct(IList`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    IndexOf(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    IndexOf(IEnumerable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
Interface Newtonsoft.Json.Utilities.IWrappedList: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object UnderlyingList 'get ' : 
  Methods:
    get_UnderlyingList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Utilities.ListWrapper`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Newtonsoft.Json.Utilities.CollectionWrapper`1[T]
    Void .ctor(System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[T]
    Newtonsoft.Json.Utilities.IWrappedList
  Properties:
    T Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object UnderlyingList 'get ' : 
  Methods:
    IndexOf(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(T): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    Contains(T): PrivateScope, Public, Virtual, HideBySig
    CopyTo(T[], Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Remove(T): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_UnderlyingList(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Utilities.MathUtils: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IntLength(Int32): PrivateScope, Public, Static, HideBySig
    IntToHex(Int32): PrivateScope, Public, Static, HideBySig
    Min(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    Max(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    Max(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    ApproxEquals(Double, Double): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.Creator`1[T]: AutoLayout, AnsiClass, Class, Sealed
  Type parameter: T
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.MiscellaneousUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ValueEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    CreateArgumentOutOfRangeException(String, Object, String): PrivateScope, Public, Static, HideBySig
    TryAction(Creator`1, T&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(Object): PrivateScope, Public, Static, HideBySig
    HexToBytes(String): PrivateScope, Public, Static, HideBySig
    BytesToHex(Byte[]): PrivateScope, Public, Static, HideBySig
    BytesToHex(Byte[], Boolean): PrivateScope, Public, Static, HideBySig
    ByteArrayCompare(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetPrefix(String): PrivateScope, Public, Static, HideBySig
    GetLocalName(String): PrivateScope, Public, Static, HideBySig
    GetQualifiedNameParts(String, String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ReflectionUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    System.Type[] EmptyTypes : Public, Static, InitOnly
  Methods:
    GetCustomAttributeProvider(Object): PrivateScope, Public, Static, HideBySig
    IsVirtual(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetObjectType(Object): PrivateScope, Public, Static, HideBySig
    GetTypeName(Type, FormatterAssemblyStyle): PrivateScope, Public, Static, HideBySig
    GetTypeName(Type, FormatterAssemblyStyle, SerializationBinder): PrivateScope, Public, Static, HideBySig
    IsInstantiatableType(Type): PrivateScope, Public, Static, HideBySig
    HasDefaultConstructor(Type): PrivateScope, Public, Static, HideBySig
    HasDefaultConstructor(Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetDefaultConstructor(Type): PrivateScope, Public, Static, HideBySig
    GetDefaultConstructor(Type, Boolean): PrivateScope, Public, Static, HideBySig
    IsNullable(Type): PrivateScope, Public, Static, HideBySig
    IsNullableType(Type): PrivateScope, Public, Static, HideBySig
    EnsureNotNullableType(Type): PrivateScope, Public, Static, HideBySig
    ImplementsGenericDefinition(Type, Type): PrivateScope, Public, Static, HideBySig
    ImplementsGenericDefinition(Type, Type, Type&(Out)): PrivateScope, Public, Static, HideBySig
    InheritsGenericDefinition(Type, Type): PrivateScope, Public, Static, HideBySig
    InheritsGenericDefinition(Type, Type, Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetCollectionItemType(Type): PrivateScope, Public, Static, HideBySig
    GetDictionaryKeyValueTypes(Type, Type&(Out), Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetDictionaryValueType(Type): PrivateScope, Public, Static, HideBySig
    GetDictionaryKeyType(Type): PrivateScope, Public, Static, HideBySig
    GetMemberUnderlyingType(MemberInfo): PrivateScope, Public, Static, HideBySig
    IsIndexedProperty(MemberInfo): PrivateScope, Public, Static, HideBySig
    IsIndexedProperty(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetMemberValue(MemberInfo, Object): PrivateScope, Public, Static, HideBySig
    SetMemberValue(MemberInfo, Object, Object): PrivateScope, Public, Static, HideBySig
    CanReadMemberValue(MemberInfo, Boolean): PrivateScope, Public, Static, HideBySig
    CanSetMemberValue(MemberInfo, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetFieldsAndProperties(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    GetAttribute(ICustomAttributeProvider): PrivateScope, Public, Static, HideBySig
    GetAttribute(ICustomAttributeProvider, Boolean): PrivateScope, Public, Static, HideBySig
    GetAttributes(ICustomAttributeProvider, Boolean): PrivateScope, Public, Static, HideBySig
    MakeGenericType(Type, Type[]): PrivateScope, Public, Static, HideBySig
    CreateGeneric(Type, Type, Object[]): PrivateScope, Public, Static, HideBySig
    CreateGeneric(Type, IList`1, Object[]): PrivateScope, Public, Static, HideBySig
    CreateGeneric(Type, IList`1, Func`3, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Object[]): PrivateScope, Public, Static, HideBySig
    SplitFullyQualifiedTypeName(String, String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    GetMemberInfoFromType(Type, MemberInfo): PrivateScope, Public, Static, HideBySig
    GetFields(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    GetProperties(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    RemoveFlag(BindingFlags, BindingFlags): PrivateScope, Public, Static, HideBySig
    IsMethodOverridden(Type, Type, String): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.StringUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String CarriageReturnLineFeed = 
 : Public, Static, Literal, HasDefault
    System.String Empty =  : Public, Static, Literal, HasDefault
    Char CarriageReturn =  : Public, Static, Literal, HasDefault
    Char LineFeed = 
 : Public, Static, Literal, HasDefault
    Char Tab = 	 : Public, Static, Literal, HasDefault
  Methods:
    FormatWith(String, IFormatProvider, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object[]): PrivateScope, Public, Static, HideBySig
    IsWhiteSpace(String): PrivateScope, Public, Static, HideBySig
    NullEmptyString(String): PrivateScope, Public, Static, HideBySig
    CreateStringWriter(Int32): PrivateScope, Public, Static, HideBySig
    GetLength(String): PrivateScope, Public, Static, HideBySig
    ToCharAsUnicode(Char): PrivateScope, Public, Static, HideBySig
    ForgivingCaseSensitiveFind(IEnumerable`1, Func`2, String): PrivateScope, Public, Static, HideBySig
    ToCamelCase(String): PrivateScope, Public, Static, HideBySig
    IsHighSurrogate(Char): PrivateScope, Public, Static, HideBySig
    IsLowSurrogate(Char): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.TypeExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MemberType(MemberInfo): PrivateScope, Public, Static, HideBySig
    Module(Type): PrivateScope, Public, Static, HideBySig
    ContainsGenericParameters(Type): PrivateScope, Public, Static, HideBySig
    IsInterface(Type): PrivateScope, Public, Static, HideBySig
    IsGenericType(Type): PrivateScope, Public, Static, HideBySig
    IsGenericTypeDefinition(Type): PrivateScope, Public, Static, HideBySig
    BaseType(Type): PrivateScope, Public, Static, HideBySig
    IsEnum(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
    IsSealed(Type): PrivateScope, Public, Static, HideBySig
    IsAbstract(Type): PrivateScope, Public, Static, HideBySig
    IsVisible(Type): PrivateScope, Public, Static, HideBySig
    IsValueType(Type): PrivateScope, Public, Static, HideBySig
    AssignableToTypeName(Type, String, Type&(Out)): PrivateScope, Public, Static, HideBySig
    AssignableToTypeName(Type, String): PrivateScope, Public, Static, HideBySig
    GetGenericMethod(Type, String, Type[]): PrivateScope, Public, Static, HideBySig
    HasParameters(MethodInfo, Type[]): PrivateScope, Public, Static, HideBySig
    GetAllInterfaces(Type): PrivateScope, Public, Static, HideBySig
    GetAllMethods(Type): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ValidationUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ArgumentNotNullOrEmpty(String, String): PrivateScope, Public, Static, HideBySig
    ArgumentTypeIsEnum(Type, String): PrivateScope, Public, Static, HideBySig
    ArgumentNotNullOrEmpty(ICollection`1, String): PrivateScope, Public, Static, HideBySig
    ArgumentNotNullOrEmpty(ICollection`1, String, String): PrivateScope, Public, Static, HideBySig
    ArgumentNotNull(Object, String): PrivateScope, Public, Static, HideBySig
    ArgumentConditionTrue(Boolean, String, String): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.WriteState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.WriteState Error = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Closed = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Object = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Array = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Constructor = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Property = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Start = 6 : Public, Static, Literal, HasDefault
Class <PrivateImplementationDetails>{CC00B0CD-734D-4CBB-B58F-15B9FB0F256E}: NotPublic
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000773-1 : Assembly, Static
Class <>f__AnonymousType0`2[<Count>j__TPar,<Members>j__TPar]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: <Count>j__TPar
  Type parameter: <Members>j__TPar
    Void .ctor(<Count>j__TPar, <Members>j__TPar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    <Count>j__TPar Count 'get ' : 
    <Members>j__TPar Members 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
